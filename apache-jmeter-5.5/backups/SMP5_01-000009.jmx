<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SMP5_01" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">smp-enterprise-np.telus.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">telus.tt.omtrdc.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">www.wcstage.telus.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">b.telus.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">siteintercept.qualtrics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">telusidentity-pp.telus.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="filename">Credential.txt</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">Email,Password</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SMP5_01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://smp-enterprise-np.telus.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telus.tt.omtrdc.net/m2/telus/mbox/json?mbox=target-global-mbox&amp;mboxSession=13af4fbf5884455c8f50e2f45c5321e2&amp;mboxPC=5bf48801fc13418884d04b7ba95184d5.34_0&amp;mboxPage=b237c7b03c7942fc8c75d613442a8c18&amp;mboxRid=508290e3cd134a4ba1c6ee590fc88a5b&amp;mboxVersion=1.5.0&amp;mboxCount=1&amp;mboxTime=1685106248421&amp;mboxHost=telusidentity-pp.telus.com&amp;mboxURL=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;mboxReferrer=&amp;browserHeight=609&amp;browserWidth=1263&amp;browserTimeOffset=330&amp;screenHeight=720&amp;screenWidth=1280&amp;colorDepth=24&amp;devicePixelRatio=1.5&amp;screenOrientation=landscape&amp;webGLRenderer=ANGLE%20(Intel%2C%20Intel(R)%20Iris(R)%20Xe%20Graphics%20Direct3D11%20vs_5_0%20ps_5_0%2C%20D3D11)&amp;language=&amp;pageName=&amp;province=&amp;at_property=3bf04b3b-07e9-f142-6998-31dac9d5073e&amp;mboxMCSDID=04D2E2925EA20F6B-110F08AACA9635E2&amp;vst.trk=a.telus.com&amp;vst.trks=b.telus.com&amp;mboxMCGVID=91010605645448864083518353994611755993&amp;mboxAAMB=RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y&amp;mboxMCGLH=9" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mboxPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxPage</stringProp>
                  <stringProp name="Argument.value">b237c7b03c7942fc8c75d613442a8c18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="mboxMCSDID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxMCSDID</stringProp>
                  <stringProp name="Argument.value">04D2E2925EA20F6B-110F08AACA9635E2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screenWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenWidth</stringProp>
                  <stringProp name="Argument.value">1280</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="at_property" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at_property</stringProp>
                  <stringProp name="Argument.value">3bf04b3b-07e9-f142-6998-31dac9d5073e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vst.trk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vst.trk</stringProp>
                  <stringProp name="Argument.value">a.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="mboxTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxTime</stringProp>
                  <stringProp name="Argument.value">1685106248421</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="mboxSession" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxSession</stringProp>
                  <stringProp name="Argument.value">13af4fbf5884455c8f50e2f45c5321e2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="mboxURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mboxURL</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="webGLRenderer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">webGLRenderer</stringProp>
                  <stringProp name="Argument.value">ANGLE (Intel, Intel(R) Iris(R) Xe Graphics Direct3D11 vs_5_0 ps_5_0, D3D11)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="mbox" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mbox</stringProp>
                  <stringProp name="Argument.value">target-global-mbox</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="devicePixelRatio" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">devicePixelRatio</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenOrientation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenOrientation</stringProp>
                  <stringProp name="Argument.value">landscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="province" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">province</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxAAMB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxAAMB</stringProp>
                  <stringProp name="Argument.value">RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxReferrer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxReferrer</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxVersion</stringProp>
                  <stringProp name="Argument.value">1.5.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxMCGVID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxMCGVID</stringProp>
                  <stringProp name="Argument.value">91010605645448864083518353994611755993</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxMCGLH" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxMCGLH</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browserHeight</stringProp>
                  <stringProp name="Argument.value">609</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenHeight</stringProp>
                  <stringProp name="Argument.value">720</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxPC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxPC</stringProp>
                  <stringProp name="Argument.value">5bf48801fc13418884d04b7ba95184d5.34_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxHost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxHost</stringProp>
                  <stringProp name="Argument.value">telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserTimeOffset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browserTimeOffset</stringProp>
                  <stringProp name="Argument.value">330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vst.trks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vst.trks</stringProp>
                  <stringProp name="Argument.value">b.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxRid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxRid</stringProp>
                  <stringProp name="Argument.value">508290e3cd134a4ba1c6ee590fc88a5b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="colorDepth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">colorDepth</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browserWidth</stringProp>
                  <stringProp name="Argument.value">1263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">m2/telus/mbox/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="include" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">include</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="content_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">content_type</stringProp>
                  <stringProp name="Argument.value">callControlContainer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fields.slug" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields.slug</stringProp>
                  <stringProp name="Argument.value">home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value">en-CA-BC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Contentful-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-Contentful-User-Agent</stringProp>
                  <stringProp name="Header.value">sdk contentful.js/9.3.3; platform browser; os Windows;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer c2f6aa1b8784ee480e041542f114d910e86e98154fd4acc026e5b45a7871cb27</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="cookies" elementType="Header">
                  <stringProp name="Header.name">cookies</stringProp>
                  <stringProp name="Header.value">{&quot;AMCV_67A50FC0539F0BBD0A490D45%40AdobeOrg&quot;:&quot;-1712354808|MCIDTS|19504|MCMID|91010605645448864083518353994611755993|MCAAMLH-1685685358|9|MCAAMB-1685685358|RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y|MCOPTOUT-1685087758s|NONE|vVersion|4.3.0|MCAID|NONE&quot;,&quot;mbox&quot;:&quot;PC#5bf48801fc13418884d04b7ba95184d5.34_0#1748325361|session#13af4fbf5884455c8f50e2f45c5321e2#1685088309&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s62555623614960" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c74" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c74</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v9</stringProp>
                  <stringProp name="Argument.value">log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">jsonv</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c34" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c34</stringProp>
                  <stringProp name="Argument.value">D=v52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v148" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v148</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5stb2m1xzdusstoprfxpwqnj&amp;redirect_uri=https%3a%2f%2fsmp-enterprise-np.telus.com&amp;state=bdukvn6umhmterg4bnhwe46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v220" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v220</stringProp>
                  <stringProp name="Argument.value">2023-05-19T17:20:43Z</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamlh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamlh</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageName</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v100" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v100</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQB</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nsid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQE</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamb</stringProp>
                  <stringProp name="Argument.value">RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sdid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sdid</stringProp>
                  <stringProp name="Argument.value">04D2E2925EA20F6B-110F08AACA9635E2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="events" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">events</stringProp>
                  <stringProp name="Argument.value">event370,event512,event452,event1,event510,event450,event17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c46" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c46</stringProp>
                  <stringProp name="Argument.value">D=v72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c45" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c45</stringProp>
                  <stringProp name="Argument.value">D=v71</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c47" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c47</stringProp>
                  <stringProp name="Argument.value">D=v73</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v136" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v136</stringProp>
                  <stringProp name="Argument.value">6.247</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c5</stringProp>
                  <stringProp name="Argument.value">D=v21</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c6</stringProp>
                  <stringProp name="Argument.value">D=v22</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c7</stringProp>
                  <stringProp name="Argument.value">D=v18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c8</stringProp>
                  <stringProp name="Argument.value">D=v19</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c9</stringProp>
                  <stringProp name="Argument.value">my-telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v23</stringProp>
                  <stringProp name="Argument.value">repeat</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c53" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c53</stringProp>
                  <stringProp name="Argument.value">consumer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="server" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">server</stringProp>
                  <stringProp name="Argument.value">telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c10" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c10</stringProp>
                  <stringProp name="Argument.value">D=v9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="l2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">l2</stringProp>
                  <stringProp name="Argument.value">tcom_new_loginpage_selfreglink, tcom_my-telus_login_eversafe_learn-more</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c59" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c59</stringProp>
                  <stringProp name="Argument.value">D=v149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bh</stringProp>
                  <stringProp name="Argument.value">609</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v202" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v202</stringProp>
                  <stringProp name="Argument.value">pl: set salesForceSegment</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">91010605645448864083518353994611755993</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">h1</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v203" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v203</stringProp>
                  <stringProp name="Argument.value">ST Call</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="d." elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">d.</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">h2</stringProp>
                  <stringProp name="Argument.value">en,my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v201" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v201</stringProp>
                  <stringProp name="Argument.value">pl: page view (ver 1.6.1)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="products" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">products</stringProp>
                  <stringProp name="Argument.value">;intcmp_imp;;;event17=1;evar25=tcom_new_loginpage_selfreglink,;intcmp_imp;;;event17=1;evar25= tcom_my-telus_login_eversafe_learn-more</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v72" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v72</stringProp>
                  <stringProp name="Argument.value">friday</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v71" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v71</stringProp>
                  <stringProp name="Argument.value">3:30am</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v30" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v30</stringProp>
                  <stringProp name="Argument.value">D=mid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v73" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v73</stringProp>
                  <stringProp name="Argument.value">weekday</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v32" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v32</stringProp>
                  <stringProp name="Argument.value">not logged in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bw</stringProp>
                  <stringProp name="Argument.value">1280</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="-g" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">-g</stringProp>
                  <stringProp name="Argument.value">201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cc</stringProp>
                  <stringProp name="Argument.value">CAD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mcorgid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mcorgid</stringProp>
                  <stringProp name="Argument.value">67A50FC0539F0BBD0A490D45@AdobeOrg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c66" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c66</stringProp>
                  <stringProp name="Argument.value">pl: page view (ver 1.6.1)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c21" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c21</stringProp>
                  <stringProp name="Argument.value">?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5stb2m1xzdusstoprfxpwqnj&amp;redirect_uri=https%3a%2f%2fsmp-enterprise-np.telus.com&amp;state=bdukvn6umhmterg4bnhwe46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c68" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c68</stringProp>
                  <stringProp name="Argument.value">ST Call</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ch</stringProp>
                  <stringProp name="Argument.value">my-telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c23</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c67" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c67</stringProp>
                  <stringProp name="Argument.value">pl: set salesForceSegment</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="g" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">g</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v159" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v159</stringProp>
                  <stringProp name="Argument.value">not available</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="j" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j</stringProp>
                  <stringProp name="Argument.value">1.6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c29" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c29</stringProp>
                  <stringProp name="Argument.value">D=v29</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v157" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v157</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ndh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ndh</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">1280x720</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">26/4/2023 13:4:10 5 -330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name=".d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">.d</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v149" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v149</stringProp>
                  <stringProp name="Argument.value">Launch - MyTelus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v88" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v88</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v1</stringProp>
                  <stringProp name="Argument.value">bc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v2</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c71" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c71</stringProp>
                  <stringProp name="Argument.value">,5d,5k,5l,5m,5s,6G,6K,6M,6O,6b,6d,6e,Dc,Fq,Eu,7r,Fo,Es,85</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c70" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c70</stringProp>
                  <stringProp name="Argument.value">72,1,2,9,N,U,W,17,18,19,1O,1a,28,2K,2L,2T,2V,39,3A,3B,3S,4n,4o,4p,4q,4r,4s,51,53,59,5E,5P,5Q,5R,5X</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">b/ss/teluscomdev/10/JS-2.9.0-LDQM/s62555623614960</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://b.telus.com/ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=3031787a-15cd-45b4-ad82-7f208464e0fc" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;eventMergeId&quot;:&quot;%eventMergeID%&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&quot;,&quot;name&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;siteSection&quot;:&quot;my-telus&quot;,&quot;_telus&quot;:{&quot;customSiteSection&quot;:&quot;my-telus&quot;,&quot;primarySiteSection&quot;:&quot;my-telus_log-in&quot;,&quot;customPageViews&quot;:1,&quot;pageName&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;province&quot;:&quot;bc&quot;,&quot;pageLanguage&quot;:&quot;en&quot;,&quot;webApp&quot;:&quot;web&quot;,&quot;dataLayerType&quot;:&quot;acdl&quot;,&quot;brand&quot;:&quot;telus&quot;,&quot;edgeServer&quot;:&quot;edge.adobedc.net&quot;,&quot;tagManager&quot;:&quot;adobe_launch&quot;,&quot;adobeDataLayerBuilder&quot;:&quot;alloyAnalytics&quot;,&quot;lob&quot;:&quot;my-telus&quot;,&quot;pageType&quot;:&quot;log-in&quot;,&quot;userLoginStatus&quot;:&quot;logged_out&quot;,&quot;ecid&quot;:&quot;91010605645448864083518353994611755993&quot;,&quot;site&quot;:&quot;telus.com&quot;,&quot;userAccountID&quot;:&quot;&quot;,&quot;queryString&quot;:&quot;?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5stb2m1xzdusstoprfxpwqnj&amp;redirect_uri=https%3a%2f%2fsmp-enterprise-np.telus.com&amp;state=bdukvn6umhmterg4bnhwe46j&amp;scope=openid%20profile%20email%pii&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&quot;,&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2&quot;,&quot;pageURL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2&quot;,&quot;crid&quot;:&quot;&quot;,&quot;timezoneOffset&quot;:&quot;1304|5.5&quot;,&quot;timePart&quot;:&quot;year=2023|month=may|date=26|day=friday|time=3:34am&quot;,&quot;newRepeat&quot;:&quot;repeat&quot;,&quot;pageLoadTime&quot;:&quot;2023-05-26T07:34:10.577Z&quot;,&quot;decibelID&quot;:&quot;&quot;,&quot;checkoutType&quot;:&quot;&quot;,&quot;banType&quot;:&quot;&quot;},&quot;pageViews&quot;:{&quot;value&quot;:1},&quot;server&quot;:&quot;https://telusidentity-pp.telus.com&quot;},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;},&quot;webInteraction&quot;:{&quot;_telus&quot;:{&quot;toolUsageStart&quot;:1,&quot;toolName&quot;:&quot;login_tool&quot;,&quot;cta&quot;:&quot;&quot;}}},&quot;device&quot;:{&quot;screenHeight&quot;:720,&quot;screenWidth&quot;:1280,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1263,&quot;viewportHeight&quot;:609,&quot;userAgentClientHints&quot;:{&quot;architecture&quot;:&quot;x86&quot;,&quot;bitness&quot;:&quot;64&quot;,&quot;model&quot;:&quot;&quot;,&quot;platformVersion&quot;:&quot;10.0.0&quot;,&quot;wow64&quot;:false}}},&quot;placeContext&quot;:{&quot;localTimezoneOffset&quot;:-330,&quot;localTime&quot;:&quot;2023-05-26T13:04:10.536+05:30&quot;},&quot;timestamp&quot;:&quot;2023-05-26T07:34:10.537Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.15.0+2.16.1&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;marketing&quot;:{&quot;_telus&quot;:{}},&quot;commerce&quot;:{&quot;_telus&quot;:{}},&quot;productListItems&quot;:[],&quot;search&quot;:{&quot;_telus&quot;:{}},&quot;identityMap&quot;:{}},&quot;query&quot;:{&quot;personalization&quot;:{&quot;schemas&quot;:[&quot;https://ns.adobe.com/personalization/default-content-item&quot;,&quot;https://ns.adobe.com/personalization/html-content-item&quot;,&quot;https://ns.adobe.com/personalization/json-content-item&quot;,&quot;https://ns.adobe.com/personalization/redirect-item&quot;,&quot;https://ns.adobe.com/personalization/dom-action&quot;],&quot;decisionScopes&quot;:[&quot;__view__&quot;],&quot;surfaces&quot;:[&quot;web://telusidentity-pp.telus.com/as/authorization.oauth2&quot;]}}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;telus.com&quot;,&quot;cookiesEnabled&quot;:true}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=3031787a-15cd-45b4-ad82-7f208464e0fc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_ZoneID=ZN_ezYilXhyzPbAMLP&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ZoneID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_ZoneID</stringProp>
                  <stringProp name="Argument.value">ZN_ezYilXhyzPbAMLP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_LOC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_LOC</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Timestamp</stringProp>
                  <stringProp name="Argument.value">2023-05-26T07:34:11.677Z</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasAnalyticsConsent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasAnalyticsConsent</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Targeting.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/dc/sed-telus-a2b646e2?key=AIzaSyDsCAtzgd6ckzbiXwzmWMJoC0UPQEu9QhA" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDsCAtzgd6ckzbiXwzmWMJoC0UPQEu9QhA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">A_uZoFaIAQAA7XnyBHCZ2K31194YkwRoJyXRXHhgoeOnImbX36286nRg7xW-Ac5sHyOucn0ewH8AAEB3AAAAAA|1|0|1f17cdeb90f699476b472f2e5ed8b359a16a79d5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/dc/sed-telus-a2b646e2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryBxF0tRurkniA7kdy</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m&amp;fq=load" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fq</stringProp>
                  <stringProp name="Argument.value">load</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="3wEAAG7r53WlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbtxPTG8HxcsyS584w3tv/7X3XBhh2jVPTOvH 65Bf8dagkw4E94sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n Tkmdv5neFnaOVoyhxrmYo8HGoj1MDfMu4qrAe8wDhENWHn6KtGBbbrGN3k3hIsaFL0aCxPKSeWOJaz7yxIGnypdscHj8eAKHYBO qfqmriqES5dMi2wv yiA/ln2 nMAUf0V kRrti916wLE3A96owKxPL5xNaOK6scGU7xdZpyvH6ijAXG9LUMO4nuaOIcA32JpcHLq5CrbKC5GUbQafQ/Cfq Qh6MU0n1tEDetzs7rdIfH2S4Ad3PPDYrnHej1y9iAWc1jDCSjYZQKDP5C6qg1FIm69413AKjDaJqmQgZJ5ZwDxN6epoCaDkX3q4Cdkhc9Uo/dRoc7xUdyCHvl8OwNbYrKETBGe neY555EFSeW94jbPRDJ pUTyDY9eo1oWjnkhi18msR4GxDR0n1vze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1NyQYAAFbJ83sK8Lwg1dpYva86kJHleAfkiOwTptN5AcIUuoyTBH6U6ify4ep8PkOdLhUqyilx5AHru ryhkBHkFn6QD eLuy/BvgVaQE77E76CJXA27FNX5BQd3e19UAw6Q42CP6y3bV5wxRyADUwA8MI2L6b6joKNHnJdStDy9qz7TMS0cRBpHJwRuENwGWhv4XkRkKhldSWDTrRRt2tyO2FuJWTom9yNKow4fGBdtoU/TJfDTSG5SBPa 7FgE//Lt3LHRKn YOVaS6bQiSrrKe9 JMgRhbcaG3ccA6rlua7mQuIX79frjB9wTeAsVv3iRoMMpgVpVtysCZo/BjRyFtuynywAJ54H8yF/oNIBetAc9X4A6egWGrcdSgh1lrkJtIp2DAtYFKsg16iEQ0JbtAuawfrZKPZwolSr1ZmbjLejJC6KJjOz3tPJznSCoXvFej1itKVUddxB2a/acUTRflCr7QtPre/r5FnAf/LNZviSxNDsMYE9rnE 5KJBEGi5pmciwxmWd3ACodvy19ZcDu68/Z4LN XUNqjOihXe12bROUdYPAy2RlrMWaNbmG7ppn2D1rIM9 nYccvUMVk67RkK2HNG9rx3xFNc4tbx8Uu2TU5IUdpMQW1zKZTOCUZ7zhj8dVq58KRIQMZdwq8hnTGsKBTxOdXg9J9rQ2w2ELkeUtYL8l0f9iN1HyWjCtAvfa7K31Kqj5zB8diSU3rC7GndVujMgLbLomj4ZG3JFq7G2liymqYBHY2X9rt/ErrEPhsLHaggqqhKyKGnO2mtfIIeXgGmjFc25qrphhzBTWJ4 WH2nmrO/chTwDCM5K4L3aG JwA6kRo tFdmPqFmQ60bowtPOCexWm4BdvNgeU8krsxDHMstrRIfxATH0RcLiiIalUwyGu3o61PLjm8nt0saNKCroEUuDn31Ps4snsf2jHM7 7qdnbF7Jz KOllAg4dLC4lPDtvvmoPZoA9HiTjWjTV79rXgI/w3X28t4IToTBfReKYRPXurmPh70r5uI8lPLNXgJYRrtoKZSddTO0IVHC8bVOji 3Q7a9OQH8BMgckpGpJaJlciDsFuVNjBZvum6dYODtxuzNwv8EArQo5S6cuKj2EK21UAm7UcRWfOscnA0ypQX5QPpU8qpAWggjWvNJXxdI8tWn5yocaRl1Hi Kn7Inog7K7SqcuhCvtuNPq6hxwjkkqBjx4sLF3H8Q/vv2mr99IIdiKn84P4UHaB1zqt85hHpNb8VT3m8ySHTo2T1ettCGbu GxI5c2lBg7ko0HnfS5eAY1PqrEZ6uZFXYCJNa1NQ5EcYZ0C6lefkL2J/cocwz3TjMHVcRNBvS2IrKa /W/1ZR2r0xT0ge/gqJxBz7SyXRamlOE0z8BK7bplmXPIRgbJn68BJsj2Z/WTnkrrROnqED/4iUJxK9a84FU01cSJFGofbdjxKsOJqTB4nEFjGn1JoX9D0PQoTFP8bL6D3eyRLctXm9D6TY29jElY2Ztl1MbMLIJPZeQOXnIBHq15P5uvBCq6/6BNuPZ27cQYCJRFTvkNob5ObybUolHIv9/o7h5gLiRbS3ivgPKt/CfIAcU1ij4xIQyziJb/GpDOUp8SOtjaB8wohTqbU2iZ/QVdE9XbcJYxm1KOgIuK6Pke4vOrv iTJQmnRryQPmR1vPMbyZSq6pU11oVGVgcck/HLSTQ8SxG/gs97bLxAHT5Nt3UKUrrES/m52Zif8mLTE QoTQDgMbGfYaSCfsRKuZhx5 8eOzaVy1qZhjHhnj8VFdngm64/OReJq/Qj81UcJeE5j6Zz5fj9IIq9rNud3fKOl3tNmTvCYgOX4LfPMWkU/sM8LQoXEKbo/uK 0J869lb2YMk23HhzJWzcuUdh4rOE6mlAmoJgeMZENWm1H/Vsksg/g1KeI3vL1ELka41S1LWXczLtO01Qd9 A6vmmS Z3uzTEJwmAySmZZFwFsL9Uh7Gy/u4zTowycGtuOSw4fMog0AFtLHJxUvIgEKTUJ1ENi2WhTL05aIiHggLrlYnbwwBpHExU8OUar3q5FTfVh/O4EUYFX084gYr1eOcaxK30fq7hM/NyZjWvTPsqe 3Kk9Le3ajDYraSyBnEfPwVsaNVZnZzmambHgMIq8RzBEwBb9AzE3 IU6JUM1PcSk6TVcRqu In09pD4a95bVmmfST9xPctv2PnKV9T67bY3KRHVDhUb6LEHI5U5VScTa6DpTukswhCcnI0Bj1twFj6AdNBNTCnOrCRRavZIg3EKGyKjhrtJYX4vU2ugH7BtLWsxkeUANqeWpXeJA/txl5ZtWl2QcRxQ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3wEAAG7r53WlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbtxPTG8HxcsyS584w3tv/7X3XBhh2jVPTOvH 65Bf8dagkw4E94sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n Tkmdv5neFnaOVoyhxrmYo8HGoj1MDfMu4qrAe8wDhENWHn6KtGBbbrGN3k3hIsaFL0aCxPKSeWOJaz7yxIGnypdscHj8eAKHYBO qfqmriqES5dMi2wv yiA/ln2 nMAUf0V kRrti916wLE3A96owKxPL5xNaOK6scGU7xdZpyvH6ijAXG9LUMO4nuaOIcA32JpcHLq5CrbKC5GUbQafQ/Cfq Qh6MU0n1tEDetzs7rdIfH2S4Ad3PPDYrnHej1y9iAWc1jDCSjYZQKDP5C6qg1FIm69413AKjDaJqmQgZJ5ZwDxN6epoCaDkX3q4Cdkhc9Uo/dRoc7xUdyCHvl8OwNbYrKETBGe neY555EFSeW94jbPRDJ pUTyDY9eo1oWjnkhi18msR4GxDR0n1vze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1NyQYAAFbJ83sK8Lwg1dpYva86kJHleAfkiOwTptN5AcIUuoyTBH6U6ify4ep8PkOdLhUqyilx5AHru ryhkBHkFn6QD eLuy/BvgVaQE77E76CJXA27FNX5BQd3e19UAw6Q42CP6y3bV5wxRyADUwA8MI2L6b6joKNHnJdStDy9qz7TMS0cRBpHJwRuENwGWhv4XkRkKhldSWDTrRRt2tyO2FuJWTom9yNKow4fGBdtoU/TJfDTSG5SBPa 7FgE//Lt3LHRKn YOVaS6bQiSrrKe9 JMgRhbcaG3ccA6rlua7mQuIX79frjB9wTeAsVv3iRoMMpgVpVtysCZo/BjRyFtuynywAJ54H8yF/oNIBetAc9X4A6egWGrcdSgh1lrkJtIp2DAtYFKsg16iEQ0JbtAuawfrZKPZwolSr1ZmbjLejJC6KJjOz3tPJznSCoXvFej1itKVUddxB2a/acUTRflCr7QtPre/r5FnAf/LNZviSxNDsMYE9rnE 5KJBEGi5pmciwxmWd3ACodvy19ZcDu68/Z4LN XUNqjOihXe12bROUdYPAy2RlrMWaNbmG7ppn2D1rIM9 nYccvUMVk67RkK2HNG9rx3xFNc4tbx8Uu2TU5IUdpMQW1zKZTOCUZ7zhj8dVq58KRIQMZdwq8hnTGsKBTxOdXg9J9rQ2w2ELkeUtYL8l0f9iN1HyWjCtAvfa7K31Kqj5zB8diSU3rC7GndVujMgLbLomj4ZG3JFq7G2liymqYBHY2X9rt/ErrEPhsLHaggqqhKyKGnO2mtfIIeXgGmjFc25qrphhzBTWJ4 WH2nmrO/chTwDCM5K4L3aG JwA6kRo tFdmPqFmQ60bowtPOCexWm4BdvNgeU8krsxDHMstrRIfxATH0RcLiiIalUwyGu3o61PLjm8nt0saNKCroEUuDn31Ps4snsf2jHM7 7qdnbF7Jz KOllAg4dLC4lPDtvvmoPZoA9HiTjWjTV79rXgI/w3X28t4IToTBfReKYRPXurmPh70r5uI8lPLNXgJYRrtoKZSddTO0IVHC8bVOji 3Q7a9OQH8BMgckpGpJaJlciDsFuVNjBZvum6dYODtxuzNwv8EArQo5S6cuKj2EK21UAm7UcRWfOscnA0ypQX5QPpU8qpAWggjWvNJXxdI8tWn5yocaRl1Hi Kn7Inog7K7SqcuhCvtuNPq6hxwjkkqBjx4sLF3H8Q/vv2mr99IIdiKn84P4UHaB1zqt85hHpNb8VT3m8ySHTo2T1ettCGbu GxI5c2lBg7ko0HnfS5eAY1PqrEZ6uZFXYCJNa1NQ5EcYZ0C6lefkL2J/cocwz3TjMHVcRNBvS2IrKa /W/1ZR2r0xT0ge/gqJxBz7SyXRamlOE0z8BK7bplmXPIRgbJn68BJsj2Z/WTnkrrROnqED/4iUJxK9a84FU01cSJFGofbdjxKsOJqTB4nEFjGn1JoX9D0PQoTFP8bL6D3eyRLctXm9D6TY29jElY2Ztl1MbMLIJPZeQOXnIBHq15P5uvBCq6/6BNuPZ27cQYCJRFTvkNob5ObybUolHIv9/o7h5gLiRbS3ivgPKt/CfIAcU1ij4xIQyziJb/GpDOUp8SOtjaB8wohTqbU2iZ/QVdE9XbcJYxm1KOgIuK6Pke4vOrv iTJQmnRryQPmR1vPMbyZSq6pU11oVGVgcck/HLSTQ8SxG/gs97bLxAHT5Nt3UKUrrES/m52Zif8mLTE QoTQDgMbGfYaSCfsRKuZhx5 8eOzaVy1qZhjHhnj8VFdngm64/OReJq/Qj81UcJeE5j6Zz5fj9IIq9rNud3fKOl3tNmTvCYgOX4LfPMWkU/sM8LQoXEKbo/uK 0J869lb2YMk23HhzJWzcuUdh4rOE6mlAmoJgeMZENWm1H/Vsksg/g1KeI3vL1ELka41S1LWXczLtO01Qd9 A6vmmS Z3uzTEJwmAySmZZFwFsL9Uh7Gy/u4zTowycGtuOSw4fMog0AFtLHJxUvIgEKTUJ1ENi2WhTL05aIiHggLrlYnbwwBpHExU8OUar3q5FTfVh/O4EUYFX084gYr1eOcaxK30fq7hM/NyZjWvTPsqe 3Kk9Le3ajDYraSyBnEfPwVsaNVZnZzmambHgMIq8RzBEwBb9AzE3 IU6JUM1PcSk6TVcRqu In09pD4a95bVmmfST9xPctv2PnKV9T67bY3KRHVDhUb6LEHI5U5VScTa6DpTukswhCcnI0Bj1twFj6AdNBNTCnOrCRRavZIg3EKGyKjhrtJYX4vU2ugH7BtLWsxkeUANqeWpXeJA/txl5ZtWl2QcRxQ</stringProp>
                  <stringProp name="Argument.value">=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/dip/v1/dip" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">AfVJcGQAAAAAHiFnSZ+u69a8AS5Rv6BY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ls" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ls</stringProp>
                  <stringProp name="Argument.value">AfVJcGQAAAAAHiFnSZ+u69a8AS5Rv6BY</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="esi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">esi</stringProp>
                  <stringProp name="Argument.value">xEOrEK8cf4UKnPdfy+98JTJDXfPQPYoy6uq1kp2a1XVtskAaOFS1444067RIWZEZ4g6VDN8X+suLK1/qfB2mpBsPzyh+10Q+5PdO0VTeYOtSx1GNbGMGYQ/BGaoyAgccAZXhoQcJ3W+M4i71oagR4GAKe9X8mD4UrI5yspI6Hg9cYUnsvpguVxR1PAMWJWqmlncQqQEqEQKHDSOXQlD9bUNY1OsqyGqa/chI4pgraY9YaphctsWcPlMrIk2cwCR+K7/9Ol5wWSm7XDR2Tdne/3Wjxi8=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">sed-telus-a2b646e2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/dip/v1/dip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-dtpc" elementType="Header">
                  <stringProp name="Header.name">x-dtpc</stringProp>
                  <stringProp name="Header.value">3$286446273_97h6vLMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0e0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.wcstage.telus.com/chat/api/bootstrap?route=as%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;language=en&amp;province=bc&amp;device=desktop&amp;segmentID=false" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="route" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">route</stringProp>
                  <stringProp name="Argument.value">as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="province" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">province</stringProp>
                  <stringProp name="Argument.value">bc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="segmentID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">segmentID</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="device" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">chat/api/bootstrap</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_9NY1LTbNGlcuqoJ&amp;Version=9&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">SI_9NY1LTbNGlcuqoJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_9NY1LTbNGlcuqoJ&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_InterceptID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_InterceptID</stringProp>
                  <stringProp name="Argument.value">SI_9NY1LTbNGlcuqoJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">CR_0kV8K7YsnRbfrrn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_1BNWSpjiMtF0VMx&amp;Version=14&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">SI_1BNWSpjiMtF0VMx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_1BNWSpjiMtF0VMx&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_InterceptID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_InterceptID</stringProp>
                  <stringProp name="Argument.value">SI_1BNWSpjiMtF0VMx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">CR_0kV8K7YsnRbfrrn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=3&amp;flavor=post&amp;vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=2952748988&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">2952748988</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1685086443283|0|dn|-1|svtrg|1|svm|i1^sk0^sh0,2|2|x|xhr|x|1685086448429|1685086448828|dn|731|xu|https://telus.tt.omtrdc.net/m2/telus/mbox/json?mbox=target-global-mbox&amp;mboxSession=13af4fbf5884455c8f50e2f45c5321e2&amp;mboxPC=5bf48801fc13418884d04b7ba95184d5.34_0&amp;mboxPage=b237c7b03c7942fc8c75d613442a8c18&amp;mboxRid=508290e3cd134a4ba1c6ee590fc88a5b&amp;mboxVersion=1.5.0&amp;mboxCount=1&amp;mboxTime=1685106248421&amp;mboxHost=telusidentity-pp.telus.com&amp;mboxURL=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOpr...|svtrg|1|svm|i1^sk0^sh0|xcs|399|xce|399,2|3|x|xhr|x|1685086449498|1685086450505|dn|979|xu|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086449500e0f0g0h0i0j0k464l987m987u473v173w173T-1z11I1M-813066374V0W1|xcs|1007|xce|1007|rc|401,2|4|x|xhr|x|1685086450547|1685086450899|dn|989|xu|https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s62555623614960|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086450549e0m346T-2z11I1|xcs|350|xce|352,2|5|x|xhr|x|1685086451678|1685086452173|dn|993|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_ZoneID=ZN_ezYilXhyzPbAMLP&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086451681e0f0g0h0i0j0k3l448m485u5972v5672w89852T-3z11I1|xcs|490|xce|495,2|6|x|xhr|x|1685086452626|1685086453151|dn|996|xu|/__imp_apg__/api/dip/v1/dip|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086452630e0f0g0h0i0j0k3l520m521u389v89w79T-4z11I1|xcs|525|xce|525,2|7|x|xhr|x|1685086452647|1685086453187|dn|996|xu|https://www.wcstage.telus.com/chat/api/bootstrap?route=as%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;language=en&amp;province=bc&amp;device=desktop&amp;segmentID=false|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086452649e0f0g0h0i0j0k3l506m506u331v31w31T-5z11I1M890236227V0W1|xcs|540|xce|540,2|8|x|xhr|x|1685086452666|1685086453119|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_9NY1LTbNGlcuqoJ&amp;Version=9&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086452668e0m394T-6z11I1|xcs|453|xce|453,2|9|x|xhr|x|1685086452668|1685086453118|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_9NY1LTbNGlcuqoJ&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086452671e0m391T-7z11I1|xcs|450|xce|450,2|10|x|xhr|x|1685086452672|1685086453116|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_1BNWSpjiMtF0VMx&amp;Version=14&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086452674e0m387T-8z11I1|xcs|443|xce|444,2|11|x|xhr|x|1685086452674|1685086453117|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_1BNWSpjiMtF0VMx&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685086452677e0m384T-9z11I1|xcs|443|xce|443$PV=1$rId=RID_1109281689$rpId=-2066293403$md=mdcc1,en;mdcc2,BC$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=210$app=72172083ddd940ed$vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0$fId=286446273_97$v=10257221222094147$time=1685086453302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=3&amp;flavor=post&amp;vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=4291697928&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">4291697928</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1685086443283|1685086453510|dn|998|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0,2|13|_event_|1685086443283|_vc_|V|10227^pc|VCD|1227|VCDS|7|VCS|10292|VCO|11309|VCI|0|VE|1156^p4^p4472^ps^s#controls-5c32565c-a0ba-42be-8060-34d2cf2285fa|S|3420,2|14|_event_|1685086443283|_wv_|lcpE|IMG|lcpSel|...img.Image__StyledImage-b16p20-0 ieZKSZ|lcpS|44057|lcpT|3507|lcpU|https://www.wcstage.telus.com/telus-login/static/phone_5Fgrey_5Fen.png|lcpLT|3507|fcp|3087|fp|3087|cls|0.0122|lt|797,2|2|x|xhr|x|1685086448429|1685086448828|dn|731|xu|https://telus.tt.omtrdc.net/m2/telus/mbox/json?mbox=target-global-mbox&amp;mboxSession=13af4fbf5884455c8f50e2f45c5321e2&amp;mboxPC=5bf48801fc13418884d04b7ba95184d5.34_0&amp;mboxPage=b237c7b03c7942fc8c75d613442a8c18&amp;mboxRid=508290e3cd134a4ba1c6ee590fc88a5b&amp;mboxVersion=1.5.0&amp;mboxCount=1&amp;mboxTime=1685106248421&amp;mboxHost=telusidentity-pp.telus.com&amp;mboxURL=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOpr...|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xcs|399|xce|399,2|3|x|xhr|x|1685086449498|1685086450505|dn|979|xu|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086449500e0f0g0h0i0j0k464l987m987u473v173w173T-10z1I1M-813066374V0W1|xcs|1007|xce|1007|rc|401,2|4|x|xhr|x|1685086450547|1685086450899|dn|989|xu|https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s62555623614960|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086450549e0m346T-11z1I1|xcs|350|xce|352,2|5|x|xhr|x|1685086451678|1685086452173|dn|993|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_ZoneID=ZN_ezYilXhyzPbAMLP&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086451681e0f0g0h0i0j0k3l448m485u5972v5672w89852T-12z1I1|xcs|490|xce|495,2|6|x|xhr|x|1685086452626|1685086453151|dn|996|xu|/__imp_apg__/api/dip/v1/dip|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086452630e0f0g0h0i0j0k3l520m521u389v89w79T-13z1I1|xcs|525|xce|525,2|7|x|xhr|x|1685086452647|1685086453187|dn|996|xu|https://www.wcstage.telus.com/chat/api/bootstrap?route=as%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;language=en&amp;province=bc&amp;device=desktop&amp;segmentID=false|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086452649e0f0g0h0i0j0k3l506m506u331v31w31T-14z1I1M890236227V0W1|xcs|540|xce|540,2|8|x|xhr|x|1685086452666|1685086453119|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_9NY1LTbNGlcuqoJ&amp;Version=9&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086452668e0m394T-15z1I1|xcs|453|xce|453,2|9|x|xhr|x|1685086452668|1685086453118|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_9NY1LTbNGlcuqoJ&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086452671e0m391T-16z1I1|xcs|450|xce|450,2|10|x|xhr|x|1685086452672|1685086453116|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_1BNWSpjiMtF0VMx&amp;Version=14&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086452674e0m387T-17z1I1|xcs|443|xce|444,2|11|x|xhr|x|1685086452674|1685086453117|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_1BNWSpjiMtF0VMx&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685086452677e0m384T-18z1I1|xcs|443|xce|443,2|12|_onload_|_load_|-|1685086453496|1685086453503|dn|998|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0,1|15|_event_|1685086443283|_view_|tvtrg|1|tvm|i1^sk0^sh0$rId=RID_1109281689$rpId=-2066293403$domR=1685086453491$tvn=/as/authorization.oauth2$tvt=1685086443283$tvm=i1;k0;h0$tvtrg=1$w=1280$h=609$sw=1280$sh=720$nt=a0b1685086443283e413f413g413h413i413j413k419l1114m1678o6248p6248q6248r10208s10213t10220u61913v61613w195153$ni=3g|1.35$fd=r^sdecibelinsight$md=mdcc1,en;mdcc2,BC$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=210$app=72172083ddd940ed$vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0$fId=286446273_97$v=10257221222094147$vID=1685080547928CJSVIMC7KMP9DB2G7PAUV32EEG037DKD$time=1685086454817</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gwAAAF6HuXelVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbtxPTG8HxcsyS584w3tv76WvU932GSpL3qLc8yBF9Q5cRM74UTxALfYz4tKI8sbdi3piFNUilqPxY/l79BZ21U Ex9TY7t37by94ScWXEeUbn40h5mSlgpCpsd7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gwAAAF6HuXelVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbtxPTG8HxcsyS584w3tv76WvU932GSpL3qLc8yBF9Q5cRM74UTxALfYz4tKI8sbdi3piFNUilqPxY/l79BZ21U Ex9TY7t37by94ScWXEeUbn40h5mSlgpCpsd7</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=3&amp;flavor=post&amp;vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=171560118&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">171560118</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$tvn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$tvn</stringProp>
                  <stringProp name="Argument.value">/as/authorization.oauth2$tvt=1685086443283$tvm=i1;k0;h0$tvtrg=1$ni=3g|1.35$rt=1-1685086443283;https://googleads.g.doubleclick.net/pagead/viewthroughconversion/1066229737/?value=1.00&amp;currency_5Fcode=CAD&amp;label=P64wCJ2t6mwQ6b-1_5FAM&amp;guid=ON&amp;script=0|b7711c0d1354e1355f1355g1355h1355i1355j1355k1357l1763m1764u342v42w42I7|https://www.facebook.com/tr?id=_252010152517905794979&amp;ev=AAMSegment&amp;cd[segID]=12725403^c14689457&amp;noscript=1|b7711e0m1001I7|https://telusidentity-pp.telus.com/telus-login/static/telus_5Fcommon.js?cache|b1131e0f0g0h0i0j0k18l479m480u4281v3981w9857K1I12|https://telusidentity-pp.telus.com/telus-login/static/telus_5Fcommon.js?async|b1131e0f0g0h0i0j0k27l490m490u1272v972w972I12|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/js/sed-telus-a2b646e2.js|b1131e0f0g0h0i0j0k3295l3814m4698u296762v296462w548424I12|https://www.wcstage.telus.com/telus-login/static/styles_5F76b5e65df0342e448993.css|b1132e0m386K1I11|https://www.wcstage.telus.com/telus-login/static/vendor_5F4e71524620623c7b657c.js|b1132e0m1409K1I11|https://www.wcstage.telus.com/telus-login/static/bundle_5F1c52c8075144b253b3ca.js|b1132e0m1420K1I11|https://cdn.polyfill.io/v3/polyfill.js?features=es6^ces5^cSet^cArray.prototype.includes^cObject.entries^cArray.prototype.entries|b1132e0f0g0h0i0j0k31l359m360u525v225w306K1I11|https://s3.amazonaws.com/telusdigital-ui/staging/lib/chat/latest/js/chat_5Fwidget_5Fcomponent.js|b1132e0m4600K1I11|https://cdn.telus.digital/thorium/core/fonts/aff68211-86bb-476d-882e-f7a3face144c.woff2|b1133e0m2300I11|https://cdn.telus.digital/thorium/core/fonts/etext/b8765d4b-d9a3-48b9-ac65-560e7517cf0e.woff2|b1133e0m1748I11|https://cdn.telus.digital/thorium/core/fonts/etext/dc50c02f-3f77-4e75-b89c-e3f9bb4752e6.woff2|b1133e0m1748I11|https://cdn.telus.digital/thorium/core/fonts/etext/3e8a8b56-3cb0-4347-b670-eaaf06b76e9b.woff2|b1134e0m1754I11|https://cdn.telus.digital/thorium/core/v0.4.0/core-icons.woff2|b1134e0m1421I11|https://assets.adobedtm.com/launch-ENdd4142b4bbfc4721982dd14bc0f2c424-staging.min.js|b1134e0f0g0h0i0j0k3295l3611m3937u148452v148152w609145I12|https://images.ctfassets.net/fikanzmkdlqn/3yUnySNpS8IS4CeyUeWgeg/5bcfa9c592acfe591f26d85f6820fa5f/Logo_5FTELUS.svg|b1134e0m2303E1F3948O141P28I7|https://www.wcstage.telus.com/telus-login/static/ever-safe-logo.png|b1366e0m3412N3O20P31Q148R230I7|https://www.wcstage.telus.com/telus-login/static/phone_5Fgrey_5Fen.png|b1367e0m2137E1F43430O287P154Q1440R772I7|https://telusidentity-pp.telus.com/telus-login/static/telus_5Fcommon.js?seed=AMDg9laIAQAAIjnq2BdWw6lEmCSE8wfcJrNN0hnnhliKH6FYIUf_5FobVqsQrx&amp;rLeOBG0kof--z=q|b1622e0f0g0h0i0j0k2808l3404m5166u188127v187827w305456I12|https://staging.cdn.telus.digital/global/elements/v2/dist/with-libs/elements.latest.js?latest|b1679e0m2929K1I12|https://www.wcstage.telus.com/telus-login/static/styles_5F76b5e65df0342e448993.js|b1679e0m1781K1I12|https://cdn.polyfill.io/v3/polyfill.js?features=es6^ces5^cSet^cArray.prototype.includes^cObject.entries^cArray.prototype.entries|b1679e0f0g0h0i0j0k2935l3263m3264u300v225w306K1I22|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-400-6jlHTUrn8BJeUCvS3nW9L.otf|b3021e0m1394I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-700-h1W093p_5F4knXMZ61N2t4m.otf|b3022e0m1400I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-500-IZbNBDI7GGgrOLj5NRYLi.otf|b3022e0m1400I9|https://assets.adobedtm.com/extensions/EP143333dab9bb4582a773c81f3a840074/AppMeasurement.min.js|b5089e0f0g0h0i0j0k2l315m316u12869v12569w34152I12|https://connect.facebook.net/en_5FUS/fbevents.js|b5089e0m323I12|https://www.googletagmanager.com/gtag/js?id=GA_5FTRACKING_5FID&amp;l=gTagLayer|b5144e0m330K1I12|https://telus.tt.omtrdc.net/m2/telus/mbox/json|b5148e0f0g0h0i0j0k5l395m396u348v48w48z11I1|https://connect.facebook.net/signals/config/1415433098759990?v=2.9.104&amp;r=stable|b5420e0m825I12|https://www.googletagmanager.com/gtag/js?id=DC-6587013&amp;l=gTagLayer&amp;cx=c|b5484e0m765I12|https://www.googletagmanager.com/gtag/js?id=AW-1064506604&amp;l=gTagLayer&amp;cx=c|b5485e0m767I12|https://www.googletagmanager.com/gtag/js?id=AW-685767713&amp;l=gTagLayer&amp;cx=c|b5485e0m1082I12|https://assets.adobedtm.com/extensions/EP143333dab9bb4582a773c81f3a840074/AppMeasurement_5FModule_5FAudienceManagement.min.js|b5562e0f0g0h0i0j0k175l490m492u10093v9793w27895I12|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-400-6jlHTUrn8BJeUCvS3nW9L.otf|b5890e0m881I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-700-h1W093p_5F4knXMZ61N2t4m.otf|b5891e0m888I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-500-IZbNBDI7GGgrOLj5NRYLi.otf|b5891e0m889I9|https://cdn.telus.digital/thorium/core/v0.4.0/core-icons.woff2|b5891e0m562I9|https://cdn.telus.digital/uds/v2_5F15_5F0-HelveticaNow-400-o_5F-06DlPLAcd5SuEYG-0w.woff|b6009e0m1104I9|https://images.ctfassets.net/fikanzmkdlqn/3yUnySNpS8IS4CeyUeWgeg/5bcfa9c592acfe591f26d85f6820fa5f/Logo_5FTELUS.svg|b6045e0m318I7|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_5Ftype=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|b6217e0f0g0h0i0j0k464l987m987u473v173w173T-10z1I1M-813066374V0W1|https://googleads.g.doubleclick.net/pagead/viewthroughconversion/1064506604/|b6311e0f0g0h0i0j0k470l812m814u1861v1561w3538I12|https://googleads.g.doubleclick.net/pagead/viewthroughconversion/685767713/|b6597e0f0g0h0i0j0k194l529m541u1861v1561w3536I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC277e7ff060f04cc7bf9d5783628ac609-source.min.js|b7240e0f0g0h0i0j0k2l317m318u767v467w1145I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC0d8e0ab774b04845b6902c7cf87d1cdf-source.min.js|b7243e0f0g0h0i0j0k2l319m319u1109v809w1866I12|https://znezyilxhyzpbamlp-telus.siteintercept.qualtrics.com/WRSiteInterceptEngine/?Q_5FZID=ZN_5FezYilXhyzPbAMLP|b7244e0f0g0h0i0j0k3l330m340u3701v3401w7866K1I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC9afbaae0a83542d5adda765c74689a70-source.min.js|b7244e0f0g0h0i0j0k3l324m324u634v334w511I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC069dfdb78ae2455da35ad1748c212cf8-source.min.js|b7252e0f0g0h0i0j0k2l316m320u505v205w332I12|https://www.facebook.com/tr/|b7254e0m318I7|https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s62555623614960|b7266e0m346T-11z1I1|https://www.google.com/pagead/1p-user-list/1064506604/|b7272e0f0g0h0i0j0k342l699m700u342v42w42I7|https://www.google.ca/pagead/1p-user-list/1064506604/|b7272e0f0g0h0i0j0k342l714m715u342v42w42I7|https://www.google.com/pagead/1p-user-list/685767713/|b7273e0f0g0h0i0j0k430l781m782u342v42w42I7|https://www.google.ca/pagead/1p-user-list/685767713/|b7273e0f0g0h0i0j0k430l787m787u342v42w42I7|https://b.telus.com/ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=3031787a-15cd-45b4-ad82-7f208464e0fc|b7298e0m403z1I2|https://s3.amazonaws.com/telusdigital-ui/staging/lib/chat-router/bundle.js|b7567e0m1624K1I11|https://cdn.decibelinsight.net/i/13807/209494/di.js|b7573e0f0g0h0i0j0k131l762m1802u78219v77919w200419I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC2a8ff70b3e254e91958379d285b8af47-source.min.js|b7573e0f0g0h0i0j0k403l716m717u571v271w442I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RCad1cb1aa06b648fbb76c75c9598dc3cd-source.min.js|b7573e0f0g0h0i0j0k418l730m731u641v341w609I12|https://siteintercept.qualtrics.com/dxjsmodule/10.ff5c35506eb6156df16c.chunk.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=web&amp;Q_5FBRANDID=telusidentity-pp.telus.com|b7585e0f0g0h0i0j0k474l802m805u20415v20115w65613K1I12|https://www.facebook.com/tr?id=1415433098759990&amp;ev=AAMSegment&amp;cd[segID]=5099470&amp;noscript=1|b7710e0m670I7|https://www.facebook.com/tr/?id=1415433098759990&amp;ev=AAMSegment&amp;cd[segID]=5099470^c12725403^c14689457&amp;noscript=1|b7710e0m899I7|https://www.facebook.com/tr/?id=1415433098759990&amp;ev=AAMSegment&amp;cd[segID]=16771939^c16773751^c16824461^c9504908^c19383805&amp;noscript=1|b7710e0m914I7|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_5FZoneID=ZN_5FezYilXhyzPbAMLP&amp;Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch|b8398e0f0g0h0i0j0k3l448m485u5972v5672w89852T-12z1I1|https://www.facebook.com/tr/|b8754e0m472I7|https://siteintercept.qualtrics.com/dxjsmodule/CoreModule.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch&amp;Q_5FBRANDID=telus|b8890e0f0g0h0i0j0k2l348m354u32627v32327w104194I12|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/dc/sed-telus-a2b646e2?key=AIzaSyDsCAtzgd6ckzbiXwzmWMJoC0UPQEu9QhA|b9175e0f0g0h0i0j0k4l517m517u495v195w195z1I2|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/imp/v1.0/report/?m&amp;fq=load|b9285e0f0g0h0i0j0k5l490m490u565v265w265z1I2|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/dip/v1/dip|b9347e0f0g0h0i0j0k3l520m521u389v89w79T-13z1I1|https://www.wcstage.telus.com/chat/api/bootstrap|b9366e0f0g0h0i0j0k3l506m506u331v31w31T-14z1I1M890236227V0W1|https://siteintercept.qualtrics.com/dxjsmodule/5.38c3d23ae44011b71597.chunk.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=web&amp;Q_5FBRANDID=telus|b9381e0f0g0h0i0j0k402l744m745u1102v802w1737K1I12|https://siteintercept.qualtrics.com/dxjsmodule/1.ecb6e5626e4e126a641d.chunk.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=web&amp;Q_5FBRANDID=telus|b9382e0f0g0h0i0j0k402l744m746u6812v6512w28587K1I12|https://siteintercept.qualtrics.com/dxjsmodule/PopUpModule.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch&amp;Q_5FBRANDID=telus|b9382e0f0g0h0i0j0k487l819m821u1811v1511w3975I12|siteintercept.qualtrics.com/../telusidentity-pp.telus.com&amp;Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch|b9385e0m394T-15z1I1|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php|b9388e0m391T-16z1I1|siteintercept.qualtrics.com/../telusidentity-pp.telus.com&amp;Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch|b9391e0m387T-17z1I1|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php|b9394e0m384T-18z1I1|https://telus.demdex.net/dest5.html|b10218e0m1371Bi1I4$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=210$app=72172083ddd940ed$vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0$fId=286446273_97$v=10257221222094147$vID=1685080547928CJSVIMC7KMP9DB2G7PAUV32EEG037DKD$time=1685086456855</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=3&amp;flavor=post&amp;vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_type%3Dcode%26env%3Dit04%26response_mode%3Dquery%26nonce%3D5StB2m1xzDUSsTOprfXPWqnj%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26state%3DBDuKvN6umHMTERg4BnhWE46j%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=3557093441&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">3557093441</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_3_sn_G67KTA90VCTNP8FSI6I8MOGQ9P2QI6AD_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|16|_event_|1685086465255|_wv_|AAI|1|fIS|21849|fID|2$rId=RID_1109281689$rpId=-2066293403$domR=1685086453491$tvn=/as/authorization.oauth2$tvt=1685086443283$tvm=i1;k0;h0$tvtrg=1$ni=3g|1.35$md=mdcc1,en;mdcc2,BC$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=210$app=72172083ddd940ed$vi=LMBCOJAQPKIUMPLWALMICOMFBMCTNFRE-0$fId=286446273_97$v=10257221222094147$vID=1685080547928CJSVIMC7KMP9DB2G7PAUV32EEG037DKD$time=1685086467263</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKgoAAABWByJqoc3x9tzxCgAAAFYHcjqhxPj23PE/AAAAVjIfX5zG6ubexwa/xzaivcMHRfmI9xiq3yEarxTN74wzYriTQ/3X438NK/AIUynXF33kCLKa9omaQGnCY 8X" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKgoAAABWByJqoc3x9tzxCgAAAFYHcjqhxPj23PE/AAAAVjIfX5zG6ubexwa/xzaivcMHRfmI9xiq3yEarxTN74wzYriTQ/3X438NK/AIUynXF33kCLKa9omaQGnCY 8X</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKhAAAABeCSRgq bS/tzxADMRcBxcEAAAAF4JJGCrxvH93PIDMxFwHFwQAAAAXgkkYKvZ7v3c8AEzEXAcXE8AAABeSn8/7NXj/NzwIbCTAIel/0V584bpHfOecBbpAI2i0AMeu/1 t9LXdSFN DsHPcsxO/BC46Lf9YVZNe5pihAmoRbzrB25PFYyAtkEsUHeTwAAAF5Kfz/sy fm3PAhsZJHwKX/RXnzhukd855wFukAjaLQAx67/X630td1IU34Owc9yzE78ELjot/1hVk17mmKECahFvOsHbk8VjIC2QSxQd5PAAAAXkp/P y2mubc8iOxkkfApf9FefOG6R3znnAW6QCNotADHrv9frfS13UhTfg7Bz3LMTvwQuOi3/WFWTXuaYoQJqEW86wduTxWMgLZBLFB3k8AAABeSn8/7O7B5dzyI7CTAIel/0V584bpHfOecBbpAI2i0AMeu/1 t9LXdSFN DsHPcsxO/BC46Lf9YVZNe5pihAmoRbzrB25PFYzA9kEsUHeEAAAAF4JJGCru5jp3PEAPRxzElUQAAAAXgkkYKuZu jc8gM9HHMSVRAAAABeCSRgq5Gz6NzwAT0ccxJVYAAAAF5ZbCj7konR3PAhtpUZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 5iH1dzwIbeUGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPu odXc8CG0lxme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj73MLU3PAhtZYZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo  L81NzwIbqZGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPuDndTc8CG7mBme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7prjU3PAhuJsZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 8fW29zwIbmaGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPvl9Nvc8CG nRme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7i5rb3PAhv5wZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 6m429zwIbyfGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPvI2Nrc8CG9nhme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj77Pza3PAhooEZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo /Li2tzwIaOAGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPuQgNrc8CGggxme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7tqba3PAhoYIZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 9TH2dzwIaaFGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPv15tnc8CGnhBme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7mIvZ3PAhpIcZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 7mq2dzwIaWGGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lfAAAAXlpvL/zfzdjc8CGqiRme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/z979jc8CGriBme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/yCkNjc8CGoixme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/yRg9jc8iOoixme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/zb1MXc8CGpihCX1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/zX2MXc8SCpihCX1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodgAAAAXllsKPvW2MTc8iOpihCX2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKhAAAABeCSRgq bS/tzxADMRcBxcEAAAAF4JJGCrxvH93PIDMxFwHFwQAAAAXgkkYKvZ7v3c8AEzEXAcXE8AAABeSn8/7NXj/NzwIbCTAIel/0V584bpHfOecBbpAI2i0AMeu/1 t9LXdSFN DsHPcsxO/BC46Lf9YVZNe5pihAmoRbzrB25PFYyAtkEsUHeTwAAAF5Kfz/sy fm3PAhsZJHwKX/RXnzhukd855wFukAjaLQAx67/X630td1IU34Owc9yzE78ELjot/1hVk17mmKECahFvOsHbk8VjIC2QSxQd5PAAAAXkp/P y2mubc8iOxkkfApf9FefOG6R3znnAW6QCNotADHrv9frfS13UhTfg7Bz3LMTvwQuOi3/WFWTXuaYoQJqEW86wduTxWMgLZBLFB3k8AAABeSn8/7O7B5dzyI7CTAIel/0V584bpHfOecBbpAI2i0AMeu/1 t9LXdSFN DsHPcsxO/BC46Lf9YVZNe5pihAmoRbzrB25PFYzA9kEsUHeEAAAAF4JJGCru5jp3PEAPRxzElUQAAAAXgkkYKuZu jc8gM9HHMSVRAAAABeCSRgq5Gz6NzwAT0ccxJVYAAAAF5ZbCj7konR3PAhtpUZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 5iH1dzwIbeUGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPu odXc8CG0lxme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj73MLU3PAhtZYZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo  L81NzwIbqZGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPuDndTc8CG7mBme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7prjU3PAhuJsZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 8fW29zwIbmaGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPvl9Nvc8CG nRme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7i5rb3PAhv5wZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 6m429zwIbyfGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPvI2Nrc8CG9nhme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj77Pza3PAhooEZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo /Li2tzwIaOAGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPuQgNrc8CGggxme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7tqba3PAhoYIZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 9TH2dzwIaaFGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPv15tnc8CGnhBme2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5YAAAAF5ZbCj7mIvZ3PAhpIcZntqAblLzhukd855wFukAjaLTACSMrT221fZqJjunGxMJ4DJ861qwoqrkwU1txWimHCrrJcmkKs94fUI28X/1B52ozKgzQ4hULVSBwXkKrT6H WAAAABeWWwo 7mq2dzwIaWGGZ7agG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lfAAAAXlpvL/zfzdjc8CGqiRme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/z979jc8CGriBme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/yCkNjc8CGoixme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/yRg9jc8iOoixme1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/zb1MXc8CGpihCX1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodfAAAAXlpvL/zX2MXc8SCpihCX1Y9pVfOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKsc55rE0vgcmDivaQP8Cydz5xlJPmQxYRIDJeXKtNodgAAAAXllsKPvW2MTc8iOpihCX2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SMP5_02_LogIn" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKlAAAABWQVQQ68nOzd60dZTsNqK9wwdF Yj3GKrfIhmVI52sjTRDp5Q1ovf3SyYotxNLetdibKAc6rH3pZZMI/FZ5yAGxAiqvBvGGWkIZMpagRiL woAAABWB3I6oeGJod/w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKlAAAABWQVQQ68nOzd60dZTsNqK9wwdF Yj3GKrfIhmVI52sjTRDp5Q1ovf3SyYotxNLetdibKAc6rH3pZZMI/FZ5yAGxAiqvBvGGWkIZMpagRiL woAAABWB3I6oeGJod/w</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKmAAAABeWWwo 8zLzdzwIa6NEJfagG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPvBxs3c8iOujRCX2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKmAAAABeWWwo 8zLzdzwIa6NEJfagG5S84bpHfOecBbpAI2i0wAkjK09ttX2aiY7pxsTCeAyfOtasKKq5MFNbcVophwq6yXJpCrPeH1CNvF/9QedqMyoM0OIVC1UgcF5Cq0 h/lgAAAAXllsKPvBxs3c8iOujRCX2oBuUvOG6R3znnAW6QCNotMAJIytPbbV9momO6cbEwngMnzrWrCiquTBTW3FaKYcKuslyaQqz3h9Qjbxf/UHnajMqDNDiFQtVIHBeQqtPof5</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://b.telus.com/ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=cb697263-5405-4bb5-ac27-b908b1bfde7b" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&quot;,&quot;name&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;siteSection&quot;:&quot;my-telus&quot;,&quot;_telus&quot;:{&quot;customSiteSection&quot;:&quot;my-telus&quot;,&quot;primarySiteSection&quot;:&quot;my-telus_log-in&quot;,&quot;pageName&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;province&quot;:&quot;bc&quot;,&quot;pageLanguage&quot;:&quot;en&quot;,&quot;webApp&quot;:&quot;web&quot;,&quot;dataLayerType&quot;:&quot;acdl&quot;,&quot;brand&quot;:&quot;telus&quot;,&quot;edgeServer&quot;:&quot;edge.adobedc.net&quot;,&quot;tagManager&quot;:&quot;adobe_launch&quot;,&quot;adobeDataLayerBuilder&quot;:&quot;alloyAnalytics&quot;,&quot;lob&quot;:&quot;my-telus&quot;,&quot;pageType&quot;:&quot;log-in&quot;,&quot;userLoginStatus&quot;:&quot;logged_out&quot;,&quot;ecid&quot;:&quot;91010605645448864083518353994611755993&quot;,&quot;site&quot;:&quot;telus.com&quot;,&quot;userAccountID&quot;:&quot;&quot;,&quot;customPageViews&quot;:0},&quot;server&quot;:&quot;https://telusidentity-pp.telus.com&quot;},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;},&quot;webInteraction&quot;:{&quot;_telus&quot;:{&quot;userLoginStart&quot;:1,&quot;toolName&quot;:&quot;login_tool&quot;,&quot;toolUsageComplete&quot;:1},&quot;name&quot;:&quot;login_tool&quot;,&quot;type&quot;:&quot;other&quot;,&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2?response_type=code&amp;env=it04&amp;response_mode=query&amp;nonce=5StB2m1xzDUSsTOprfXPWqnj&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;state=BDuKvN6umHMTERg4BnhWE46j&amp;scope=openid%20profile%20email%201910%202937&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:720,&quot;screenWidth&quot;:1280,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1263,&quot;viewportHeight&quot;:609,&quot;userAgentClientHints&quot;:{&quot;architecture&quot;:&quot;x86&quot;,&quot;bitness&quot;:&quot;64&quot;,&quot;model&quot;:&quot;&quot;,&quot;platformVersion&quot;:&quot;10.0.0&quot;,&quot;wow64&quot;:false}}},&quot;placeContext&quot;:{&quot;localTimezoneOffset&quot;:-330,&quot;localTime&quot;:&quot;2023-05-26T13:04:52.706+05:30&quot;},&quot;timestamp&quot;:&quot;2023-05-26T07:34:52.706Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.15.0+2.16.1&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;marketing&quot;:{&quot;_telus&quot;:{}},&quot;commerce&quot;:{&quot;_telus&quot;:{}},&quot;productListItems&quot;:[],&quot;search&quot;:{&quot;_telus&quot;:{}},&quot;identityMap&quot;:{}}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;telus.com&quot;,&quot;cookiesEnabled&quot;:true}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=cb697263-5405-4bb5-ac27-b908b1bfde7b</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKhAAAABeCSRgq4mh4d/xABEwc1oaEAAAAF4JJGCr4Mvi3/IDETBzWhoQAAAAXgkkYKuDqOLf8AERMHNaGg" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKhAAAABeCSRgq4mh4d/xABEwc1oaEAAAAF4JJGCr4Mvi3/IDETBzWhoQAAAAXgkkYKuDqOLf8AERMHNaGg</stringProp>
                  <stringProp name="Argument.value">=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/as/7Saob/resume/as/authorization.ping?service_type=telus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="service_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">service_type</stringProp>
                  <stringProp name="Argument.value">telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ciTrackingId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ciTrackingId</stringProp>
                  <stringProp name="Argument.value">tid:QmquqDXJ0QxfEqOdfRwEltSTwdI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="actionURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">actionURL</stringProp>
                  <stringProp name="Argument.value">/as/7Saob/resume/as/authorization.ping?service_type=telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-z</stringProp>
                  <stringProp name="Argument.value">q</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-a</stringProp>
                  <stringProp name="Argument.value">vIUceghAveTAewX6ktt8GaGx54RYjkviSnzzeA=9-7OCvPJgLui5kYBYLL7Am68rZFDTi3VAqnUiJVmoPIWUAiPBRiy1Icr5cFLe5Y3H5zaln=4crb59yIYXBWVGnqUAHQ8LTXQawLzYH3AYET4Rl-0rBVBTwnggDSZ9_ib79NOu4mi-YG3WOXtinzxilFPyKFi84S2U24UqXbFIWWAEFgNsqutb=Js9ry5Nu2l8SXQ2aO_yQsbGFk66fjT6w_lUfAoTS7Fyqe-qhKjsnuYKJNHG3xpShbrfR4YHU5Llj-JRlk_a-VmfDfBhpPCmMZSB9lpDNzNp-Ia=etmI0qxoPiLnNEG4Xoy=essawGiTm-z2iqUXUeGrNQ6Z54vIOxX1XuMccx-RNCBErjwRSgaXFhncXOrYNnjR1CmYstDHL0LPbGx8GlwX0lrcN=xLZbEiZ8lo2lQWA=mFHXeCq2wiMWK5_szprlp25aqLOIaKPkq1YvVA6uwYj9EE4MSVy8rFEYrAlI8ZwwsMssNZ0R9zqL8B6B=NCIHHzQPBB2YPveZahNxZtawuOWQtqg7xxSr6XQ7y9hxFr8YVUxmD6kxuKUZJ-SIprfAgl8NEei689BuIbmoBAHZNI2pY-NJTb9zJWqOyT_t3wk0XN=-_4oUYxXCbDSHa79ErKnM1KBs2-1NcgTa=QPrJe72fKLOJyhHIa9Z-6FfoirRxbBcY4xlMKtZ7ry0p7btnrLbE0MPpP2N6yBjB3EmE3zZUhKOoNZX2kyseTkkf2DFs85zNvN6meZZX1muP5G8QVHO5LbmGEDoEGPWAOOUaLYJAUrGc28RvNr6wLLE2tEiclFOg2ZPN5utcS4PXpe4OP5lBIEGvhoGHz_qFhnFHjENvhJSqe7zBqZJLlPiAT_D-zPw-mQCggveHCNJWJuqctNw79cu6ChfLkw6XIfff8ObEmjyuCG91eVSgg4tMa2ORKiXVwk-U7Y4TM3lT-8=03Dns_xSkJqAWmkvNYI5MFFAgHRJpBtgHm8tJ1yU=7a3XxcwF0a=bHhe-LXyLN34ZF2Mmb8pi8imZY82aG_tIiYi5ikG3GWAQgQKUu7F2g4h2rUia=HlsFf1-8xC6rwtDB73F0wuhDEesqcH9sk51tWD7KsHsshlDykm_b1MAmilq0GCmD_eYuvalASH=2RsYCv3PCERj3sAJ1LVxw-0rT70BIlJfolhq-Pzjpakq4wbKG=nR=I4ibtFB=D0BRs=H9SpDi=_DnIj52ruLkchFPDpX_wWHqNek7sePXvl7Epn6r89Sa1HNiMGcrv4T2vfjR0bJQrummozTKge6syaPDOAIhabU5WpcRrpyIwwpU8Koi1yUC7WI=jHZvwN-PaHFbije5uj0Xt4qUi2hz1UT7F93MKR4N4K6B9FCAuOfDrTZEgSeixqegHMKanGZkmcuFLi7liDcDR-khhxEBx117i3cX3v9te6vFCMmWgta-U7rQwOzrW844blpDGcFN8teJYZX-yYl_GmvN85eF0o-602OYj_Sh9OrG_D8twjrKjFeT-D=yXSnJKq6GM3DHXNsAr1Hk2BRjnAGVBHESerFCKnafG3lkXYKTUA1C8zmUuVIuLTHyLCknvGLzcgNx=_3fw1KUes3INO_OOoW0mQCb5DGyJ2GWxUKq5V4tjZ6s8JTYuPZQ-1=qc=LFlp5E0SvN1oae4hKwHWXhLOnuuTkNU4WP9GJXIEipZX1Cfx8g7h6JyrarevKoyLZHbt=Ky=HTpWCQ=15siCE2sWWBJiX5IPGmofZU17O7mFv2nWKg-h4Gg_bMfI2gjp1ha_0-F10Hj9vIs91QSmRMYG3cYAisQlkIlxcsTN9-hMN-FUMLvSeoosVscp6LrShawloMzDCHQMy26yYDJkZDcbPGqoou7LOVyI_12CwgXE_CN1iuBkKJgc2HOe_hawYzfscg2=YbOTNlyZn_LLUfkZ8VBInu5oi409QSQObaVy3-D4yk8gWpWXDMNlqCU4YmJqMuR-79AM2Z7uhZFqqEojixDnHIZAorbbDke5mbjSHif-VQsxTRKXO8hPNjNI9WZWSSpLRXuRjAgQK=HqquQo-Deg1tw4jLIKybTR9F4rlD4H=Fk0_ERDsBmjlynxDGH3UA8wO-KuhY2gux5rCQN0H=zj8oClElG4GNKk2MgIIy5cnE7W2eTOeb=z1=zC5-aHvtK-E7RhC8oWbf=kMKx0wP0mlDtJ-T2BlQ1Xe9lkfbcSfBlkQ42955NiU943AzVvwgBjv_v6cAtP4GcjSRYPowNvYWQ7hGQHpOKW7ciTYSRqiupyltFyIYynwNrvef6h9Ot3CHvMULpXe_=aUV4mVbCUM8JRL8wNHYPsKz0zxV_45FgjBTvWQ-C3NPCIs=NVOEuVhtNuAOO8BNUOprM=cesNqy5Xw2TGtqSMoUjBauefR=B7lmgKRrGMiU6KtSm4y73QsGwODFv=vaSSAKG9Vigu3502NFPBLvDucH8Dv=DJF=HhOFypA6b_YajYOq8Ku3YDo8OPItRRV8Ur4wrnxZmfXw80kG3F3xjfulHBfp-i0jckQ8XbCsC_y4CtvWk5sJ2fC2WesvNIRwB82w75nKOTUEjIPD7=pWyKX4amkjBHhOpQr4knj_1MlOCXEjW_K-h1vTrY=-X_Eb6sDf65pgsVA9QGLBF6TNDVEY5QyRyqAVkU8zHPuUOwHf8BS4DiQo1cnC0Qp6vJj=kNjSp=pWuV9SQ0mw0Vk8OUtOKs5KYWQnQK3H1tcxH0CKGFnpyZyqTMgN60Oi_rMLf4q_GPCyJkDseM-GteY0eAQ6XiSccBKNvsKiJja4EkCMvLBP2Za-85OOSR3wRHKDSKUer7jJRU=XsK0eLOQzCoOtXj=ghuuTS1i4n9XLrPPM3eErDOi-xHWFL1k-M-t58BkrNw-nttTNjQ_MecCXc0bL320cDFeZhB1PpPm_0p2hwKQEoI0yWBKBUh-PNZIHoqgaqcJPiRSImLWQnSl5fmn7RBe45Kn9qXNV9QqZxERan=1sWpDrwlJFqTAENJl4bqY3IO9liAb1PoR3tJf2BCgeZJP274hRA9gFRT-9sIbigAHotSJPcqrvBlR5FhiuqZfIsPWR_MmgT3cjscK5o7CjeVZ_9j-v4BsJ-hqx_8Nuj1YeUHHc6DEQnNAmcHXj=gnePCfUacVUsSB6jmxfnGzlCUfzmRPemWF41-sMteU7-c=VcG-CmBqxBQUlYo8Flc8z6zmWe=Hf8lne=oBr-qSOfoU_Hwv4VBkaM6eoS21cBFfH0raiaJYRUIKMOfWJNcOpoOGx4UcwwbjefvVysCoERiIX_EF=63-cf3hnYifFWxM=5HPt_nvrnkk2QDRJSkayMi1NLZRKqkoO69gQpp8IjbApKv0PCzueGQXwLzU9bxbCoXUo2xJa1_S_5EHrkuC8GHiV7GVmP1-e-JiHqZxODswgjwqxZY2EApLEvWS38fyVrJI=g1QI0_WWB3S1=XIkQYRvP3m1YrkxRDxX2zDknFsfDJAB9Kea7P5w_1fcVkWfpqctFo5vcl2g3=UM-jhFUokQyVGwDvlZA6u6Yzl3AZitu0GQu5cSeBK86ffN0OItWTRh4Q8J96NakCJID_P0RENwLbvnIQFXDntTOK-vzXgT_AHHlDF-EUuYWElsQmsfNNC-sB7H_hSII2I8p5oq1u=Xe9TIxBrF9xwGNvZaqkfBPDE6bC0svWCJQcQ4WmE6jkrFbnWSDu3rElkKZuMo0nCY34pQxDxNPUgRLYUfDJ36RnrLOnI72yi8tlFDipyxmKPhJD6QCOm-VDo3Xw0M75_2Y5XKlorZsfoQF-Vo16uDeXJ6vMmFkjZOy2mY4AlT_GKq03l4A0zDB2lC9b7UaIVQFNI15EH6a5WsXgMZJ9z7A84b7UKe-r75UcyoS3MxlEgr9LPinebfTKc4J5_JDAEzItuvUlZyjRP=UGkg2OH3nEW5bWVwgh5ia291Eji4txis-qfb_UMYfEr5ocv6PJ2TeDDBOmb3gTNGzioXfojnz-zWU-IHEHTC7KqHVZ_-VwrC-ykx0hyuz=7JJvejjWUol-HsvvGrRbAHs3zbnYiQnTikvMDERP6IW1J094EV4jakjv_2Cxok3MIEJVOEEgrL_yZ41ZuCfwO3c7BrVp2KtvI21t_NM3LuujzPQwUb=3Sm0v84cNhnsb-f-EXPo_n7BchBof9m3UOOLjIwT7TCCe6kKXv_MlNQ6PVHMYW6raIn33ken8EPcpw5QqxL=A4emq0LAoHRLGX8=XSSqZf2bh8QbQYpO-KXX6T9ZZ10UYpC_N4TuKTWnBl3J-N-p_95Xjq7yHxKr_DkcCnmU-imYtKneVIPWVJJTIM2gJjk5KFN9OD5pi59UH0kYBvMEncYBnkZmDPjFhDuNBsOFC8Me9vW9-ZhQ8txQ3lwSEMVW5C9rkoClkl3vQk66qGzuU=vJcxVGy4MnvLeJcRbn17trbbXJRNZkPpH0hoGh-8plsOo3Z8ioSSuE-Tz_eRzWNHqqeFJiNXYQXJ4L-n6y_WWSlmvc-H6gy7vihNG4GW_CU8=D3QHDX=Xk92YJr==D=YrN6I_6Wx1as7i=SwBh=4w7mI_pIm8NDhxlB7SCChfMCLYRY8ObXPgX04OUbjgkBj9jut5A8GUPRaCcnCT_4Fu8sxOWUIU2SI_-eNSrVFbXMKUtKiXXNSI-CTuYIR84AQWkbAzuwLuAgIzhjV4z5G1NNitU6MBwGUKHVSIjKHoFkHTwqqY-=u3U7XCv6bm-EXRzNCx6VD_tR9EfT_F-=T=W3UK9Mj5fQLAvAovGLqDAc_bTr5fvfo9gx2S0jvfRFlthqk07h=fhC50_9h-NbTlHPp747ME-tWR_I4o_LFfZac3U9TAK8kzGto6Q8qHuIgQ7z8N7OpBo4ONaDvpCHhUDHnqALe_NHGrTWSYgsz6zVigxGZ7gcWgcDA2VbCqwqmWwAu34_JgGrJUF9Q5gIo_tlRPLwlrF7tUy=Dy9=SVHa5VITTcQE64u6VUoWNNWXhj_K2Z0KQDt9BQQz-m2NpqHMCTms6zhSW25lxwPqAMhYiiD5tJMahQSH1nrZmafjC2QSYMsqTynG1auAAxW48K_uyBDcYvtWYzK7JK=1nCJtKTBCiO3SCzeG9pxZTivN5e4ugMAjyrZO7DVumCeJSk83lUJ4xM_BRasH1SMs=SQUGcBugMO6IQYYMOg7g6ab5Rk9TXBlsSzcnssXqn=Cfbflq6kbQjRql-run8vk=Dvwzs=ysBMZBNGaNEqCcER22XI2__P-5D=zgPsrlcH0XXKzrDLSksgqKVnXvlfVRsThGsiuGjf5uBpET4zBnyzcsaKBc60XfUgSjtJDn5-=ISOeSC3Yef94b98=1n_gm-aGLV_v4=Fs5_FjU6A4QNo7pUm8Xs_aAFfjGfEk9rDxvmH_EpiggUN0o4fIhLATYRKUtz2PuiseSHFt2QFl71BF_kEN8v6SqPKnC=DC87AmQ50y4MCBA3-OXPiRaDce0qa5exlFa=ADI4qUhAIbZ-u4PuJkknWcwq9uqepVZSMsX_yyYyeOOLMufOhJpK7ZYclnQ_ExTmAPrXrPmYPvjNY-iastrs3x7sZMo5hUKkYRh71jncu71mA7E0-M4-V9oLDjfEcgrvjgpBng0=Of3RD5G-tDcxsSLgcviUJZ9Nu=iCWgfag-eJyhOphKb5r-BqOxoaercPqs0rgcE7k5_KhEElIeNGTTp8--keCAgvrGAb9AR8Je1p-5JVMg5v007=4StgrtjW3SHQF1ATiBEFOU_onQP27XtLSGrhfwJEf5YW2sChjcXcYj_xotnLbDrNepI7n=4fcSE2HCEyg8L91mqVuhp-kFMHGMmukFX1iT9cSlOyoPk=Na6J8MObY-rQO2QNcWCynEgoMbuiOaGQp3lLvv8Jonixq77gzPjSUblg7A6OvxtYITsi2I8f5TwoDMjlDlbIyomtFsla5l0sfXPPAZ=CWDR8GJfWPTvPq6CuEBZGCuYJkAowGgigc5ZbzHDUeHoq2pb--09OhGZ7Xny67DbSxUg8nue=8tmZJF0KJfOxS05bcRNvvmK3qFIwqEUlzwUMWXyy_pv8a8=UHWPT2w4JiASsLL2rUvurNPD7U2WUVJVmyBB90ximNWebLkXF7LRghGE=PJmS4Xqr=nvlVhNGg9fI0bVfoXxUM7sUGjN7xs2SNRhUSis8kjZM1wqPiwcNPIlqvozhgua0cJkH=ZQ0h5loiVTuSwccMQUoVbebyZt4_m25RTkTgDSB-G01ExsVwwQbPcy4D2tSKO7VYNI8D=Fxo2xEHCeXbWWmE8cfLNXpRXVlL2TsqtsyRljYJ6Yi9W_TXFGcgi4fBXQkhWG5K7iAjraUrwwFzh2jSyI2c_8wOC-J-vk3UINrWBm2Du6ZZAmMGpXi0A0nw8MPu27ToTHAmsC7y7=2cb6F=t3hzA=PCAqq5424jR0J4kX5TuUyqcTGz27tApwjZkpRKNz6=x6-qc3LZyoSY4M2KCx7wxt9VqT1XKUpKkm84Q_yvp6-XFOKh_KMTiQwOo3sbk0YwFfqUfuGr0rkbrRtXC0Ec9n3tq_bmJDz3UzJwlJnPUnnHgbCe04VOletItlT88tDX189x2H7q6pz5MbPgS7_z-GK2Dmeuk780SVxF-JIlCeF0nRHRaAE=n8aC3xAZQqMmPMHmTSJWFWiIlslOeKuh3M0-c_5U6YfwtFP0CKL0xfE0YbHL=pyKxVVB2DKP0BmU-=rWnOrYUlgTy1rTCqz6BZyVzUPkHsD_GRzSzt2ocnyhWrcxPk1Uf_0iRq3eQ05pXg8yt2nf=LgkEtPr0=jlBpfY3SXUlpXLs2c5vRCcMG3UCS1iMoJSDcKPnnG=h8WrSPih9Ze=Ak2_PO=grqkmP89E6j7qUynbFKUTvZFJK93C8Atei-1TjfwDxujhreE=IgtADxbkb95vVT9kR1nO98QkGCVL70LcG1GMnEj_83PF1XrVS3ULQ25sz9XWca2VbLTDJNnflxXpukGmKw1v2JMZJ=10vAfbiSVGZiNAAIDxr8necaZLpSm57Mu9QK355o_K4Tr_HTgHrikZUe0Kt-A8OvtB6eaGTknAvH3cBgz11RrzLcatSmwEEFMFa8l95-8ynkFrpyy8B4ICbIhXEiyYjR8Xtx=olo=PclDDo-1eQ_8C5_oVtwJ3=s5tVSymktKYWxlajQ_gCqbPR8AAgiUhg5RYCh=FVXyffXzq6ZSbhVAupF_JS5p=My0JYhlZwU-LkhqhHIXF0-BYh1AgF8aRMTDiyZ0oY06qBGXxlksa63FsHR7rfkkDcof=ss6ODPzQa9CYMvphbPZyH2UDZmR4PlIt_KXYxTnn=s417xz9q3OIgY1Ekfbi9mVnw6ygpQAKFzGn1Vz1VVDxAJ9Vq_xv2Q59x6GBbYfukv0IC_z4-xHOksFFePoe_28_IRHR4tfRZMvtY_TULMWhX9gbGyQ7AN1QMoYgp3KRSQW5JkIoD2uFi70chwi_a5RjD3sfZ=pDGar2p5ooXKcu4N3ReWDXHJHVgLkMkjDbcYHeYDPoJ-OGwK7VySz8q8ubVTXKyKJhtikTFp4CLocWmF26vjXpVQQqDxkgDhXYwC1jWrJsoWGlv8MfrGlm8fExzXP07So0UVgNeFfAYTMZEyON=kZ=hp75qyq5aSx_gCSwk5mUTpv3Nb8nK_8TJ8vHqu0uYWJZuN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userLanguage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userLanguage</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-c</stringProp>
                  <stringProp name="Argument.value">AMDg9laIAQAAIjnq2BdWw6lEmCSE8wfcJrNN0hnnhliKH6FYIUf_obVqsQrx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="IDToken1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">IDToken1</stringProp>
                  <stringProp name="Argument.value">${Email},${Email}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-b</stringProp>
                  <stringProp name="Argument.value">wuzbs3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientType</stringProp>
                  <stringProp name="Argument.value">OAUTH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-d</stringProp>
                  <stringProp name="Argument.value">ABaAhIjBCKHFgQGAAYIQgISi0aIA5JmBzvpDzz8AR_-htWqxCvEAAAAANb01RQDwx15eDcll6cwEwsmV45F7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-f</stringProp>
                  <stringProp name="Argument.value">A86c-laIAQAA3dRXjj1SPiEaTpdZHtBu7kUStb1b8GrXtVejlWQnutDdjJgwAc5sHyKucn0ewH8AAEB3AAAAAA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="IDToken2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">IDToken2</stringProp>
                  <stringProp name="Argument.value">${Password},${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">as/7Saob/resume/as/authorization.ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">49887.0</stringProp>
              <stringProp name="ConstantTimer.delay">24943.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 49887 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKgoAAABWB3I6oYig4d/x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbmvVDGEIqY36BB 5A7ruurzjltnxXbgL2KDGqq6NMEaaQ4 6UrzCZv97LdA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYKytjO/L5YaZvjoLFL9yoLSbfsNBqWdXCn7P7l55e7HTzgDkP9fWeGik84/LfSLtchmEu/r196tpSFDcRSKBOHmhr9GivWDHd7xGiy988AOu hS03QsXIZ1UmAMRvAZe92zg1RAl8BO9ZeptaeKB9ZZDEK8Ldd7jHuD7HCuJfnUlylK6BJkU5EZAHwShtwPEBisCAJ56LiDcELiUmekR1WV1CXKwm8fxcMnV0i4VaC/IBIuiQ/2iwtyAXZFjDCegY5EOXvNF7akrLvq4q4h7Gdb2Msb6CR8Tv5obiMPTrcLfGg3w5pjS0x84VpbBR4M5mxZOeT 96uBXPq/SC8ClVjZibDDKKgoAAABWB3I6oYig4d/x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m&amp;fq=signin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fq</stringProp>
                  <stringProp name="Argument.value">signin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pQkAAFatiWV9S2Ig3/gDy6Yvt5Trdyf8iPwcq9Z6AvU0k5CpAFiWjGGou l6GwnHPS4jySF84g3st 3/iF976C3QCXWqLde2BfAYbw054Un7Apf00IpEXJhdcXuy9EUz73q/SC3EwbF iUhnW38oE9wUz7KR z0KJCDAKHVHgMKj8mgCkMoBqC4 VLsY3X67uY3sSEq6kpWXQiDEW5v6iLeErYmNvmReJYw0/byHJN0evzIXHmeZrHkPfaiGgVrjMMHAMRqX8InMfWaPRTj/u 699Jh FnideSvzcxvgqsmsvwy0e4JJhAZy4A6b UO0nxYaPokEmVpfrGlptQTVzw4urmrDY4kMfI2u/cNdRvpLdcD4GqasBmGBNSxqzkr7fcJo1nkzMkCshxeFaDoGbdVuUFzWRL/RxKs0igxMVx 9/86qMd3S3HECLXTYFInlWb7gyJCKRdF7Cy/ofJJOQf1P4 o4Pb6/poVlFP/CNJX3H1lJucEVx6T/r8KHABf0ssvMklpzD9WMDs9pmEBWbWO9v/AwLYvCVougbywFciSneoUFcO8Vd35F8Up4jGSZrvJXplXMSYS1YroSWdhg/c7WhAWJe/qj1AkLT49K spOgwQjcANPE2b/4q9CUABPwiVK1u8u/p QJz1pPz su2PevrMW/slRitVYzUq/xC3UYzUUJdZhDZSH/2H2ritg/Mq4VRMjoERZFsA1QyLABJSma31cjQLib by1df5HQjyDViEJUSRDnwDCvagzEPdDasxLka0/bvHXna8gdeYvJgHNww5uwAXyIOXsBYaZT2AlY60lW 4YZRdLgOmGt20SwbDkck x286gvs0tpLamxGFOaI9IunP2zTeBq23tpk9prs4cWZ3hMgJTkdEGBM6S3 YXhxq/2/J4pteOz6zt9NlUI6Bg6AM637S8YguymAnzQLW8PLDfwGcxsK6Po1pdXI DkB NhwysE0QTro FxHUbiH3 97sgf3YyUPx3MN1skd7QZSZa5bg8TaMwm21wfRFLKtHu4I4ptN6Rk5wbvJsfQTzdBeotKb81dguYm0/MWQj2UJSMa8QpGI/vgBkOeGattU ChlrmwhygOUhuB48ebd0cwm6NBZkPhHSTQuRJ88CIwrnX15yZfIBvcxwpHiAp8Evt6IyhUax4b9bUhlGt6qvi7Hk0JyuR7xtvxa8qNbCk0tSo0pjCVl2hpgLP8pH8N27tfxoDbrUpIhQ7nfTUx2DqPoeKe8u0E rwe27fzBAbkLP 0z1ndrHS7Uu XAhzpFfm/z3aTcAbt/9Sc64O0QCGc3sQQ9jZI10Ot90X1KzELcFWEKYBxVLFqc9GMOkA8z565fjw6hhjCAL8DOGmIkJPAGcoUc4rD 6p0Q8OpqflkWXPTRsBH XadkC1725C2s2ogKCyA Rl2sXvc4369cM4RkYQlXrWMFT1uk0bIrLoh5a5inkQ/SRMiCLtx12k7yXCkWtH4VwTwtBnDkPjjhiypgY3iIXD8pBCZmMOxqvUbV7vc5si27t//K F W88YZ8KxoLNUWTT/PkN7rQMpM4H9o5t6lvo4ynciXolCLkstCNdgthgmWvoOgbk2tGtAhhZApDcJd4TiF9qEi5RRnqKL4NDTEyVcFImiAHEyV5Z66dIcDxiJLpZ5pe/0a0vT2Z0t DMWcXjNoOgl4VNpmZZQfjX0Dmf4YO8DESrvTgP0fjLcTKPwT Ki3gkzwHIvaud2P3mTgGsuv/dq2/PdQkSelP7LbAS PhHQYaBGKt9ROCTRcdrWar1eoYZbnZ1uk0T f95jqj86ivuM99oYh3PTqBLAPsYD/oBYxUAoKMNpH9B6oIp t3WRDAq/uM8E4jsIQMr5Jq7Gi0lfBS22qLa5zSR5YRqPIEtYkQbc0AUE nTPUp9n5HZIDxWXdKk6c4FyXdTPeLwswzcjzGMr Xtlw33/D9NTCRqR2FR5Z8Cn4yKYthTGSVo20VsuGUz7Tg5qot/F5plv672QmWmQSU0JtOcOCtSqfnHBp AQ83s1krUA8zgHkdP/f1XbPFyFO6Q3CqzBU7FFpZty4EhZCQdAuApKamxYrQkOmn/m6h9 f8OCwHYFmZM/KlKnFEJumRE8GURf2h80CND0R5JYoJ3wBlIZIkiEzSURSAEIsMYDk AkslktLZy3dIV8PohMNG4ZnYwRTo5oTT9ogvL4QdTWjX4gDKWqWqWHItaqN/dR uCaDQitYzMf BuGf6nAlCvmIzYuG/vK8iVUiP3cB8DIrjWQxagcUcq45C/iDGD/Tbv01/cSJUexoZaL4/iUVFXpc7zhB Xl/vn2yyE3pDSfVxX3Ik3urQN0wFa39uAOrLtI5PbKHVrfJL6yxk FGOzfBIGoDaUDgJe2Zwwokn9JmJj0VQx273Ja2rQ6B0 MjjbXU276BTdpAo5JVyF9b0nPqVJQXC6GRA1DROHQqfAhSDPxJ7de3x9LM/LYJe7pi68bVwK Y2SDTO4C6XDbCgAGGSCZFvR1Q3psCDoORbAm8HGQSS2q3YVcT6KPIhE8AUwNI8QyZ0UsRpIy53SaSggWaD5v2LCOJ11IJBTcqD8akNtgWdflxxjwTASF7IicennxsdF0znl4ht4kF7lWuwUp6sJp8HE2neEHXMTJGl e06P1aXr5ZPcrZQ2ybXoInLxfpMglQ5JEKClZp2PpOatbMpzLZqHy0mVMmqJg9944wIBodcIAR2zCJRSLTm2zkirAaXXnWt4TEfkj s4ugZRsoIr8HuKJiLQuUE8U5tHG3gAV2SAaE2 Rj9Uw8W8BB/6eecwvYR4dmZmPfdWlJvvOesv9e9eRc/ABrI6sgkLto6zhm2Z3PEeIQzWykEQNE8iU53rUqgIxKaqWvAYt4DSzrP1BVHUymiSAEVl/bvgyX2pdjkO 0IVU/ahjyCshVKimslYmyGMIe4fttMTh3e/kFIRKXN6Ev3/8HAEqWGNk/VwoIeBO0wHxOqciXUAAhh5FaJ7fbcdDUuZ FQDJoH2Ta3Mox/BfdyEPQGx9tDd UySCbnMgRNWDX5A8MNExC HA9MwxZdVhGUSC9tp3Gx3tpUQgozpZyUqTQls9Shllvp8/SYPlcA4Z145xOGNu3EUrxE/2wCBoIkr4lxPCnA7W4tl/EM7xt/ixV5CXVQfp7xDqErxAFN81MumFLqtR1btSS1h0RFukmxnftMpP8oGyyl00ZSlnUcUfJUVBOKLkqAW5GsQBpd1kMdYktolUJT1/ aTCnfpKiY47SR1IfyIgkzWIV7WBLu28kyBvaAJiVJZw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pQkAAFatiWV9S2Ig3/gDy6Yvt5Trdyf8iPwcq9Z6AvU0k5CpAFiWjGGou l6GwnHPS4jySF84g3st 3/iF976C3QCXWqLde2BfAYbw054Un7Apf00IpEXJhdcXuy9EUz73q/SC3EwbF iUhnW38oE9wUz7KR z0KJCDAKHVHgMKj8mgCkMoBqC4 VLsY3X67uY3sSEq6kpWXQiDEW5v6iLeErYmNvmReJYw0/byHJN0evzIXHmeZrHkPfaiGgVrjMMHAMRqX8InMfWaPRTj/u 699Jh FnideSvzcxvgqsmsvwy0e4JJhAZy4A6b UO0nxYaPokEmVpfrGlptQTVzw4urmrDY4kMfI2u/cNdRvpLdcD4GqasBmGBNSxqzkr7fcJo1nkzMkCshxeFaDoGbdVuUFzWRL/RxKs0igxMVx 9/86qMd3S3HECLXTYFInlWb7gyJCKRdF7Cy/ofJJOQf1P4 o4Pb6/poVlFP/CNJX3H1lJucEVx6T/r8KHABf0ssvMklpzD9WMDs9pmEBWbWO9v/AwLYvCVougbywFciSneoUFcO8Vd35F8Up4jGSZrvJXplXMSYS1YroSWdhg/c7WhAWJe/qj1AkLT49K spOgwQjcANPE2b/4q9CUABPwiVK1u8u/p QJz1pPz su2PevrMW/slRitVYzUq/xC3UYzUUJdZhDZSH/2H2ritg/Mq4VRMjoERZFsA1QyLABJSma31cjQLib by1df5HQjyDViEJUSRDnwDCvagzEPdDasxLka0/bvHXna8gdeYvJgHNww5uwAXyIOXsBYaZT2AlY60lW 4YZRdLgOmGt20SwbDkck x286gvs0tpLamxGFOaI9IunP2zTeBq23tpk9prs4cWZ3hMgJTkdEGBM6S3 YXhxq/2/J4pteOz6zt9NlUI6Bg6AM637S8YguymAnzQLW8PLDfwGcxsK6Po1pdXI DkB NhwysE0QTro FxHUbiH3 97sgf3YyUPx3MN1skd7QZSZa5bg8TaMwm21wfRFLKtHu4I4ptN6Rk5wbvJsfQTzdBeotKb81dguYm0/MWQj2UJSMa8QpGI/vgBkOeGattU ChlrmwhygOUhuB48ebd0cwm6NBZkPhHSTQuRJ88CIwrnX15yZfIBvcxwpHiAp8Evt6IyhUax4b9bUhlGt6qvi7Hk0JyuR7xtvxa8qNbCk0tSo0pjCVl2hpgLP8pH8N27tfxoDbrUpIhQ7nfTUx2DqPoeKe8u0E rwe27fzBAbkLP 0z1ndrHS7Uu XAhzpFfm/z3aTcAbt/9Sc64O0QCGc3sQQ9jZI10Ot90X1KzELcFWEKYBxVLFqc9GMOkA8z565fjw6hhjCAL8DOGmIkJPAGcoUc4rD 6p0Q8OpqflkWXPTRsBH XadkC1725C2s2ogKCyA Rl2sXvc4369cM4RkYQlXrWMFT1uk0bIrLoh5a5inkQ/SRMiCLtx12k7yXCkWtH4VwTwtBnDkPjjhiypgY3iIXD8pBCZmMOxqvUbV7vc5si27t//K F W88YZ8KxoLNUWTT/PkN7rQMpM4H9o5t6lvo4ynciXolCLkstCNdgthgmWvoOgbk2tGtAhhZApDcJd4TiF9qEi5RRnqKL4NDTEyVcFImiAHEyV5Z66dIcDxiJLpZ5pe/0a0vT2Z0t DMWcXjNoOgl4VNpmZZQfjX0Dmf4YO8DESrvTgP0fjLcTKPwT Ki3gkzwHIvaud2P3mTgGsuv/dq2/PdQkSelP7LbAS PhHQYaBGKt9ROCTRcdrWar1eoYZbnZ1uk0T f95jqj86ivuM99oYh3PTqBLAPsYD/oBYxUAoKMNpH9B6oIp t3WRDAq/uM8E4jsIQMr5Jq7Gi0lfBS22qLa5zSR5YRqPIEtYkQbc0AUE nTPUp9n5HZIDxWXdKk6c4FyXdTPeLwswzcjzGMr Xtlw33/D9NTCRqR2FR5Z8Cn4yKYthTGSVo20VsuGUz7Tg5qot/F5plv672QmWmQSU0JtOcOCtSqfnHBp AQ83s1krUA8zgHkdP/f1XbPFyFO6Q3CqzBU7FFpZty4EhZCQdAuApKamxYrQkOmn/m6h9 f8OCwHYFmZM/KlKnFEJumRE8GURf2h80CND0R5JYoJ3wBlIZIkiEzSURSAEIsMYDk AkslktLZy3dIV8PohMNG4ZnYwRTo5oTT9ogvL4QdTWjX4gDKWqWqWHItaqN/dR uCaDQitYzMf BuGf6nAlCvmIzYuG/vK8iVUiP3cB8DIrjWQxagcUcq45C/iDGD/Tbv01/cSJUexoZaL4/iUVFXpc7zhB Xl/vn2yyE3pDSfVxX3Ik3urQN0wFa39uAOrLtI5PbKHVrfJL6yxk FGOzfBIGoDaUDgJe2Zwwokn9JmJj0VQx273Ja2rQ6B0 MjjbXU276BTdpAo5JVyF9b0nPqVJQXC6GRA1DROHQqfAhSDPxJ7de3x9LM/LYJe7pi68bVwK Y2SDTO4C6XDbCgAGGSCZFvR1Q3psCDoORbAm8HGQSS2q3YVcT6KPIhE8AUwNI8QyZ0UsRpIy53SaSggWaD5v2LCOJ11IJBTcqD8akNtgWdflxxjwTASF7IicennxsdF0znl4ht4kF7lWuwUp6sJp8HE2neEHXMTJGl e06P1aXr5ZPcrZQ2ybXoInLxfpMglQ5JEKClZp2PpOatbMpzLZqHy0mVMmqJg9944wIBodcIAR2zCJRSLTm2zkirAaXXnWt4TEfkj s4ugZRsoIr8HuKJiLQuUE8U5tHG3gAV2SAaE2 Rj9Uw8W8BB/6eecwvYR4dmZmPfdWlJvvOesv9e9eRc/ABrI6sgkLto6zhm2Z3PEeIQzWykEQNE8iU53rUqgIxKaqWvAYt4DSzrP1BVHUymiSAEVl/bvgyX2pdjkO 0IVU/ahjyCshVKimslYmyGMIe4fttMTh3e/kFIRKXN6Ev3/8HAEqWGNk/VwoIeBO0wHxOqciXUAAhh5FaJ7fbcdDUuZ FQDJoH2Ta3Mox/BfdyEPQGx9tDd UySCbnMgRNWDX5A8MNExC HA9MwxZdVhGUSC9tp3Gx3tpUQgozpZyUqTQls9Shllvp8/SYPlcA4Z145xOGNu3EUrxE/2wCBoIkr4lxPCnA7W4tl/EM7xt/ixV5CXVQfp7xDqErxAFN81MumFLqtR1btSS1h0RFukmxnftMpP8oGyyl00ZSlnUcUfJUVBOKLkqAW5GsQBpd1kMdYktolUJT1/ aTCnfpKiY47SR1IfyIgkzWIV7WBLu28kyBvaAJiVJZw</stringProp>
                  <stringProp name="Argument.value">=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="3wEAAG7r53WlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbtxPTG8HxcsyS584w3tv/7X3XBhh2jVPTOvH 65Bf8QbQAz70B4sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n Tkmdv5neFnaOVoyhxrmYo8HGoj1MDfMu4qrAe8wDhENWHn6KtGBbbrGN3k3hIsaFL0aCxPKSeWOJaz7yxIGnypdscHj8eAKHYBO qfqmriqES5dMi2wv yiA/ln2 nMAUf0V kRrti916wLE3A96owKxPL5xNaOK6scGU7xdZpyvH6ijAXG9LUMO4nuaOIcA32JpcHLq5CrbKC5GUbQafQ/Cfq Qh6MU0n1tEDetzs7rdIfH2S4Ad3PPDYrnHej1y9iAWc1jDCSjYZQKDP5C6qg1FIm69413AKjDaJqmQgZJ5ZwDxN6epoCaDkX3q4Cdkhc9Uo/dRoc7xUdyCHvl8OwNbYrKETBGe neY555EFSeW94jbPRDJ pUTyDY9eo1oWjnkhi18msR4GxDR0n1vze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1N" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3wEAAG7r53WlVYZT2v4yhpgWlLDSQA/7musYo RtP9cbmJSzRlzurCStwbtxPTG8HxcsyS584w3tv/7X3XBhh2jVPTOvH 65Bf8QbQAz70B4sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n Tkmdv5neFnaOVoyhxrmYo8HGoj1MDfMu4qrAe8wDhENWHn6KtGBbbrGN3k3hIsaFL0aCxPKSeWOJaz7yxIGnypdscHj8eAKHYBO qfqmriqES5dMi2wv yiA/ln2 nMAUf0V kRrti916wLE3A96owKxPL5xNaOK6scGU7xdZpyvH6ijAXG9LUMO4nuaOIcA32JpcHLq5CrbKC5GUbQafQ/Cfq Qh6MU0n1tEDetzs7rdIfH2S4Ad3PPDYrnHej1y9iAWc1jDCSjYZQKDP5C6qg1FIm69413AKjDaJqmQgZJ5ZwDxN6epoCaDkX3q4Cdkhc9Uo/dRoc7xUdyCHvl8OwNbYrKETBGe neY555EFSeW94jbPRDJ pUTyDY9eo1oWjnkhi18msR4GxDR0n1vze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1N</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://smp-enterprise-np.telus.com/api/auth/user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/auth/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://smp-enterprise-np.telus.com/api/busobj/companyname" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/busobj/companyname</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SearchActivation" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TransactionId" elementType="Argument">
            <stringProp name="Argument.name">TransactionId</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMddhhmm,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Pacing" elementType="Argument">
            <stringProp name="Argument.name">Pacing</stringProp>
            <stringProp name="Argument.value">${__P(propPIpacing,10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASEURL" elementType="Argument">
            <stringProp name="Argument.name">BASEURL</stringProp>
            <stringProp name="Argument.value">apigw-private-nane-np-001.tsl.telus.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SearchActivation" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TELUS_BAN_SUB" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">TELUS_BAN_SUB1.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">TELUS_BAN,TELUS_SUB</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Koodo_BAN And Koodo_Subscriber" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">KOODO_BAN1.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">Koodo_BAN,Koodo_Subscriber</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Brand" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">Brand.dat</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">Brand</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Province" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">Province.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">Province</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter_rand" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">100000</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">rand</stringProp>
          <stringProp name="CounterConfig.format">000000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter_rand2" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">100000</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">rand2</stringProp>
          <stringProp name="CounterConfig.format">000000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="endTime" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def endTime = dateobj.getTime();
vars.put(&quot;endTime&quot;,endTime.toString())
log.info(&quot;Current date in the specified format: &quot; + endTime);
SampleResult.setIgnore();
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">&quot;${__jm__SearchActivation__idx}&quot; != &quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing Timer" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${myDelay}</stringProp>
          </TestAction>
          <hashTree>
            <JSR223Timer guiclass="TestBeanGUI" testclass="JSR223Timer" testname="JSR223 Timer" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">Long pacingInput = Long.valueOf(vars.get(&apos;Pacing&apos;))*1000;
Long elapsed = Long.valueOf(vars.get(&apos;endTime&apos;)) - Long.valueOf(vars.get(&apos;startTime&apos;))
Long pacing = pacingInput-elapsed;
if ( pacing &gt; 0 ) 
{
	vars.put(&quot;myDelay&quot;, String.valueOf(pacing));
	return 0;
}
else 
{
	vars.put(&quot;myDelay&quot;, &quot;0&quot;);
	return 0; 
}
</stringProp>
            </JSR223Timer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="startTime" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def startTime = dateobj.getTime();
log.info(&quot;Current date in the specified format: &quot; + startTime);
vars.put(&quot;startTime&quot;,startTime.toString())
SampleResult.setIgnore();</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">client_credentials</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2931</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">826da6b7-0422-44c1-83c2-bdb83a5b13d921aa5819-bb6b-4796-a270-92bc75afd33a</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0054d1bf-9131-4f07-9632-cb2e7102094a</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/st/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">RecContentType</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.1.1 (java 1.5)</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">env</stringProp>
                <stringProp name="Header.value">it04</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="access_token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">c_AuthToken</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Missing</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">prev.setIgnore();</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TELUS_ProductOfferingQualification_01_Search_Activation" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/productOfferingQualification-1---old" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;KSC63008202301031612&quot;,&#xd;
	&quot;qualificationType&quot;: &quot;CATALOGUE&quot;,&#xd;
	&quot;instantSyncQualification&quot;: true,&#xd;
	&quot;provideAlternative&quot;: false,&#xd;
	&quot;provideOnlyAvailable&quot;: true,&#xd;
	&quot;provideUnavailabilityReason&quot;: false,&#xd;
	&quot;category&quot;: {&#xd;
		&quot;name&quot;: &quot;EQUIPMENT&quot;&#xd;
	},&#xd;
	&quot;channel&quot;: {&#xd;
		&quot;name&quot;: &quot;CommerceChannel&quot;,&#xd;
		&quot;characteristics&quot;: [&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_PROVINCE&quot;,&#xd;
				&quot;value&quot;: &quot;ON&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_TYPE&quot;,&#xd;
				&quot;value&quot;: &quot;DL&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_INTERNAL_ID&quot;,&#xd;
				&quot;value&quot;: &quot;10369836&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_ID&quot;,&#xd;
				&quot;value&quot;: &quot;1100031727&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;place&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;36712550&quot;,&#xd;
			&quot;role&quot;: &quot;BILLING&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_PROVINCE&quot;,&#xd;
					&quot;value&quot;: &quot;ON&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_CITY&quot;,&#xd;
					&quot;value&quot;: &quot;Ottawa&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	],&#xd;
	&quot;productOfferingQualificationItem&quot;: [&#xd;
		{&#xd;
			&quot;action&quot;: &quot;activation&quot;,&#xd;
			&quot;product&quot;: {&#xd;
				&quot;id&quot;: &quot;7780791209&quot;,&#xd;
				&quot;isBundle&quot;: false,&#xd;
				&quot;name&quot;: &quot;POSTPAID&quot;,&#xd;
				&quot;place&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;36712550&quot;,&#xd;
						&quot;role&quot;: &quot;MARKET&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;MARKET_PROVINCE_CODE&quot;,&#xd;
								&quot;value&quot;: &quot;PQ&quot; &#xd;
							}							&#xd;
						]&#xd;
					}&#xd;
				],&#xd;
				&quot;productSpecification&quot;: {&#xd;
					&quot;id&quot;: &quot;POSTPAID&quot;,&#xd;
					&quot;name&quot;: &quot;PRODUCT_TYPE_CD&quot;&#xd;
				},&#xd;
				&quot;relatedParty&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;7780791209&quot;, &#xd;
						&quot;role&quot;: &quot;SUBSCRIBER&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PRODUCT_TYPE&quot;,&#xd;
								&quot;value&quot;: &quot;C&quot;&#xd;
							},&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PORT_IN_IND&quot;,&#xd;
								&quot;value&quot;: &quot;N&quot;&#xd;
							}&#xd;
							&#xd;
						]&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;relatedParty&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;36712550&quot;,&#xd;
			&quot;role&quot;: &quot;ACCOUNT&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BRAND_CD&quot;,&#xd;
					&quot;value&quot;: &quot;1&quot; &#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;MASTER_SOURCE_CD&quot;,&#xd;
					&quot;value&quot;: &quot;130&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_TYPE&quot;,&#xd;
					&quot;value&quot;: &quot;I&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_SUBTYPE&quot;,&#xd;
					&quot;value&quot;: &quot;R&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;B&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_RISK_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;100&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_ACTIVATION_DATE&quot;,&#xd;
					&quot;value&quot;: &quot;2020-05-05&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACTIVE_SUBSCRIBER_COUNT&quot;,&#xd;
					&quot;value&quot;: &quot;0&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">productofferingsearchapi-it04.paas-app-east2-np.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/productOfferingQualification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-dynaTrace-Test" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace-Test</stringProp>
                  <stringProp name="Header.value">TSN=TELUS_ProductOfferingQualification_01_Search_Activation;PC=web_custom_request;SI=LoadRunner;LSN=SearchActivation;VU=-1;</stringProp>
                </elementProp>
                <elementProp name="x-dynaTrace" elementType="Header">
                  <stringProp name="Header.name">x-dynaTrace</stringProp>
                  <stringProp name="Header.value">SN=SearchActivation;VU=1;TE=;AN=localhost;PC=Custom Request: web_custom_request;ID=1672742560790;NA=TELUS_ProductOfferingQualification_01_Search_Activation;SI=LR</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">No-Cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/productOfferingQualification-1" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;KSC${rand}${TransactionId}&quot;,&#xd;
	&quot;qualificationType&quot;: &quot;CATALOGUE&quot;,&#xd;
	&quot;instantSyncQualification&quot;: true,&#xd;
	&quot;provideAlternative&quot;: false,&#xd;
	&quot;provideOnlyAvailable&quot;: true,&#xd;
	&quot;provideUnavailabilityReason&quot;: false,&#xd;
	&quot;category&quot;: {&#xd;
		&quot;name&quot;: &quot;EQUIPMENT&quot;&#xd;
	},&#xd;
	&quot;channel&quot;: {&#xd;
		&quot;name&quot;: &quot;CommerceChannel&quot;,&#xd;
		&quot;characteristics&quot;: [&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_PROVINCE&quot;,&#xd;
				&quot;value&quot;: &quot;ON&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_TYPE&quot;,&#xd;
				&quot;value&quot;: &quot;DL&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_INTERNAL_ID&quot;,&#xd;
				&quot;value&quot;: &quot;10369836&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_ID&quot;,&#xd;
				&quot;value&quot;: &quot;1100031727&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;place&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;${TELUS_BAN}&quot;,&#xd;
			&quot;role&quot;: &quot;BILLING&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_PROVINCE&quot;,&#xd;
					&quot;value&quot;: &quot;ON&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_CITY&quot;,&#xd;
					&quot;value&quot;: &quot;Ottawa&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	],&#xd;
	&quot;productOfferingQualificationItem&quot;: [&#xd;
		{&#xd;
			&quot;action&quot;: &quot;activation&quot;,&#xd;
			&quot;product&quot;: {&#xd;
				&quot;id&quot;: &quot;${TELUS_SUB}&quot;,&#xd;
				&quot;isBundle&quot;: false,&#xd;
				&quot;name&quot;: &quot;POSTPAID&quot;,&#xd;
				&quot;place&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;${TELUS_BAN}&quot;,&#xd;
						&quot;role&quot;: &quot;MARKET&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;MARKET_PROVINCE_CODE&quot;,&#xd;
								&quot;value&quot;: &quot;${Province}&quot; &#xd;
							}							&#xd;
						]&#xd;
					}&#xd;
				],&#xd;
				&quot;productSpecification&quot;: {&#xd;
					&quot;id&quot;: &quot;POSTPAID&quot;,&#xd;
					&quot;name&quot;: &quot;PRODUCT_TYPE_CD&quot;&#xd;
				},&#xd;
				&quot;relatedParty&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;${TELUS_SUB}&quot;, &#xd;
						&quot;role&quot;: &quot;SUBSCRIBER&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PRODUCT_TYPE&quot;,&#xd;
								&quot;value&quot;: &quot;C&quot;&#xd;
							},&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PORT_IN_IND&quot;,&#xd;
								&quot;value&quot;: &quot;N&quot;&#xd;
							}&#xd;
							&#xd;
						]&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;relatedParty&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;${TELUS_BAN}&quot;,&#xd;
			&quot;role&quot;: &quot;ACCOUNT&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BRAND_CD&quot;,&#xd;
					&quot;value&quot;: &quot;${Brand}&quot; &#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;MASTER_SOURCE_CD&quot;,&#xd;
					&quot;value&quot;: &quot;130&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_TYPE&quot;,&#xd;
					&quot;value&quot;: &quot;I&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_SUBTYPE&quot;,&#xd;
					&quot;value&quot;: &quot;R&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;B&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_RISK_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;100&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_ACTIVATION_DATE&quot;,&#xd;
					&quot;value&quot;: &quot;2020-05-05&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACTIVE_SUBSCRIBER_COUNT&quot;,&#xd;
					&quot;value&quot;: &quot;0&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">productofferingsearchapi-it04.paas-app-east2-np.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/productOfferingQualification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-dynaTrace-Test" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace-Test</stringProp>
                  <stringProp name="Header.value">TSN=TELUS_ProductOfferingQualification_01_Search_Activation;PC=web_custom_request;SI=LoadRunner;LSN=SearchActivation;VU=-1;</stringProp>
                </elementProp>
                <elementProp name="x-dynaTrace" elementType="Header">
                  <stringProp name="Header.name">x-dynaTrace</stringProp>
                  <stringProp name="Header.value">SN=SearchActivation;VU=1;TE=;AN=localhost;PC=Custom Request: web_custom_request;ID=1672742560790;NA=TELUS_ProductOfferingQualification_01_Search_Activation;SI=LR</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">No-Cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TELUS_ProductOfferingQualification_01_Search_Activation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;KSC${rand}${TransactionId}&quot;,&#xd;
	&quot;qualificationType&quot;: &quot;CATALOGUE&quot;,&#xd;
	&quot;instantSyncQualification&quot;: true,&#xd;
	&quot;provideAlternative&quot;: false,&#xd;
	&quot;provideOnlyAvailable&quot;: true,&#xd;
	&quot;provideUnavailabilityReason&quot;: false,&#xd;
	&quot;category&quot;: {&#xd;
		&quot;name&quot;: &quot;EQUIPMENT&quot;&#xd;
	},&#xd;
	&quot;channel&quot;: {&#xd;
		&quot;name&quot;: &quot;CommerceChannel&quot;,&#xd;
		&quot;characteristics&quot;: [&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_PROVINCE&quot;,&#xd;
				&quot;value&quot;: &quot;ON&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_TYPE&quot;,&#xd;
				&quot;value&quot;: &quot;DL&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_INTERNAL_ID&quot;,&#xd;
				&quot;value&quot;: &quot;10369836&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_ID&quot;,&#xd;
				&quot;value&quot;: &quot;1100031727&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;place&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;${TELUS_BAN}&quot;,&#xd;
			&quot;role&quot;: &quot;BILLING&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_PROVINCE&quot;,&#xd;
					&quot;value&quot;: &quot;ON&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_CITY&quot;,&#xd;
					&quot;value&quot;: &quot;Ottawa&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	],&#xd;
	&quot;productOfferingQualificationItem&quot;: [&#xd;
		{&#xd;
			&quot;action&quot;: &quot;activation&quot;,&#xd;
			&quot;product&quot;: {&#xd;
				&quot;id&quot;: &quot;${TELUS_SUB}&quot;,&#xd;
				&quot;isBundle&quot;: false,&#xd;
				&quot;name&quot;: &quot;POSTPAID&quot;,&#xd;
				&quot;place&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;${TELUS_BAN}&quot;,&#xd;
						&quot;role&quot;: &quot;MARKET&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;MARKET_PROVINCE_CODE&quot;,&#xd;
								&quot;value&quot;: &quot;${Province}&quot; &#xd;
							}							&#xd;
						]&#xd;
					}&#xd;
				],&#xd;
				&quot;productSpecification&quot;: {&#xd;
					&quot;id&quot;: &quot;POSTPAID&quot;,&#xd;
					&quot;name&quot;: &quot;PRODUCT_TYPE_CD&quot;&#xd;
				},&#xd;
				&quot;relatedParty&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;${TELUS_SUB}&quot;, &#xd;
						&quot;role&quot;: &quot;SUBSCRIBER&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PRODUCT_TYPE&quot;,&#xd;
								&quot;value&quot;: &quot;C&quot;&#xd;
							},&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PORT_IN_IND&quot;,&#xd;
								&quot;value&quot;: &quot;N&quot;&#xd;
							}&#xd;
							&#xd;
						]&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;relatedParty&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;${TELUS_BAN}&quot;,&#xd;
			&quot;role&quot;: &quot;ACCOUNT&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BRAND_CD&quot;,&#xd;
					&quot;value&quot;: &quot;${Brand}&quot; &#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;MASTER_SOURCE_CD&quot;,&#xd;
					&quot;value&quot;: &quot;130&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_TYPE&quot;,&#xd;
					&quot;value&quot;: &quot;I&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_SUBTYPE&quot;,&#xd;
					&quot;value&quot;: &quot;R&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;B&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_RISK_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;100&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_ACTIVATION_DATE&quot;,&#xd;
					&quot;value&quot;: &quot;2020-05-05&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACTIVE_SUBSCRIBER_COUNT&quot;,&#xd;
					&quot;value&quot;: &quot;0&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASEURL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/marketsales/offeringSearch/v1/productOfferingQualification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-dynaTrace-Test" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace-Test</stringProp>
                  <stringProp name="Header.value">LSN=TelusSearchActivation;TSN=${__samplerName()};SI=BZM;LTN=TelusSearchActivation;VU=${__threadNum()};</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">No-Cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_AuthToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">env</stringProp>
                  <stringProp name="Header.value">it04</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="KOODO_ProductOfferingQualification_02_Search_Activation" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/productOfferingQualification-2---old" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;KSC14723202301031612&quot;,&#xd;
	&quot;qualificationType&quot;: &quot;CATALOGUE&quot;,&#xd;
	&quot;instantSyncQualification&quot;: true,&#xd;
	&quot;provideAlternative&quot;: false,&#xd;
	&quot;provideOnlyAvailable&quot;: true,&#xd;
	&quot;provideUnavailabilityReason&quot;: false,&#xd;
	&quot;category&quot;: {&#xd;
		&quot;name&quot;: &quot;EQUIPMENT&quot;&#xd;
	},&#xd;
	&quot;channel&quot;: {&#xd;
		&quot;name&quot;: &quot;CommerceChannel&quot;,&#xd;
		&quot;characteristics&quot;: [&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_PROVINCE&quot;,&#xd;
				&quot;value&quot;: &quot;ON&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_TYPE&quot;,&#xd;
				&quot;value&quot;: &quot;DL&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_INTERNAL_ID&quot;,&#xd;
				&quot;value&quot;: &quot;10369836&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_ID&quot;,&#xd;
				&quot;value&quot;: &quot;1100031727&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;place&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;4160794191&quot;,&#xd;
			&quot;role&quot;: &quot;BILLING&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_PROVINCE&quot;,&#xd;
					&quot;value&quot;: &quot;ON&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_CITY&quot;,&#xd;
					&quot;value&quot;: &quot;Ottawa&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	],&#xd;
	&quot;productOfferingQualificationItem&quot;: [&#xd;
		{&#xd;
			&quot;action&quot;: &quot;activation&quot;,&#xd;
			&quot;product&quot;: {&#xd;
				&quot;id&quot;: &quot;4160794191&quot;,&#xd;
				&quot;isBundle&quot;: false,&#xd;
				&quot;name&quot;: &quot;POSTPAID&quot;,&#xd;
				&quot;place&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;4160794191&quot;,&#xd;
						&quot;role&quot;: &quot;MARKET&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;MARKET_PROVINCE_CODE&quot;,&#xd;
								&quot;value&quot;: &quot;PQ&quot; &#xd;
							}							&#xd;
						]&#xd;
					}&#xd;
				],&#xd;
				&quot;productSpecification&quot;: {&#xd;
					&quot;id&quot;: &quot;POSTPAID&quot;,&#xd;
					&quot;name&quot;: &quot;PRODUCT_TYPE_CD&quot;&#xd;
				},&#xd;
				&quot;relatedParty&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;4160794191&quot;, &#xd;
						&quot;role&quot;: &quot;SUBSCRIBER&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PRODUCT_TYPE&quot;,&#xd;
								&quot;value&quot;: &quot;C&quot;&#xd;
							},&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PORT_IN_IND&quot;,&#xd;
								&quot;value&quot;: &quot;N&quot;&#xd;
							}&#xd;
							&#xd;
						]&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;relatedParty&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;4160794191&quot;,&#xd;
			&quot;role&quot;: &quot;ACCOUNT&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BRAND_CD&quot;,&#xd;
					&quot;value&quot;: &quot;3&quot; &#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;MASTER_SOURCE_CD&quot;,&#xd;
					&quot;value&quot;: &quot;130&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_TYPE&quot;,&#xd;
					&quot;value&quot;: &quot;I&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_SUBTYPE&quot;,&#xd;
					&quot;value&quot;: &quot;R&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;B&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_RISK_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;100&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_ACTIVATION_DATE&quot;,&#xd;
					&quot;value&quot;: &quot;2020-05-05&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACTIVE_SUBSCRIBER_COUNT&quot;,&#xd;
					&quot;value&quot;: &quot;0&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">productofferingsearchapi-it04.paas-app-east2-np.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/v1/productOfferingQualification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-dynaTrace-Test" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace-Test</stringProp>
                  <stringProp name="Header.value">TSN=KOODO_ProductOfferingQualification_02_Search_Activation;PC=web_custom_request;SI=LoadRunner;LSN=SearchActivation;VU=-1;</stringProp>
                </elementProp>
                <elementProp name="x-dynaTrace" elementType="Header">
                  <stringProp name="Header.name">x-dynaTrace</stringProp>
                  <stringProp name="Header.value">SN=SearchActivation;VU=1;TE=;AN=localhost;PC=Custom Request: web_custom_request;ID=1672742569300;NA=KOODO_ProductOfferingQualification_02_Search_Activation;SI=LR</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">No-Cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KOODO_ProductOfferingQualification_02_Search_Activation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: &quot;KSC${rand2}${TransactionId}&quot;,&#xd;
	&quot;qualificationType&quot;: &quot;CATALOGUE&quot;,&#xd;
	&quot;instantSyncQualification&quot;: true,&#xd;
	&quot;provideAlternative&quot;: false,&#xd;
	&quot;provideOnlyAvailable&quot;: true,&#xd;
	&quot;provideUnavailabilityReason&quot;: false,&#xd;
	&quot;category&quot;: {&#xd;
		&quot;name&quot;: &quot;EQUIPMENT&quot;&#xd;
	},&#xd;
	&quot;channel&quot;: {&#xd;
		&quot;name&quot;: &quot;CommerceChannel&quot;,&#xd;
		&quot;characteristics&quot;: [&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_PROVINCE&quot;,&#xd;
				&quot;value&quot;: &quot;ON&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_TYPE&quot;,&#xd;
				&quot;value&quot;: &quot;DL&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_ORG_INTERNAL_ID&quot;,&#xd;
				&quot;value&quot;: &quot;10369836&quot;&#xd;
			},&#xd;
			{&#xd;
				&quot;name&quot;: &quot;CHANNEL_OUTLET_ID&quot;,&#xd;
				&quot;value&quot;: &quot;1100031727&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;place&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;${Koodo_BAN}&quot;,&#xd;
			&quot;role&quot;: &quot;BILLING&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_PROVINCE&quot;,&#xd;
					&quot;value&quot;: &quot;ON&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BILLING_CITY&quot;,&#xd;
					&quot;value&quot;: &quot;Ottawa&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	],&#xd;
	&quot;productOfferingQualificationItem&quot;: [&#xd;
		{&#xd;
			&quot;action&quot;: &quot;activation&quot;,&#xd;
			&quot;product&quot;: {&#xd;
				&quot;id&quot;: &quot;${Koodo_Subscriber}&quot;,&#xd;
				&quot;isBundle&quot;: false,&#xd;
				&quot;name&quot;: &quot;POSTPAID&quot;,&#xd;
				&quot;place&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;${Koodo_BAN}&quot;,&#xd;
						&quot;role&quot;: &quot;MARKET&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;MARKET_PROVINCE_CODE&quot;,&#xd;
								&quot;value&quot;: &quot;${Province}&quot; &#xd;
							}							&#xd;
						]&#xd;
					}&#xd;
				],&#xd;
				&quot;productSpecification&quot;: {&#xd;
					&quot;id&quot;: &quot;POSTPAID&quot;,&#xd;
					&quot;name&quot;: &quot;PRODUCT_TYPE_CD&quot;&#xd;
				},&#xd;
				&quot;relatedParty&quot;: [&#xd;
					{&#xd;
						&quot;id&quot;: &quot;{Koodo_Subscriber}&quot;, &#xd;
						&quot;role&quot;: &quot;SUBSCRIBER&quot;,&#xd;
						&quot;characteristics&quot;: [&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PRODUCT_TYPE&quot;,&#xd;
								&quot;value&quot;: &quot;C&quot;&#xd;
							},&#xd;
							{&#xd;
								&quot;name&quot;: &quot;PORT_IN_IND&quot;,&#xd;
								&quot;value&quot;: &quot;N&quot;&#xd;
							}&#xd;
							&#xd;
						]&#xd;
					}&#xd;
				]&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;relatedParty&quot;: [&#xd;
		{&#xd;
			&quot;id&quot;: &quot;${Koodo_BAN}&quot;,&#xd;
			&quot;role&quot;: &quot;ACCOUNT&quot;,&#xd;
			&quot;characteristics&quot;: [&#xd;
				{&#xd;
					&quot;name&quot;: &quot;BRAND_CD&quot;,&#xd;
					&quot;value&quot;: &quot;3&quot; &#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;MASTER_SOURCE_CD&quot;,&#xd;
					&quot;value&quot;: &quot;130&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_TYPE&quot;,&#xd;
					&quot;value&quot;: &quot;I&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_SUBTYPE&quot;,&#xd;
					&quot;value&quot;: &quot;R&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;B&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;CREDIT_CLASS_RISK_CODE&quot;,&#xd;
					&quot;value&quot;: &quot;100&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACCOUNT_ACTIVATION_DATE&quot;,&#xd;
					&quot;value&quot;: &quot;2020-05-05&quot;&#xd;
				},&#xd;
				{&#xd;
					&quot;name&quot;: &quot;ACTIVE_SUBSCRIBER_COUNT&quot;,&#xd;
					&quot;value&quot;: &quot;0&quot;&#xd;
				}&#xd;
			]&#xd;
		}&#xd;
	]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASEURL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/marketsales/offeringSearch/v1/productOfferingQualification</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-dynaTrace-Test" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace-Test</stringProp>
                  <stringProp name="Header.value">LSN=KoodoSearchActivation;TSN=${__samplerName()};SI=BZM;LTN=KoodoSearchActivation;VU=${__threadNum()};</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">No-Cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${c_AuthToken}</stringProp>
                </elementProp>
                <elementProp name="env" elementType="Header">
                  <stringProp name="Header.name">env</stringProp>
                  <stringProp name="Header.value">it04</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

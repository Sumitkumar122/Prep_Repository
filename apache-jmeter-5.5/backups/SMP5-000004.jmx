<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SMP5" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="BASE_URL_1" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_1</stringProp>
              <stringProp name="Argument.value">smp-enterprise-np.telus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_2" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_2</stringProp>
              <stringProp name="Argument.value">telusidentity-pp.telus.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="BASE_URL_3" elementType="Argument">
              <stringProp name="Argument.name">BASE_URL_3</stringProp>
              <stringProp name="Argument.value">telus.demdex.net</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Pacing" elementType="Argument">
              <stringProp name="Argument.name">Pacing</stringProp>
              <stringProp name="Argument.value">${__P(propPacing,60)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">smp-enterprise-np.telus.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.embedded_url_re">^((?!google|facebook|pinterest|twimg|doubleclick|png|css|min.js|favicon.ico|.js).)*$</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">false</boolProp>
          <boolProp name="useExpires">false</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - User Credentials" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">SMP5_Email &amp; Password.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">username,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="endTime" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def endTime = dateobj.getTime();
vars.put(&quot;endTime&quot;,endTime.toString())
log.info(&quot;Current date in the specified format: &quot; + endTime);
SampleResult.setIgnore();
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="false">
          <stringProp name="IfController.condition">&quot;${__jm__SMP5__idx}&quot; != &quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing Timer" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${myDelay}</stringProp>
          </TestAction>
          <hashTree>
            <JSR223Timer guiclass="TestBeanGUI" testclass="JSR223Timer" testname="JSR223 Timer" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">Long pacingInput = Long.valueOf(vars.get(&apos;Pacing&apos;))*1000;
Long elapsed = Long.valueOf(vars.get(&apos;endTime&apos;)) - Long.valueOf(vars.get(&apos;startTime&apos;))
Long pacing = pacingInput-elapsed;
if ( pacing &gt; 0 ) 
{
	vars.put(&quot;myDelay&quot;, String.valueOf(pacing));
	log.info(&quot;Pacing Time to Delay: &quot; + myDelay);
	return 0;
}
else 
{
	vars.put(&quot;myDelay&quot;, &quot;0&quot;);
	return 0; 
}
</stringProp>
            </JSR223Timer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="startTime" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def startTime = dateobj.getTime();
log.info(&quot;Current date in the specified format: &quot; + startTime);
vars.put(&quot;startTime&quot;,startTime.toString())
SampleResult.setIgnore();</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="001_SMP5_Launch Page" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" https://smp-enterprise-np.telus.com" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="State Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">state</stringProp>
              <stringProp name="RegexExtractor.regex">state=(.*?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No value</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Nonce Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">nonce</stringProp>
              <stringProp name="RegexExtractor.regex">nonce=(.*?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No value</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/as/authorization.oauth2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile email 1910 2937</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">${state}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://smp-enterprise-np.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${nonce}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">query</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="env" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">env</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">as/authorization.oauth2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="as Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">as</stringProp>
              <stringProp name="RegexExtractor.regex">as/(.+?)/</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No Value</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ciTrackingId Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ciTrackingId</stringProp>
              <stringProp name="RegexExtractor.regex"> name=&quot;ciTrackingId&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">No Value</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="002_SMP5_Login User" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/as/Gayzr/resume/as/authorization.ping" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">430ef14a-78a0-4e26-90a7-1e01e744a039</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ciTrackingId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ciTrackingId</stringProp>
                  <stringProp name="Argument.value">${ciTrackingId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="actionURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">actionURL</stringProp>
                  <stringProp name="Argument.value">%2Fas%2F${as}%2Fresume%2Fas%2Fauthorization.ping%3Fservice_type%3Dtelus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userLanguage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userLanguage</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="IDToken1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">IDToken1</stringProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientType</stringProp>
                  <stringProp name="Argument.value">OAUTH</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="IDToken2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">IDToken2</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="service_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">service_type</stringProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">q</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-z</stringProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">O60BjfY0gDaALjnPVZAKVo__7%3DP4CafOJ5x_0gRfhbbdhyTwnJLg%3DzUc8tragQOFDIABtxlM0as2glBwKaVh6EHuFzwQmGClA44PZdoUQXlcKxi9Facq-nwZPDnllfojtvTlV-6Ufhq-CUuJcPbFOhXwJdgwip2-EXZJpT6Liplqe6qukbS%3DFbu8Cia_BY22vOOkDWDMzf0A4ENWTw2GOoX6SxpAMc0w4Oe7vDUddx459e_qk-UKDxurfPTBlsSExV71AGpEypLeeoxfk8X--xsYjPpYw-4ZeAGrOopyBzTwjOxP6rhFaQhIEU5lUtn4EQs%3D1_8HaQQFVgz_EE057fYQ2JTBKvtqoZ4_NKtjBSO1176DYtvVGkfQkgfGwNeczWu7VhRmkBJcMGeQ0LLAOR1pJxiBFC8JS%3DMafTnk2OZy8QbANEaswzXVMUsqqoxB7VNLoinChNUpQHfEiaN7xtGZ--WBcOoOrTpRBMaqPJYdRsYDSVuJkPGzF_qnBuxMj7uKiBTZI6lY2JPybhz4V%3DRQwxvHrfCi5NEVb45EWq1FFrgScVP4eHC%3DK4bBsCgQigUrUTTTrHNer1FjyByD7Sq_U9EbUTZT2adDgQrZGw9RyopRlPpF8UQv14QTmli_cy-DdX4N%3DSKWNdVpYxRuIm%3DlzVQauGa4HyUKg5su2PV%3D4fGGltBsqSq7eBfoxABrNs1vToikn7kMLvxo-v2Dm1sR%3DyObtV195qeN6Qhy8RmvDD56QakaG41j6C89BIo8sPal8RnQZxYQVUu7ol2SGFgrHBmha4idI2PWxU1y09fve_vCOtYyQS5o80lZNuqzmktXhkKpNB2i-JklY_v6ZF0lR-0v7SejmhmXmjCzSWvQUnVNynDK466tQCM9kEV_OsdcmjB8ifH2kCPoa6bEuvbJdfAxWQ1CA1t5jiQB66__mQe2i_zgdGJNBQx%3DNWVkkQu_QSPYW%3DG78a7JMfSARbWKdH9tsQvVAaek%3DtspzFFpiwo7eLhKJ8-jynR-5tNfH2PprwRz9szDb58joJYWkQ4vK-lFrc1tnFtKSPmJ9yyPDDgfvbtBZ_10MzR2RRFD2aCGZqjGuJekrovsF-EU6IFXcYa_YIS0Oq5DFLRlcGKexvKqF2qBKZamQZYP1cHZ2bbsCMyDqv7rWRIPY5xgxt9LxyQSmGPb0pEg8jqjpEzM7lTCav7nbovIF4NDOF0pFmUesKxKpWdDl_FRZ9ci8aNqoAFTI_Ds15dS0LA0A%3DoR_f8-FeAZHwLxQ_li9iSrF5cRcXm2F9Fv2qr01K8pInepay_BEi4fdXIWfjTQHpI6LirZNk6hIomaOZlABr-SZKYkUWBMr%3DVaOYpbGz47hIytQB9r-ly%3DaOuqlrahgZzfypKCCo_SIEMrREkZmPmrIWFJcSUPeWwDysOvtIMGje8a2mzRw66FrTPycIU%3DcIlpICR721tk08hMnqLBE7-2m4CENHhNT2v24UZY6qUpl_Th7gJmYdV%3DL5ysY5DhueCfFvMuIJ6y08WI4GGVz8tg47dI1yvaHqy7JkY4RIcXqo9m_QR5avEpxks9TZRZmASEHgtZ1wQ0ItBvBcLfofnrDhy8BO%3DsErI6g5JRaFVS%3DyIkML5NICbGWYifQZ%3DXKoEtdj8cghuadi-l-2KfR28M2Fomo7HLIHH5kmaiDqkiCe0hb0H0L5KolX_LBHaiFnegdFvIz4CbQwqRGo_wLFqrmdV8aeoiSgnHI8YJavs1RTdYwVnEvVxIzdG1sJt1THumhyrkPssCXsWIHVeuka7ih7reSm1UUQfPIa%3DiM1AbK7%3DtlS8RE2v4ZTWuQDvVTBPeCJfYVfISerSXaynpUeqWFDcST1uIwjG97uw7tNQYcT5h-G-SID4po5v1WHWhnZrKZaFkQp5eBJITzGOc6JP7x2%3DNt7yOJF74BdG_aBTxd7IPJ6unNRqCm82ZGaX1L81ZYHwnniSFHVPX1hLj-10fZD%3DUTOQ8mrvY2CD72Yv1HqCenTl%3D6MvwphnkCfJBIYGj_Y%3DrBjBUjVvF4stkgzbzXRmU2SzU75EYJD2Ix9c9s2x0vaI%3D0bU8kya-grRVofwmYbixfSqxN%3DqMDHpImoGuxUU95LU6K7UQIfipuR7fUlABFSm14KxI8eUyyaeOOc_Hk5H-12VDE_T1WVQfGXaDPRZ4S0SUs49dQ7aqt0OZexVRPlvczwxBkequYY0IVvFr0VfS6r7%3D8O1lI0oc9%3DFGz79tu_%3DHLzRnLHe4uGovxReZ4y60MECzFwXWnQZHFfA8eRkmU9wlZbXbBoN9X77AYU_lb-RR%3D_MsnUYpSjbz6wiueleK4GV2ERYYXH-%3Dzy_rPhUjiPe-je8HAmoK_DQPlJYM9StwmxXzxL4lXC81eIWizKG7vxGXWxNauSoaQoz-y0dlr2iq2MrIfmnNLOWqbikdcxu52-cYMgi7BPChSILBv1jRqoXrP8_7OZdWhMYRfDSympMS4XCaBJk7CAcZ51-s1qmEcuuXU%3DB5MMrmrau9o17RuzxWLndcS2cx5F-REetlMvj1ajOFadtli6GxJdMoXrOehOUzcQsQkeMLQB8hnnmSQZoihMFzWcS1pncU2TKXOTqSEHT%3DvAZ0ovHT9xXmfiks-1-ReanYXWTBG4-CDMoChEkkOotcoVk8JRvVThqlsWZA_A%3DvIb9W6ICoOtM2ZzkjwdO0la1OjIThZwFet1n-YmII1cIcloh%3DOPIcZ59L9CJFBr2vYFtI2D7UdBsqOC1aOfOnizM2WGhZAPDzLgZaIjgDDhQpBJts52L_u0eOXB96va1CWgtjE5d-0jq1wNoGRF6AXrUOzLbngCoch7NJQzTKyksIDwWXBTals_40hdH7oMs5DrOcnBboa9gdzJwmQYbWF-MBQv4W%3DvJoykFBnSKnRfCeKQP-nvNNfScqAYvL9U0i1x-koPJU12xgyd%3DlpuhjIefvrVVbg5nhURsEiFEGTRO4roHfrH7XBXYLYRmORdHl6NhWhtYLnm20%3DTZ1xpC_wQlWoQ_rjoVETCWBVdYGfHO1GZkQ1A%3DrhLJ4HgZgXSRYE0qmi-uCuDmKLId8vcfwD0DHdokhYSW_aZJcURzud-9RSvArSUqfI7_cMpWepRihCgiZitUhhUW9woYaIWwVbBDf68g%3DSzxFJHx0cuSr2cxBlwUe0memE-QXphQMHXkWPt_diICRzUWObKKXuAYr9RMIyWFuyzKvvL9NQQ102Es5HNWy2gfohnA-hqNZ%3DWuvbgkMR-kD_mBvJQrkMCQjXs%3DC_pL9JYoKPFyVdL5WcFsxz5haAfL_k715tO2qMg4JzmhC0HFv401SkIiwb6ATP8in6qzwBVgbFwv5HLO1iL50CsGpllny%3Dn6aXsdLsv9JqkrwMiL0Sxbgxq_4MG9fpSPPdWD2kr74C-pohQ1W2DNvirbVh0%3DVqT4-98odwcbupCRjJBGfokqe2c6pl88efjMghgXSW71Q1l67pvmcyqbO8rNSN%3DzzEM91GWJrVw61oKvCEvu%3DiCoWOTFTz0tW9U97HuSpFMPeJevFFAFuf8Ki55l8gFAOoFMiVtKEIn0eRNpzAwusZlRHaijG8nW_F7dHTxrup0TT5JvdS2Jf18LIaGZZQL7qMXQ1LFUIHFofVnebjzXQSLFo58Y9ayeaE41iK_paz0EvuzEW2vY1SbyL5rH2M%3DGl1ZzOncLY6pdxLQzP8C1ANDauqiB5qbrbdULiRMW7xpjG%3DWUW8zIjaKE9VvOZQKpRLWcT6eMWpIpAYTmydAnKzN5L-cHop5PQG8oXVugODVUUsmW-BYjUX6DQhklds9xvNd-eZ1ew8xUlOAcQjLgwBUpFh9QhHHBPcAZ225RjC4k%3DOiX6KP7%3DrQZ0bDV4WnHT6JPxv--r7hFhuIrsV1EHm-fJ22-2fG4q5TUVY5yNcvd4iGQb4dOiRR%3D40KApufgJaPOAT4L6r4Nw99eNnvksueyeoA0qimSamGfUTX7laZaPW6YD-8jxfYcVNGF1Topq%3Ds1BBJ8KIL70WIFflBt5wuwOxgMF-EgglJNHbxbGPjUM8JC_0ZXnESZ516eVgYvFGqWuGMGbEybV0lqnmE9gFlFb_Nw%3DuLpQKTX_1NsZ99gk_tDGZOFFQDVk2ppIB2DJXAQKgxXZWkaXL4WkNnl0WPnfpQ7m_8%3DKeQ-%3Dy7OklVXo_MzQtI9UoJCUBPLqMDjznXm88UfNceuBSWk5AtCbePyNrvr%3DSuxfBqXLGvRhgHXlj6qj66w8uw%3DvqiNWVYXVSCsNIf878ve8DDsGiAm_DoxS89E9Z9J-yQVMysmKZLeBsAhG%3DMMBceBR2zUznRXZlFfv6yUMzEY8OEAt1-YWYlK5KvK1r60wdlGWq7pTX7gcQVmaVTFzz2zBfIqBAN9R48JUv7DkdN5YdAsXwO2MSSGH48xMheRL%3Dz9giPla6Ux7NOrWMCncgOA5_0QI_pGaR6xQ_prOOGSMKx%3DLbLgbkQK%3DDsG4kC0YRd_G9Xkp51jd9aHHujtRRgvekjcdOFKQuviqwT7QtUkLTABk4E-UHQiS9bohISNCvI-GfIhsGru21QJ2d%3DWLrHXX74r2xQqmz5DVT89ETG_i%3DpBZfz1MA9-Q_H1s-mc--jT4XwAtET40pmC_br6K4Byulv68nGlZEA7ossrx7KIGgEYKROh5oj%3DDHitOUfILIduVOC9aMIB0uDzTSNYnS0QLW1CCJlprvjCEjv0mZT-djGNUEe9nTHHHi%3D%3D5YOJZ2iiBKRETsC0b%3DUVA4k8DRSujtdMA6USG89K18Rl0grQKrSiRcq2uEtznf7qe_MzF4IwYz%3DBlWgCxdt4Bw2bQ0io1WoWF7y7NPRSWQQWWeRVJIKBp0rNwLxJsD0h7PcsuRAP86txq_qvhYWmlTs-EwNX4w-IMIyCsk-W4AtC2lK2FOJFoxbCJchuW56W7Fp1MPk8Gs4yvvulNLJBGPuQvBXCdeoh4g7GkEFkR-lJsLp56J9b6prdt66wq867V5oiR5ECoBKXrcdXbPtdaJWv1oDk4xlhKTBuzGt0xDGT19SzhHfX-FXNBRI1YWaEWhmJm6tMc7iOYGjVxSo8OE4Pg0xh-v-ctA2Ii7-f7GZJ6J1aCXMzhkfg4DzmP6xhhgRXwMKoSklBuzD0x8tObnI4_UQYuvlKOKQZKHOv9KNvZ5CX9UaAXAH7%3DR5jBXOeCNotlQ_8khAXgMvOSjkaVAVOL9djx4xGWZtBHqKRFLL8MfjBvuqUQhTgIiMfNgBsa5v_j4bhUYSnkRINAt2PLf8kgZPV21w%3D2havOGO87ZnJz-4Cbyaovtj8WwEIOMOIVz5pEx2QK_i7fHe-FsjJONbItx1dUsz8dx-D6Dq91Ua65ZlefFVuxnZFb%3Drj_izxs71Mu20s2zERu49Q5ktiioRmsceq66E9oZu9W_ybjDvfs5Q2WSWhHMozBzrvKS-zrwrniDSO2pBYyUTl%3D491OMBFmf10hqKCexJPCsvoZcfteTG84gGac%3DWOcMLjN88EkDa_59MOhSaWBb-j6TjaF7O-K_nE2YCJR_OJRjiRdXVaN_X5%3DOAfgBtJFNcn7prgPnOUH%3D_fvb72ZnkGPYCNK4T_LpP5VLr9gbCuMfEfibvdn98zenEuNvc6JRyh14UJ0d4oj_UEOP4fmPmJXQnh4nG8OPLQtipqqy0whoOr9-diJpOzJQUniFLp%3DuitcGHDVK4vS11ROZO%3DIbEnQsHNBSwC_PbzNdZL0PD_7egm9YsMYAssY6q8e87USj4-koKOgW%3D0jzydB4L4E_-Xj7zVpp%3D06I65oVzvkix_mnLmKKA_CLv-cDduD0RiRsAzEKdWfupa0vPuqqEC56TwDBGO7Rn%3DDiquFf1LpwVnFLPsNPcxhOtZoT-RXJwk7H-%3DcAJ_NQY8EUMNqqqcaLFs0gBQxAATPqtiA-zY7U%3DxsjX6t2JSjxCu1yzz-LD_cHQiVyYKCOHuNnhqPxJbPVqXv1QQQzXtoF9YZUYyQuGGU-NTm4EpJYnxgH5FM_9x8tT7EFFMcg%3Dm%3DJgV1jNwKnutsvYhdTUGCGQpj-mOlrZJJbLjAwiaax_Q4NPlAx9s8SqfY4Le1kY_WDd5z_2z6lClYX09mVFo_uCGyrkIUVMsqLFiGYPDFE0MbRNDSNUAeU-NZH1V1y6hs1cSKbHZlpWTxXr49mcV6liGbtYov_Ies6b%3DXifa8YtmavvNgj4yspAgganLk2S4wF%3Dr-mGKDtQVOaHlvNh_RZPnb_HdU0eNOeBLvEx-b09VVaFgTqfSnzsAvIhYzG%3DmRIeDlt21F6o7nrdTI6URJo09AwKSVgo0blPhoXh5dav4GKZp5LrA7FR2-hufVvp0fLAEE0G0bG1ooiWYQ8jjlvYFhB6c70nGhHwCGXQ44coy4d7wt-B%3Dx1i7UCLaQTSqj655J_ybK1oDgWEKL%3DVV9RJblk2GANIbbOKuuWt8RGUoheZ9Zbu79RwBKpfjJmVM6SPhq8Vx6kcz9RbIohobihVyCm8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-a</stringProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">AMC9ZFeIAQAAPfhV0WYCWUJnTrd93JM6P6OwUTCwWEsp-nkUxfB5uMX4pbui</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-c</stringProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-b" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">-y8rwmj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-b</stringProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">ABaAhIjBCKHFgQGAAYIQgISi0aIA5JmBzvpDzz8A8Hm4xfilu6IAAAAANb01RQBQ2RnEgHbvtFe-lindXwZC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-d</stringProp>
                </elementProp>
                <elementProp name="rLeOBG0kof-f" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">A7Rgd1eIAQAAiUmd3Xf8sc4CWld-RFpP-Nj23AjeVOw2qHSVE07CvGolvOMCAdAmO6Oucn0ewH8AAEB3AAAAAA%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">rLeOBG0kof-f</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">telusidentity-pp.telus.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">as/${as}/resume/as/authorization.ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://smp-enterprise-np.telus.com/api/auth/user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/auth/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://smp-enterprise-np.telus.com/api/busobj/companyname" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/busobj/companyname</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://smp-enterprise-np.telus.com" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">198.161.14.25</stringProp>
            <stringProp name="HTTPSampler.proxyPort">8080</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://dpm.demdex.net/id?d_visid_ver=4.3.0&amp;d_fieldgroup=MC&amp;d_rtbd=json&amp;d_ver=2&amp;d_orgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;d_nsid=0&amp;ts=1685083323916" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d_visid_ver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_visid_ver</stringProp>
                  <stringProp name="Argument.value">4.3.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="d_fieldgroup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_fieldgroup</stringProp>
                  <stringProp name="Argument.value">MC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="d_ver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_ver</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="d_nsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_nsid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="d_orgid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">d_orgid</stringProp>
                  <stringProp name="Argument.value">67A50FC0539F0BBD0A490D45@AdobeOrg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="d_rtbd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_rtbd</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1685083323916</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">id</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="include" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">include</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="content_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">content_type</stringProp>
                  <stringProp name="Argument.value">callControlContainer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fields.slug" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fields.slug</stringProp>
                  <stringProp name="Argument.value">home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value">en-CA-BC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="X-Contentful-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-Contentful-User-Agent</stringProp>
                  <stringProp name="Header.value">sdk contentful.js/9.3.3; platform browser; os Windows;</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer c2f6aa1b8784ee480e041542f114d910e86e98154fd4acc026e5b45a7871cb27</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="cookies" elementType="Header">
                  <stringProp name="Header.name">cookies</stringProp>
                  <stringProp name="Header.value">{&quot;AMCV_67A50FC0539F0BBD0A490D45%40AdobeOrg&quot;:&quot;-1712354808|MCIDTS|19504|vVersion|4.3.0&quot;,&quot;mbox&quot;:&quot;session#7438085e666d416bbdaf33fcd462b108#1685085184&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_-2D2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF&amp;svrid=-2&amp;flavor=post&amp;vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=4057965888&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">4057965888</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_-2D2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1685083306466|0|dn|-1|svtrg|1|svm|i1^sk0^sh0,2|2|x|xhr|x|1685083323918|0|dn|-1|xu|https://dpm.demdex.net/id?d_visid_ver=4.3.0&amp;d_fieldgroup=MC&amp;d_rtbd=json&amp;d_ver=2&amp;d_orgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;d_nsid=0&amp;ts=1685083323916|svtrg|1|svm|i1^sk0^sh0,2|3|x|xhr|x|1685083324437|0|dn|-1|xu|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|svtrg|1|svm|i1^sk0^sh0$PV=1$rId=RID_1109281689$rpId=-2066293403$md=mdcc1,en$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=1924$app=72172083ddd940ed$vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0$fId=283320228_89$v=10257221222094147$time=1685083325249</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://b.telus.com/id?d_visid_ver=4.3.0&amp;d_fieldgroup=A&amp;mcorgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;mid=13971229449983468943110105173891387779&amp;ts=1685083325946" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d_visid_ver" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_visid_ver</stringProp>
                  <stringProp name="Argument.value">4.3.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mcorgid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mcorgid</stringProp>
                  <stringProp name="Argument.value">67A50FC0539F0BBD0A490D45@AdobeOrg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="d_fieldgroup" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d_fieldgroup</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">13971229449983468943110105173891387779</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ts</stringProp>
                  <stringProp name="Argument.value">1685083325946</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">id</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adobedc.demdex.net/ee/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=17551ae1-0fb1-424f-8f05-fcffd5f76e0f" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;eventType&quot;:&quot;web.webpagedetails.pageViews&quot;,&quot;eventMergeId&quot;:&quot;%eventMergeID%&quot;,&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04&quot;,&quot;name&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;siteSection&quot;:&quot;my-telus&quot;,&quot;_telus&quot;:{&quot;customSiteSection&quot;:&quot;my-telus&quot;,&quot;primarySiteSection&quot;:&quot;my-telus_log-in&quot;,&quot;customPageViews&quot;:1,&quot;pageName&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;province&quot;:&quot;bc&quot;,&quot;pageLanguage&quot;:&quot;en&quot;,&quot;webApp&quot;:&quot;web&quot;,&quot;dataLayerType&quot;:&quot;acdl&quot;,&quot;brand&quot;:&quot;telus&quot;,&quot;edgeServer&quot;:&quot;edge.adobedc.net&quot;,&quot;tagManager&quot;:&quot;adobe_launch&quot;,&quot;adobeDataLayerBuilder&quot;:&quot;alloyAnalytics&quot;,&quot;lob&quot;:&quot;my-telus&quot;,&quot;pageType&quot;:&quot;log-in&quot;,&quot;userLoginStatus&quot;:&quot;logged_out&quot;,&quot;ecid&quot;:&quot;&quot;,&quot;site&quot;:&quot;telus.com&quot;,&quot;userAccountID&quot;:&quot;&quot;,&quot;queryString&quot;:&quot;?response_mode=query&amp;redirect_uri=https%3a%2f%2fsmp-enterprise-np.telus.com&amp;nonce=piij6ioqbqeawrlbkisxz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7rbknmxqha3sr0xiq5ab2c&amp;scope=openid%20profile%20email%pii&amp;env=it04&quot;,&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2&quot;,&quot;pageURL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2&quot;,&quot;crid&quot;:&quot;&quot;,&quot;timezoneOffset&quot;:&quot;1212|5.5&quot;,&quot;timePart&quot;:&quot;year=2023|month=may|date=26|day=friday|time=2:42am&quot;,&quot;newRepeat&quot;:&quot;new&quot;,&quot;pageLoadTime&quot;:&quot;2023-05-26T06:42:05.501Z&quot;,&quot;decibelID&quot;:&quot;&quot;,&quot;checkoutType&quot;:&quot;&quot;,&quot;banType&quot;:&quot;&quot;},&quot;pageViews&quot;:{&quot;value&quot;:1},&quot;server&quot;:&quot;https://telusidentity-pp.telus.com&quot;},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;},&quot;webInteraction&quot;:{&quot;_telus&quot;:{&quot;toolUsageStart&quot;:1,&quot;toolName&quot;:&quot;login_tool&quot;,&quot;cta&quot;:&quot;&quot;}}},&quot;device&quot;:{&quot;screenHeight&quot;:864,&quot;screenWidth&quot;:1536,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1519,&quot;viewportHeight&quot;:722,&quot;userAgentClientHints&quot;:{&quot;architecture&quot;:&quot;x86&quot;,&quot;bitness&quot;:&quot;64&quot;,&quot;model&quot;:&quot;&quot;,&quot;platformVersion&quot;:&quot;10.0.0&quot;,&quot;wow64&quot;:false}}},&quot;placeContext&quot;:{&quot;localTimezoneOffset&quot;:-330,&quot;localTime&quot;:&quot;2023-05-26T12:12:05.474+05:30&quot;},&quot;timestamp&quot;:&quot;2023-05-26T06:42:05.474Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.15.0+2.16.1&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;marketing&quot;:{&quot;_telus&quot;:{}},&quot;commerce&quot;:{&quot;_telus&quot;:{}},&quot;productListItems&quot;:[],&quot;search&quot;:{&quot;_telus&quot;:{}},&quot;identityMap&quot;:{}},&quot;query&quot;:{&quot;personalization&quot;:{&quot;schemas&quot;:[&quot;https://ns.adobe.com/personalization/default-content-item&quot;,&quot;https://ns.adobe.com/personalization/html-content-item&quot;,&quot;https://ns.adobe.com/personalization/json-content-item&quot;,&quot;https://ns.adobe.com/personalization/redirect-item&quot;,&quot;https://ns.adobe.com/personalization/dom-action&quot;],&quot;decisionScopes&quot;:[&quot;__view__&quot;],&quot;surfaces&quot;:[&quot;web://telusidentity-pp.telus.com/as/authorization.oauth2&quot;]}}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;xdm&quot;:{&quot;identityMap&quot;:{&quot;ECID&quot;:[{&quot;id&quot;:&quot;13971229449983468943110105173891387779&quot;}]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;telus.com&quot;,&quot;cookiesEnabled&quot;:true}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=17551ae1-0fb1-424f-8f05-fcffd5f76e0f</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telus.tt.omtrdc.net/m2/telus/mbox/json?mbox=target-global-mbox&amp;mboxSession=7438085e666d416bbdaf33fcd462b108&amp;mboxPC=&amp;mboxPage=2ee24cb7d51c461592359be8eac0e1f7&amp;mboxRid=a5d463d7c80d43ef9bd0b4be0c6e4961&amp;mboxVersion=1.5.0&amp;mboxCount=1&amp;mboxTime=1685103123971&amp;mboxHost=telusidentity-pp.telus.com&amp;mboxURL=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;mboxReferrer=&amp;browserHeight=722&amp;browserWidth=1519&amp;browserTimeOffset=330&amp;screenHeight=864&amp;screenWidth=1536&amp;colorDepth=24&amp;devicePixelRatio=1.25&amp;screenOrientation=landscape&amp;webGLRenderer=ANGLE%20(Intel%2C%20Intel(R)%20Iris(R)%20Xe%20Graphics%20Direct3D11%20vs_5_0%20ps_5_0%2C%20D3D11)&amp;language=&amp;pageName=&amp;province=&amp;at_property=3bf04b3b-07e9-f142-6998-31dac9d5073e&amp;mboxMCSDID=25E8AA9DCB8F5F59-2C21724C2173336A&amp;vst.trk=a.telus.com&amp;vst.trks=b.telus.com" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mboxPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxPage</stringProp>
                  <stringProp name="Argument.value">2ee24cb7d51c461592359be8eac0e1f7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxMCSDID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxMCSDID</stringProp>
                  <stringProp name="Argument.value">25E8AA9DCB8F5F59-2C21724C2173336A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenWidth</stringProp>
                  <stringProp name="Argument.value">1536</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="at_property" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">at_property</stringProp>
                  <stringProp name="Argument.value">3bf04b3b-07e9-f142-6998-31dac9d5073e</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vst.trk" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vst.trk</stringProp>
                  <stringProp name="Argument.value">a.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxTime</stringProp>
                  <stringProp name="Argument.value">1685103123971</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxSession" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxSession</stringProp>
                  <stringProp name="Argument.value">7438085e666d416bbdaf33fcd462b108</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mboxURL</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="webGLRenderer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">webGLRenderer</stringProp>
                  <stringProp name="Argument.value">ANGLE (Intel, Intel(R) Iris(R) Xe Graphics Direct3D11 vs_5_0 ps_5_0, D3D11)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mbox" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mbox</stringProp>
                  <stringProp name="Argument.value">target-global-mbox</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageName</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="devicePixelRatio" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">devicePixelRatio</stringProp>
                  <stringProp name="Argument.value">1.25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenOrientation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenOrientation</stringProp>
                  <stringProp name="Argument.value">landscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="province" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">province</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxReferrer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxReferrer</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxVersion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxVersion</stringProp>
                  <stringProp name="Argument.value">1.5.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxCount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxCount</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browserHeight</stringProp>
                  <stringProp name="Argument.value">722</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenHeight" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenHeight</stringProp>
                  <stringProp name="Argument.value">864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxPC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxPC</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxHost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxHost</stringProp>
                  <stringProp name="Argument.value">telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserTimeOffset" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browserTimeOffset</stringProp>
                  <stringProp name="Argument.value">330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vst.trks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vst.trks</stringProp>
                  <stringProp name="Argument.value">b.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mboxRid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mboxRid</stringProp>
                  <stringProp name="Argument.value">a5d463d7c80d43ef9bd0b4be0c6e4961</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="colorDepth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">colorDepth</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browserWidth" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browserWidth</stringProp>
                  <stringProp name="Argument.value">1519</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">m2/telus/mbox/json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.wcstage.telus.com/chat/api/bootstrap?route=as%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;language=en&amp;province=&amp;device=desktop&amp;segmentID=false" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="route" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">route</stringProp>
                  <stringProp name="Argument.value">as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="province" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">province</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="segmentID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">segmentID</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="device" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">chat/api/bootstrap</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s65731923294580" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="c74" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c74</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v9</stringProp>
                  <stringProp name="Argument.value">log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">jsonv</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c34" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c34</stringProp>
                  <stringProp name="Argument.value">D=v52</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v148" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v148</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3a%2f%2fsmp-enterprise-np.telus.com&amp;nonce=e3i0j8j6ioqbqeawrlbkisxz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7rbknmxqha3sr0xiq5ab2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v220" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v220</stringProp>
                  <stringProp name="Argument.value">2023-05-19T17:20:43Z</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamlh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamlh</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageName</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v100" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v100</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQB</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nsid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nsid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQE</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamb</stringProp>
                  <stringProp name="Argument.value">6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sdid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sdid</stringProp>
                  <stringProp name="Argument.value">25E8AA9DCB8F5F59-2C21724C2173336A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="events" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">events</stringProp>
                  <stringProp name="Argument.value">event370,event512,event452,event1,event510,event450,event17</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c46" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c46</stringProp>
                  <stringProp name="Argument.value">D=v72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c45" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c45</stringProp>
                  <stringProp name="Argument.value">D=v71</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c47" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c47</stringProp>
                  <stringProp name="Argument.value">D=v73</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v136" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v136</stringProp>
                  <stringProp name="Argument.value">17.985</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c." elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c.</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c5" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c5</stringProp>
                  <stringProp name="Argument.value">D=v21</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c6</stringProp>
                  <stringProp name="Argument.value">D=v22</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c7</stringProp>
                  <stringProp name="Argument.value">D=v18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c8</stringProp>
                  <stringProp name="Argument.value">D=v19</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c9</stringProp>
                  <stringProp name="Argument.value">my-telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v23</stringProp>
                  <stringProp name="Argument.value">new</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c53" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c53</stringProp>
                  <stringProp name="Argument.value">consumer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="server" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">server</stringProp>
                  <stringProp name="Argument.value">telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c10" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c10</stringProp>
                  <stringProp name="Argument.value">D=v9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="l2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">l2</stringProp>
                  <stringProp name="Argument.value">tcom_new_loginpage_selfreglink, tcom_my-telus_login_eversafe_learn-more</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c59" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c59</stringProp>
                  <stringProp name="Argument.value">D=v149</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bh</stringProp>
                  <stringProp name="Argument.value">722</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getNewRepeat" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">getNewRepeat</stringProp>
                  <stringProp name="Argument.value">3.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v202" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v202</stringProp>
                  <stringProp name="Argument.value">pl: set salesForceSegment</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">13971229449983468943110105173891387779</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">h1</stringProp>
                  <stringProp name="Argument.value">my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v203" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v203</stringProp>
                  <stringProp name="Argument.value">ST Call</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="d." elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">d.</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="getTimeParting" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">getTimeParting</stringProp>
                  <stringProp name="Argument.value">6.3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="h2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">h2</stringProp>
                  <stringProp name="Argument.value">en,my-telus - log in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v201" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v201</stringProp>
                  <stringProp name="Argument.value">pl: page view (ver 1.6.1)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="products" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">products</stringProp>
                  <stringProp name="Argument.value">;intcmp_imp;;;event17=1;evar25=tcom_new_loginpage_selfreglink,;intcmp_imp;;;event17=1;evar25= tcom_my-telus_login_eversafe_learn-more</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v72" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v72</stringProp>
                  <stringProp name="Argument.value">friday</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v71" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v71</stringProp>
                  <stringProp name="Argument.value">2:30am</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v30" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v30</stringProp>
                  <stringProp name="Argument.value">D=mid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v73" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v73</stringProp>
                  <stringProp name="Argument.value">weekday</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v32" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v32</stringProp>
                  <stringProp name="Argument.value">not logged in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bw</stringProp>
                  <stringProp name="Argument.value">1536</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="-g" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">-g</stringProp>
                  <stringProp name="Argument.value">Q5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cc</stringProp>
                  <stringProp name="Argument.value">CAD</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mcorgid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mcorgid</stringProp>
                  <stringProp name="Argument.value">67A50FC0539F0BBD0A490D45@AdobeOrg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c66" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c66</stringProp>
                  <stringProp name="Argument.value">pl: page view (ver 1.6.1)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c21" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c21</stringProp>
                  <stringProp name="Argument.value">?response_mode=query&amp;redirect_uri=https%3a%2f%2fsmp-enterprise-np.telus.com&amp;nonce=e3i0j8j6ioqbqeawrlbkisxz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7rbknmxqha3sr0xiq5ab2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c68" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c68</stringProp>
                  <stringProp name="Argument.value">ST Call</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ch</stringProp>
                  <stringProp name="Argument.value">my-telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c23</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c67" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c67</stringProp>
                  <stringProp name="Argument.value">pl: set salesForceSegment</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="g" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">g</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0Xi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v159" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v159</stringProp>
                  <stringProp name="Argument.value">not available</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="j" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j</stringProp>
                  <stringProp name="Argument.value">1.6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c29" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c29</stringProp>
                  <stringProp name="Argument.value">D=v29</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v157" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v157</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ndh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ndh</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">1536x864</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">26/4/2023 12:12:8 5 -330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name=".c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">.c</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name=".d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">.d</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v149" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v149</stringProp>
                  <stringProp name="Argument.value">Launch - MyTelus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v88" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v88</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v1</stringProp>
                  <stringProp name="Argument.value">bc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v2</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c71" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c71</stringProp>
                  <stringProp name="Argument.value">,5d,5k,5l,5m,5s,6G,6K,6M,6O,6b,6d,6e,Dc,Fq,Eu,7r,Fo,Es,85</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c70" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c70</stringProp>
                  <stringProp name="Argument.value">72,1,2,9,N,U,W,17,18,19,1O,1a,28,2K,2L,2T,2V,39,3A,3B,3S,4n,4o,4p,4q,4r,4s,51,53,59,5E,5P,5Q,5R,5X</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">b/ss/teluscomdev/10/JS-2.9.0-LDQM/s65731923294580</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_ZoneID=ZN_ezYilXhyzPbAMLP&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ZoneID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_ZoneID</stringProp>
                  <stringProp name="Argument.value">ZN_ezYilXhyzPbAMLP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_LOC" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_LOC</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Timestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Timestamp</stringProp>
                  <stringProp name="Argument.value">2023-05-26T06:42:12.459Z</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hasAnalyticsConsent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hasAnalyticsConsent</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Targeting.php</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/dc/sed-telus-a2b646e2?key=AIzaSyDsCAtzgd6ckzbiXwzmWMJoC0UPQEu9QhA" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyDsCAtzgd6ckzbiXwzmWMJoC0UPQEu9QhA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value">A-bpylaIAQAAuChQBzuyIymlH-QyzrpHOFua_Doiw5eN3eWfh5W0sLTmLlmhAdAmO6Oucn0ewH8AAEB3AAAAAA|1|0|201e5ea3b72b08f003ebfbeb064097fc61f5dd2b</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/dc/sed-telus-a2b646e2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryqs6NfAfRTfr6yzVL</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/dip/v1/dip" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sc</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ls" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ls</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="esi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">esi</stringProp>
                  <stringProp name="Argument.value">xEOrEK8cf4UKkfxcybl/J2BBWveJO4I5se61kp2a1XVtshYZYwqx5YBqv+UeCcQbsAmWDN8X+suLK1/qfB2moRkOySh+10Q+5PdO0VTeYLRSy1SRNXoGbADIAKBmFVkdF9v27AQbw3qO+Gqg+acAoTIDc82jmTNQvtxq/8NuRwZRcULko4h+RG8KLwxDdWb5wWgCrQZxWwmETWmNEwb3b1xbz/U91HuC4NQKqJk7bZ0JfJBN586ZO0MrMV3A2D0bVL/9MlZAYze3fQRlcvrfrWm9nhXV1ccvy8Iati0X1Ufan7crCq/l7aIHUZapmrXoa5/onFhFJKp1UX9JeFIVOZr+99ZIasdHoe/GKMnS4QiUuPCkZVMywot7RPlr4qVX6Qhdch7VqS2STCapQbyYxIUDVjYO4lRQLCPIc+TgwdxfiU9/4yusryTDGpi0MSK4OYVD6auQXyN0caUMefp87sqkYDAIxTtlhHjbq5n2jXi7OAknx6vM05ayqSTOwOnkAx3P1gG+h9OXbXY4+7f/EH0j7MAUUUQwQvMx7t9myNByNGWgwyQc00Jc0FPpWWBGc2tljZA8xYpt7QAcDPEt0rxFhVy9x4wDPQcKO3qpKqlMR66dn3lirBftpg8T1MT85ylP1IZ6BJQYgP0ODYFgaGZn6TJ70vqHy+yqXElCz7RKjhufWHdwXmlACQO99HhYeIYu1cT6FVjREt8d93GkUVqlcA+i0XI4rbt1ibd67YYp1ySrwOeVpRu2Ay+3iH+viiovytfZ0NQn4+1E8vFIm8Swks7oJOcij986wCElVp001Q45RBiHXRzzyRQa/GgV0ni0hVvNJJsrlWOl5nA86TH6E9KscKx6oMqxlfKg88iCWELl3Lg44nPXp7LXm0AZ2okD5olgIMx6s2NkZvr7wW9xhl7SnL78SGjKamvgS/VbolFXLvN14vS5zF3dDM1eQR7jUBcHpnaH0N5gQWFi/2/uQ93s8ZZ27Azdj+6m6+G+Ncf9yUYSPLHRPUpSfnDZBlBJLkvCCvmCi8qmHaa1eeUHt1YkXeOy4KCUhtV5Gj3VUt2uCle7deS2ZDXYH8P16IY7VULSlHR5Z3J4RNbwc0P+qkqrCCwDhJxNMHo4u1JGwZ+A1Vm350d7nxCw/w8ZMev4B2t51RokwGN1qOxEm1nyTd+5Wc1HTZJhtAFLto0Z+d/MZwmPeDeJ84RxPx3wcaJybad0lCsNCoJ8l5peJgFjzuzxElDTSAwngyjwtdED3tVwBEYkOQAMCUN2f+Z7QEhku7SoPw41xl6K4jifqj4lb+EuN+q0lLEW5oRMV+eMII/TOHSfs3zdqq+AXxvVHOFMYw/EwbqJLCyLhYEVe3zDlMGUyou9GPJSeKjPMYJm17HIAecPaOIcdzgcWgjmbJNEL5lEB941gRy/J8P04XIpVGgh3JPAKyFT5GHWZ2+P6g2xPRBfyDll0V//SjtPOrUFXc2QOc4YdwjlKqgDIv1cDu3HjCNI0/EESgaWv5q4l6fXmW4Czlg6DHofOF26FGpNqaSy55IKt0beLtfiH2lMRMcSfNYSo6VQ6NVm56CLBGl7LKXANU6pBDMfTvwBlpKnJMRV71r7P/3MHhSKcE+387Yr7IJ8iy8Hf05VguxnhUmgudVlZBB0EcyvFlqANA6b+sQftXC/BhMleocwCSDXYWQNKduV9yee8Z1pV2AsUaSj0fLzqbPzZTBdiVQw4zDi57//cAwPGjhPt4CG/vZhzLJCp15GRWcNPNTbbIMnmRmvuDjHQDNQiaZGlkEBHzYsk8WGnDX9d/uBfdwbpHjH8VwBCfI3F3D4q2vSNQSq7TbNIZo4U0T4prcN9OjwKdmYWYFBraRiDMNWJatZwgeInthWMEZv5qt1uyt3iEIhmE8cmO+pqLKtYGLnvIaLkqoqIQ5pRS1HkYm1eraV2k8ow+3Dm+oL1mrgHj1fln/6/1SZKZrAzQIPyn72Mge9YkJxsq6VhD1ySVgvoJIV7KIj6wH1TumnvyTH5oSTmcIJ4W57f7clvVPwwGQlGqXqM0W+EkDsaxq3qi1ZCkf6aR494PaquPf7ynyX83e4Bf7l0U9QSEmhgot247M2A5HdBvXtACYRhHUwFptJElOKW3wDyFTCB3ZIPEcX82XCXzNz+5uJ8Hrvn/ttF8Qdq/7DQ3/egYEyVoLSQ4dxKYzC45e+Bb5RxCvEyiS3N4MXJlRj4jl+Ye0FgFaD3ZY0Xb3MWbr8b/VnUr/7doUi2qY8hJkzSmPvHPfvrzb2mthR54vRqgiHk+FvzmQf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">sed-telus-a2b646e2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/dip/v1/dip</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="x-dtpc" elementType="Header">
                  <stringProp name="Header.name">x-dtpc</stringProp>
                  <stringProp name="Header.value">-2$283320228_89h9vTARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0e0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m&amp;fq=load" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fq</stringProp>
                  <stringProp name="Argument.value">load</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="3wEAAG7r53WlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJxxPTG8HxcszCx56wfvt/TX1Wtn/QfVPTOvH 65AP0cbAw57E94sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n TkmdppbcAnacXpe3jqXHrIufpG5OCIwT87KLL80VunICAw227xAobs7niFG9Z8vHNjen8JnXM2LIS3Gu9a l88g1QnKwFhyCIUHx8KHHwHbBMuE0tgZp9Dygywr hh41P7Ug0iVivXEi4QXD8SZ1sQ3/KvFkarre7NsMBet6UtqjEbq1RSqVLid8xUy7KoI8iyx8fFOww1DHC2hiUrwEKx bMLnCyukGzG9xCX j16nGdK3B5UcufHSnAOCKZceTvtP4CZ0hHiq3fshJVuRM4a5uKL33rJl5DPjJf4jxWxRKtMhXyo3IqpOPEgOjs5fDwwcqC5SWR8t8y0pyCHvl8OwNbYrKEQN0eunYZY5qE1SYXd4jbPRDJ4o0TyDY9eo1oWjnoiu28m0X8H9AR0/zvze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1NqwMAAFanl3ER67wg1dpYv4o5ovCSeAfkiOwogOlee5Yw1M tABzfwFmX5OggR2SdLhUqyilx4QPus DwjkpHmEL8OlCeLuy/BvgVbAM66kvzBO0OXtxfUpFbMGCwqlA79HjVvJWlx6xnh1UvW3pjC8wL0 Ld/CVVdz/IO2EYxtS38H1EyNsF6yBtBuENwDix6YHpUECmiYLtMSzbW9/sgeqEsNXGqHhFBLA/44L1fcpB621UEXyE7hYvbs6xgTjVMd2Abyu/45XPJzGRQ2e3 vjm5JxhSC22Uh/IZEaopfHl4XrpGecZwmQFwRaX7hvEvhIJK5cglFpX9yYq9hvKyhBugjOqfeg3NfWQ4p1FAfRdb83RLrDvGS7BfnFn2hauYZB8i2ZhNhC9iRLURmotT7wDKUucYrqdhL8Lxi9nRDW 1pP6JO3y2UsUQA/ CNCCVZ2f  jsLNsEX2P9e5wEXKkV bYkOLL2uYYwAeDJMJr6TgtE6cUS1YqAtZmPDxygpIvLxR1jBJ2eGM5zm1kJfRSjmPslYNjitD 7dVsyPy6tJ/MXX9oTWMtyUA7maRy8uu18ojPdWsiAdNYIK7ZW072soQONXPLiplNaHeE6hbdC5QlGamMpFCDDjvMcEgoKy3wNbzdr7bvFOi1gHg63rHrH1CSV/vsHn9UVjHSg0CLeUTkUEcxMWtGmxmzx40B8xd 3DXAiv2AKXfgUAWCSG/LXPxjrOlCAcbfKzsj0PQ31KAoeoRixCmsTUbDtuGm1UKIIPgre7rHzIA2v0J3I1a5EDUNYxHRPktfd8nt dEOLuNS gn77HLZEIgnSON2pBnGu3pkTghdUAG5/ OnAyAeKZ6YpFtyU8XKKcbHl9Jo28tIRCGsmgc8yTj0bHGdmaQLVWhhjk0LPp41jZWiBovBTUPXBl6gpokCs2N5D8UsIv0WKuoWfZxa3r9nbFoQ/Djl9TU1zYAZ1sF1cc9NTRxa/GCW4r /J9t7r13T94sUJvXJWH6DDTe22u3u9o354PQP01eNRmqWlEUdKR2pbSujA5jb7a3vm mpOzCHg5dgggNRsL8tlBN4DnSdX83FvGcKsit8eJwVTmjVzn8U/6E05fpclLy2UOkJFdADZY2DlCatWDzPjXX81HNA4lM55owT5ufQnp79UsV76uKtRdSI4vOmm9IzvlISkW49dy06g/tzBxxsCuxZ2SAw zOJka R9ud6pkspBUsKWutg4gWeSam a YJHYv7Wn0S6D/EBAABe6dV1pVWGU9jbMbT5YZSw0kAPwLzRP9mwSVGUJZz2 Gwii6km8biccT0xvB8XLMwseesH77eEEjlbc96TFBekLQZLDy1dkUMzE8lO4RuG7crMYVPbOU1n9 FHJPx2wrCBvti dIgNeFs0XhDcbc65lfM3H1gKnnh9WKn0v RkWs7QR55dKAC5B8FVdeKot15cp5SUKRAOhl Std6pl7eMkPUmVhb7YPe7ySnTDftOQBhi978fR1my/JZM4CDd2xoNtcCkzSU4r2NE1 WurGaEfP1N42yJJCfuC4voAjohyFK6YrIlLpAag9gENhMQRheZK6xsowhRSNIf8MBhaacGt3yaUH7ysuiyZRiCQ3jJ6nuWrA0rxjdqdNwLimLLDdpzc24C0LULkBk0VnTyRyFa9Tiwx9y3CLxyAXY6voeM hSv2MFnUw9dzmi5 U6kjbHZ8GWdEzs1uXOREVmiI8u4ODmo8NnxcBKrxRP1mWEMFr/hdLfg1a7/ XBhoamP cUeexSCMU6odUECPEJn 9TFLXjewwLZom54VHAu1DX0FHn2E1zJficqqzFgkb26ZbtUyUrNoGLhA1DBZ fC18VzuHIg/NhLh6zlHYY1u5cZN8DrYxYtC2eoTWlpXtQjUiC0cPTe xNuJRgA1c9O1r2rCA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3wEAAG7r53WlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJxxPTG8HxcszCx56wfvt/TX1Wtn/QfVPTOvH 65AP0cbAw57E94sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n TkmdppbcAnacXpe3jqXHrIufpG5OCIwT87KLL80VunICAw227xAobs7niFG9Z8vHNjen8JnXM2LIS3Gu9a l88g1QnKwFhyCIUHx8KHHwHbBMuE0tgZp9Dygywr hh41P7Ug0iVivXEi4QXD8SZ1sQ3/KvFkarre7NsMBet6UtqjEbq1RSqVLid8xUy7KoI8iyx8fFOww1DHC2hiUrwEKx bMLnCyukGzG9xCX j16nGdK3B5UcufHSnAOCKZceTvtP4CZ0hHiq3fshJVuRM4a5uKL33rJl5DPjJf4jxWxRKtMhXyo3IqpOPEgOjs5fDwwcqC5SWR8t8y0pyCHvl8OwNbYrKEQN0eunYZY5qE1SYXd4jbPRDJ4o0TyDY9eo1oWjnoiu28m0X8H9AR0/zvze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1NqwMAAFanl3ER67wg1dpYv4o5ovCSeAfkiOwogOlee5Yw1M tABzfwFmX5OggR2SdLhUqyilx4QPus DwjkpHmEL8OlCeLuy/BvgVbAM66kvzBO0OXtxfUpFbMGCwqlA79HjVvJWlx6xnh1UvW3pjC8wL0 Ld/CVVdz/IO2EYxtS38H1EyNsF6yBtBuENwDix6YHpUECmiYLtMSzbW9/sgeqEsNXGqHhFBLA/44L1fcpB621UEXyE7hYvbs6xgTjVMd2Abyu/45XPJzGRQ2e3 vjm5JxhSC22Uh/IZEaopfHl4XrpGecZwmQFwRaX7hvEvhIJK5cglFpX9yYq9hvKyhBugjOqfeg3NfWQ4p1FAfRdb83RLrDvGS7BfnFn2hauYZB8i2ZhNhC9iRLURmotT7wDKUucYrqdhL8Lxi9nRDW 1pP6JO3y2UsUQA/ CNCCVZ2f  jsLNsEX2P9e5wEXKkV bYkOLL2uYYwAeDJMJr6TgtE6cUS1YqAtZmPDxygpIvLxR1jBJ2eGM5zm1kJfRSjmPslYNjitD 7dVsyPy6tJ/MXX9oTWMtyUA7maRy8uu18ojPdWsiAdNYIK7ZW072soQONXPLiplNaHeE6hbdC5QlGamMpFCDDjvMcEgoKy3wNbzdr7bvFOi1gHg63rHrH1CSV/vsHn9UVjHSg0CLeUTkUEcxMWtGmxmzx40B8xd 3DXAiv2AKXfgUAWCSG/LXPxjrOlCAcbfKzsj0PQ31KAoeoRixCmsTUbDtuGm1UKIIPgre7rHzIA2v0J3I1a5EDUNYxHRPktfd8nt dEOLuNS gn77HLZEIgnSON2pBnGu3pkTghdUAG5/ OnAyAeKZ6YpFtyU8XKKcbHl9Jo28tIRCGsmgc8yTj0bHGdmaQLVWhhjk0LPp41jZWiBovBTUPXBl6gpokCs2N5D8UsIv0WKuoWfZxa3r9nbFoQ/Djl9TU1zYAZ1sF1cc9NTRxa/GCW4r /J9t7r13T94sUJvXJWH6DDTe22u3u9o354PQP01eNRmqWlEUdKR2pbSujA5jb7a3vm mpOzCHg5dgggNRsL8tlBN4DnSdX83FvGcKsit8eJwVTmjVzn8U/6E05fpclLy2UOkJFdADZY2DlCatWDzPjXX81HNA4lM55owT5ufQnp79UsV76uKtRdSI4vOmm9IzvlISkW49dy06g/tzBxxsCuxZ2SAw zOJka R9ud6pkspBUsKWutg4gWeSam a YJHYv7Wn0S6D/EBAABe6dV1pVWGU9jbMbT5YZSw0kAPwLzRP9mwSVGUJZz2 Gwii6km8biccT0xvB8XLMwseesH77eEEjlbc96TFBekLQZLDy1dkUMzE8lO4RuG7crMYVPbOU1n9 FHJPx2wrCBvti dIgNeFs0XhDcbc65lfM3H1gKnnh9WKn0v RkWs7QR55dKAC5B8FVdeKot15cp5SUKRAOhl Std6pl7eMkPUmVhb7YPe7ySnTDftOQBhi978fR1my/JZM4CDd2xoNtcCkzSU4r2NE1 WurGaEfP1N42yJJCfuC4voAjohyFK6YrIlLpAag9gENhMQRheZK6xsowhRSNIf8MBhaacGt3yaUH7ysuiyZRiCQ3jJ6nuWrA0rxjdqdNwLimLLDdpzc24C0LULkBk0VnTyRyFa9Tiwx9y3CLxyAXY6voeM hSv2MFnUw9dzmi5 U6kjbHZ8GWdEzs1uXOREVmiI8u4ODmo8NnxcBKrxRP1mWEMFr/hdLfg1a7/ XBhoamP cUeexSCMU6odUECPEJn 9TFLXjewwLZom54VHAu1DX0FHn2E1zJficqqzFgkb26ZbtUyUrNoGLhA1DBZ fC18VzuHIg/NhLh6zlHYY1u5cZN8DrYxYtC2eoTWlpXtQjUiC0cPTe xNuJRgA1c9O1r2rCA</stringProp>
                  <stringProp name="Argument.value">=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_9NY1LTbNGlcuqoJ&amp;Version=9&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">SI_9NY1LTbNGlcuqoJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_9NY1LTbNGlcuqoJ&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_InterceptID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_InterceptID</stringProp>
                  <stringProp name="Argument.value">SI_9NY1LTbNGlcuqoJ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">CR_0kV8K7YsnRbfrrn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_1BNWSpjiMtF0VMx&amp;Version=14&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">SI_1BNWSpjiMtF0VMx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_1BNWSpjiMtF0VMx&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Q_CLIENTTYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTTYPE</stringProp>
                  <stringProp name="Argument.value">webAdobeLaunch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_InterceptID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_InterceptID</stringProp>
                  <stringProp name="Argument.value">SI_1BNWSpjiMtF0VMx</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_ORIGIN" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">Q_ORIGIN</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Module" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Module</stringProp>
                  <stringProp name="Argument.value">CR_0kV8K7YsnRbfrrn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Q_CLIENTVERSION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Q_CLIENTVERSION</stringProp>
                  <stringProp name="Argument.value">1.91.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WRSiteInterceptEngine/Asset.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKg8AAABeCidnrPIaM97bthj0xA8PAAAAXgonZ6yOZjPe26UL9NoRDwAAAF4KJ2esnHQz3tuJJ/TvJA8AAABeCidnrKhAM97bxWr1iEAPAAAAXgonZ6y/VzPe24Av9advDwAAAF4KJ2eszyQw3tvFbfLCCg8AAABeCidnrN41MN7blT3y6yMPAAAAXgonZ6zpAjDe2 pD8/A4DwAAAF4KJ2es RIw3tved/OKQw8AAABeCidnrIhjMN7b2XDzhk8PAAAAXgonZ6zrATHe29Z/84RNDwAAAF4KJ2es RMx3tvXfvOFTA8AAABeCidnrPEbMd7b1H3zhUwPAAAAXgonZ6yBazHe29V884NKDwAAAF4KJ2eslnwx3tvSe/OASQ8AAABeCidnrMAtNt7b0nvznFUPAAAAXgonZ6zTPjbe29J785ZfDwAAAF4KJ2es4w423tvSe/OvZg8AAABeCidnrPIfNt7b0nvzpWwPAAAAXgonZ6ydcDbe29J787x1DwAAAF4KJ2esrEE23tvSe/O2fw8AAABeCidnrLxRNt7b03rzsXgPAAAAXgonZ6zPIzfe29B5880EDwAAAF4KJ2es3zM33tvQefPFDA8AAABeCidnrO4CN97b0Hnz3RQPAAAAXgonZ6z5FTfe29B589QdDwAAAF4KJ2esiWU33tvQefPsJQ8AAABeCidnrJh0N97b0Hnz6SAPAAAAXgonZ6y5VTfe29B58 cuDwAAAF4KJ2esi2U13tvQefPkLQ8AAABeCidnrMoqO9zZ0Hnz5C0PAAAAXgonZ6zdPjjf2tB58 QtDwAAAF4KJ2es1TY43djQefPkLV8AAABeWm8v/MgRAt34IYqACt76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgch5cq02h18AAABeWm8v/MEZA934IIvHTd76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgch5cq02h18AAABeWm8v/KV9A9/6IIvHTd76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgch5cq02h18AAABeWm8v/OI5AN/6IYqACt76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgMl5cq02hw8AAABeCidnrPgmBd7b0Hnz5y4PAAAAXgonZ6yFVgjc2edO8/w0DwAAAF4KJ2es5TcJ39rnTvP8NA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKg8AAABeCidnrPIaM97bthj0xA8PAAAAXgonZ6yOZjPe26UL9NoRDwAAAF4KJ2esnHQz3tuJJ/TvJA8AAABeCidnrKhAM97bxWr1iEAPAAAAXgonZ6y/VzPe24Av9advDwAAAF4KJ2eszyQw3tvFbfLCCg8AAABeCidnrN41MN7blT3y6yMPAAAAXgonZ6zpAjDe2 pD8/A4DwAAAF4KJ2es RIw3tved/OKQw8AAABeCidnrIhjMN7b2XDzhk8PAAAAXgonZ6zrATHe29Z/84RNDwAAAF4KJ2es RMx3tvXfvOFTA8AAABeCidnrPEbMd7b1H3zhUwPAAAAXgonZ6yBazHe29V884NKDwAAAF4KJ2eslnwx3tvSe/OASQ8AAABeCidnrMAtNt7b0nvznFUPAAAAXgonZ6zTPjbe29J785ZfDwAAAF4KJ2es4w423tvSe/OvZg8AAABeCidnrPIfNt7b0nvzpWwPAAAAXgonZ6ydcDbe29J787x1DwAAAF4KJ2esrEE23tvSe/O2fw8AAABeCidnrLxRNt7b03rzsXgPAAAAXgonZ6zPIzfe29B5880EDwAAAF4KJ2es3zM33tvQefPFDA8AAABeCidnrO4CN97b0Hnz3RQPAAAAXgonZ6z5FTfe29B589QdDwAAAF4KJ2esiWU33tvQefPsJQ8AAABeCidnrJh0N97b0Hnz6SAPAAAAXgonZ6y5VTfe29B58 cuDwAAAF4KJ2esi2U13tvQefPkLQ8AAABeCidnrMoqO9zZ0Hnz5C0PAAAAXgonZ6zdPjjf2tB58 QtDwAAAF4KJ2es1TY43djQefPkLV8AAABeWm8v/MgRAt34IYqACt76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgch5cq02h18AAABeWm8v/MEZA934IIvHTd76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgch5cq02h18AAABeWm8v/KV9A9/6IIvHTd76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgch5cq02h18AAABeWm8v/OI5AN/6IYqACt76/A0I6p3tS 7ZbR32Coj2k3hktbY5nP76QQwjuxM/A9kpeLNd/vzxu5RWatUv7x9 ljD kDmYByYOK9pA/wLJ3PnGUk ZDFhEgMl5cq02hw8AAABeCidnrPgmBd7b0Hnz5y4PAAAAXgonZ6yFVgjc2edO8/w0DwAAAF4KJ2es5TcJ39rnTvP8NA</stringProp>
                  <stringProp name="Argument.value">=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://collection.decibelinsight.net/i/13807/209494/c.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">i/13807/209494/c.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=2&amp;flavor=post&amp;vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=3087602509&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">3087602509</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1685083306466|1685083335245|dn|996|svtrg|1|svm|i1^sk0^sh0|bg|1,2|2|x|xhr|x|1685083323918|1685083327731|dn|977|xu|https://dpm.demdex.net/id?d_visid_ver=4.3.0&amp;d_fieldgroup=MC&amp;d_rtbd=json&amp;d_ver=2&amp;d_orgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;d_nsid=0&amp;ts=1685083323916|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083323920e0m2019T-2z11I1|xcs|2023|xce|2036,3|4|x|xhr|x|1685083325947|1685083327731|dn|977|xu|https://b.telus.com/id?d_visid_ver=4.3.0&amp;d_fieldgroup=A&amp;mcorgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;mid=13971229449983468943110105173891387779&amp;ts=1685083325946|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083325949e0m1772T-1z11I1|xcs|1777|xce|1784,2|3|x|xhr|x|1685083324437|1685083326649|dn|976|xu|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083324439e0f0g0h0i0j0k1614l2206m2207u473v173w173T-3z11I1M-1436231690V0W1|xcs|2211|xce|2211|rc|401,2|5|x|xhr|x|1685083325979|1685083328007|dn|976|xu|https://telus.tt.omtrdc.net/m2/telus/mbox/json?mbox=target-global-mbox&amp;mboxSession=7438085e666d416bbdaf33fcd462b108&amp;mboxPC=&amp;mboxPage=2ee24cb7d51c461592359be8eac0e1f7&amp;mboxRid=a5d463d7c80d43ef9bd0b4be0c6e4961&amp;mboxVersion=1.5.0&amp;mboxCount=1&amp;mboxTime=1685103123971&amp;mboxHost=telusidentity-pp.telus.com&amp;mboxURL=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%...|svtrg|1|svm|i1^sk0^sh0|xcs|2028|xce|2028,2|6|x|xhr|x|1685083327565|1685083328075|dn|976|xu|https://www.wcstage.telus.com/chat/api/bootstrap?route=as%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;language=en&amp;province=&amp;device=desktop&amp;segmentID=false|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083327567e0f0g0h0i0j0k2l505m506u331v31w31T-4z11I1M1716593234V0W1|xcs|510|xce|510,2|7|x|xhr|x|1685083328829|1685083330203|dn|991|xu|https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s65731923294580|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083328831e0m1364T-5z11I1|xcs|1369|xce|1374,2|8|x|xhr|x|1685083332460|1685083333058|dn|993|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_ZoneID=ZN_ezYilXhyzPbAMLP&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083332464e0f0g0h0i0j0k3l586m589u6021v5721w89852T-6z11I1|xcs|595|xce|598,2|9|x|xhr|x|1685083333216|1685083333686|dn|996|xu|/__imp_apg__/api/dip/v1/dip|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083333220e0f0g0h0i0j0k3l462m463u437v137w206T-7z11I1|xcs|469|xce|470,2|10|x|xhr|x|1685083333472|1685083334884|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_9NY1LTbNGlcuqoJ&amp;Version=9&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083333474e0m1406T-8z11I1|xcs|1412|xce|1412,2|11|x|xhr|x|1685083333475|1685083334882|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_9NY1LTbNGlcuqoJ&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083333477e0m1403T-9z11I1|xcs|1407|xce|1407,2|12|x|xhr|x|1685083333477|1685083334887|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_1BNWSpjiMtF0VMx&amp;Version=14&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083333480e0m1401T-10z11I1|xcs|1409|xce|1410,2|13|x|xhr|x|1685083333480|1685083334885|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_1BNWSpjiMtF0VMx&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|xrt|b1685083333483e0m1398T-11z11I1|xcs|1405|xce|1405,2|14|_onload_|_load_|-|1685083335242|1685083335245|dn|996|svtrg|1|svm|i1^sk0^sh0$PV=1$rId=RID_1109281689$rpId=-2066293403$md=mdcc1,en$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=1924$app=72172083ddd940ed$vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0$fId=283320228_89$v=10257221222094147$time=1685083337228</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">gwAAAF6HuXelVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJxxPTG8HxcszCx56wfvt7SWvU932GSpL3qLc8njb8s5cRM74UTxOpTM/tIhQbFMXRD/wX0uvX7Gw7Te79BYuzlXRA04Dvkkg/zagFlHESHuPm0Y97rTiiBU/PZW</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/?m</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKjYAAABWO0YGlaFPN/LFMLugKKWZ43kmxanVJeWVNE jVdrw7X4qwsJJzod35wG/OxKDtce14OqiT7JPAAAAVkJvL zCGgGZrAf3ti 5uZUaAuSD6BKvi2Jh1RqGqKcfT4y Lb7/20EfM7NLTDSJOTP1B 2hsOyVGF7kbtMzUbtT5qEw RNsXBD/NOAUmgkAAABWCH05ovc/E90JAAAAVggtaaK dRDdCQAAAFYIfTmi6UFz3AkAAABWCC1povFZc9w" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKjYAAABWO0YGlaFPN/LFMLugKKWZ43kmxanVJeWVNE jVdrw7X4qwsJJzod35wG/OxKDtce14OqiT7JPAAAAVkJvL zCGgGZrAf3ti 5uZUaAuSD6BKvi2Jh1RqGqKcfT4y Lb7/20EfM7NLTDSJOTP1B 2hsOyVGF7kbtMzUbtT5qEw RNsXBD/NOAUmgkAAABWCH05ovc/E90JAAAAVggtaaK dRDdCQAAAFYIfTmi6UFz3AkAAABWCC1povFZc9w</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=2&amp;flavor=post&amp;vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=204770768&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">204770768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$a</stringProp>
                  <stringProp name="Argument.value">1|1|_load_|_load_|-|1685083306466|1685083335957|dn|996|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|bg|1,2|15|_event_|1685083306466|_vc_|V|29491^pc|VCD|4946|VCDS|7|VCS|28834|VCO|30772|VCI|0|VE|240^p537^p7920^ps^s...p.TDS_Typography-modules__wordBreak___3OZx_ TDS_Spacing-modules__noSpacing___XPYDG TDS_Typograph|S|14288,2|16|_event_|1685083306466|_wv_|lcpE|IMG|lcpSel|...img.Image__StyledImage-b16p20-0 ieZKSZ|lcpS|44220|lcpT|14217|lcpU|https://www.wcstage.telus.com/telus-login/static/phone_5Fgrey_5Fen.png|lcpLT|14217|fcp|13842|fp|13842|cls|0.0101|lt|687|fIS|26365|fID|1,2|2|x|xhr|x|1685083323918|1685083327731|dn|977|xu|https://dpm.demdex.net/id?d_visid_ver=4.3.0&amp;d_fieldgroup=MC&amp;d_rtbd=json&amp;d_ver=2&amp;d_orgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;d_nsid=0&amp;ts=1685083323916|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083323920e0m2019T-13z1I1|xcs|2023|xce|2036,3|4|x|xhr|x|1685083325947|1685083327731|dn|977|xu|https://b.telus.com/id?d_visid_ver=4.3.0&amp;d_fieldgroup=A&amp;mcorgid=67A50FC0539F0BBD0A490D45%40AdobeOrg&amp;mid=13971229449983468943110105173891387779&amp;ts=1685083325946|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083325949e0m1772T-12z1I1|xcs|1777|xce|1784,2|3|x|xhr|x|1685083324437|1685083326649|dn|976|xu|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_type=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083324439e0f0g0h0i0j0k1614l2206m2207u473v173w173T-14z1I1M-1436231690V0W1|xcs|2211|xce|2211|rc|401,2|5|x|xhr|x|1685083325979|1685083328007|dn|976|xu|https://telus.tt.omtrdc.net/m2/telus/mbox/json?mbox=target-global-mbox&amp;mboxSession=7438085e666d416bbdaf33fcd462b108&amp;mboxPC=&amp;mboxPage=2ee24cb7d51c461592359be8eac0e1f7&amp;mboxRid=a5d463d7c80d43ef9bd0b4be0c6e4961&amp;mboxVersion=1.5.0&amp;mboxCount=1&amp;mboxTime=1685103123971&amp;mboxHost=telusidentity-pp.telus.com&amp;mboxURL=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%...|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xcs|2028|xce|2028,2|6|x|xhr|x|1685083327565|1685083328075|dn|976|xu|https://www.wcstage.telus.com/chat/api/bootstrap?route=as%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;language=en&amp;province=&amp;device=desktop&amp;segmentID=false|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083327567e0f0g0h0i0j0k2l505m506u331v31w31T-15z1I1M1716593234V0W1|xcs|510|xce|510,2|7|x|xhr|x|1685083328829|1685083330203|dn|991|xu|https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s65731923294580|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083328831e0m1364T-16z1I1|xcs|1369|xce|1374,2|8|x|xhr|x|1685083332460|1685083333058|dn|993|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_ZoneID=ZN_ezYilXhyzPbAMLP&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083332464e0f0g0h0i0j0k3l586m589u6021v5721w89852T-17z1I1|xcs|595|xce|598,2|9|x|xhr|x|1685083333216|1685083333686|dn|996|xu|/__imp_apg__/api/dip/v1/dip|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083333220e0f0g0h0i0j0k3l462m463u437v137w206T-18z1I1|xcs|469|xce|470,2|10|x|xhr|x|1685083333472|1685083334884|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_9NY1LTbNGlcuqoJ&amp;Version=9&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083333474e0m1406T-19z1I1|xcs|1412|xce|1412,2|11|x|xhr|x|1685083333475|1685083334882|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_9NY1LTbNGlcuqoJ&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083333477e0m1403T-20z1I1|xcs|1407|xce|1407,2|12|x|xhr|x|1685083333477|1685083334887|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=SI_1BNWSpjiMtF0VMx&amp;Version=14&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083333480e0m1401T-21z1I1|xcs|1409|xce|1410,2|13|x|xhr|x|1685083333480|1685083334885|dn|996|xu|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php?Module=CR_0kV8K7YsnRbfrrn&amp;Version=1&amp;Q_InterceptID=SI_1BNWSpjiMtF0VMx&amp;Q_ORIGIN=https://telusidentity-pp.telus.com&amp;Q_CLIENTVERSION=1.91.0&amp;Q_CLIENTTYPE=webAdobeLaunch|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0|xrt|b1685083333483e0m1398T-22z1I1|xcs|1405|xce|1405,2|14|_onload_|_load_|-|1685083335242|1685083335245|dn|996|svtrg|1|svm|i1^sk0^sh0|tvtrg|1|tvm|i1^sk0^sh0,1|17|_event_|1685083306466|_view_|tvtrg|1|tvm|i1^sk0^sh0$rId=RID_1109281689$rpId=-2066293403$domR=1685083335238$tvn=/as/authorization.oauth2$tvt=1685083306466$tvm=i1;k0;h0$tvtrg=1$w=1536$h=722$sw=1536$sh=864$nt=a0b1685083306466e1883f1883g1883h2318i3849j3090k3849l5008m5979o17985p17985q17985r28773s28776t28779u61909v61609w195153$ni=3g|1.45$fd=r^sdecibelinsight$md=mdcc1,en$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=1924$app=72172083ddd940ed$vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0$fId=283320228_89$v=10257221222094147$vID=1685083320232FGGVJU8C354DI4B6EH7MB7SIKVIOODJF$nV=1$nVAT=1$time=1685083340262</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/dt_beacon/rb_bf68931hsq?type=js3&amp;sn=v_4_srv_2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1&amp;svrid=2&amp;flavor=post&amp;vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0&amp;modifiedSince=1684783469795&amp;rf=https%3A%2F%2Ftelusidentity-pp.telus.com%2Fas%2Fauthorization.oauth2%3Fresponse_mode%3Dquery%26redirect_uri%3Dhttps%253A%252F%252Fsmp-enterprise-np.telus.com%26nonce%3De3I0j8j6IoQBQEaWRLBKisXz%26response_type%3Dcode%26client_id%3D430ef14a-78a0-4e26-90a7-1e01e744a039%26state%3Dbn7RbkNMxQha3SR0XiQ5AB2c%26scope%3Dopenid%2520profile%2520email%25201910%25202937%26env%3Dit04&amp;bp=3&amp;app=72172083ddd940ed&amp;crc=34643124&amp;en=lxotfoy3&amp;end=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="flavor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flavor</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">app</stringProp>
                  <stringProp name="Argument.value">72172083ddd940ed</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="svrid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">svrid</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vi" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vi</stringProp>
                  <stringProp name="Argument.value">TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="modifiedSince" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">modifiedSince</stringProp>
                  <stringProp name="Argument.value">1684783469795</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">34643124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">lxotfoy3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="end" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">end</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sn</stringProp>
                  <stringProp name="Argument.value">v_4_srv_2_sn_E6O6C0H4B4PTRRDB3685RC5QBLOVT7OF_perc_100000_ol_0_mul_1_app-3A72172083ddd940ed_1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                  <stringProp name="Argument.value">js3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$tvn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$tvn</stringProp>
                  <stringProp name="Argument.value">/as/authorization.oauth2$tvt=1685083306466$tvm=i1;k0;h0$tvtrg=1$ni=3g|1.45$rt=1-1685083306466;https://telusidentity-pp.telus.com/telus-login/static/telus_5Fcommon.js?cache|b5021e0f0g0h0i0j0k959l1474m1475u4281v3981w9857K1I12|https://telusidentity-pp.telus.com/telus-login/static/telus_5Fcommon.js?async|b5021e0f0g0h11i1072j682k1074l1490m1491u1271v971w971I12|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/js/sed-telus-a2b646e2.js|b5021e0f0g0h0i0j0k8763l10316m18110u296762v296462w548424I12|https://www.wcstage.telus.com/telus-login/static/styles_5F76b5e65df0342e448993.css|b5021e0m4244K1I11|https://www.wcstage.telus.com/telus-login/static/vendor_5F4e71524620623c7b657c.js|b5021e0m6322K1I11|https://www.wcstage.telus.com/telus-login/static/bundle_5F1c52c8075144b253b3ca.js|b5021e0m7104K1I11|https://cdn.polyfill.io/v3/polyfill.js?features=es6^ces5^cSet^cArray.prototype.includes^cObject.entries^cArray.prototype.entries|b5021e0f0g0h5149i7230j6825k7232l7556m7557u525v225w306K1I11|https://s3.amazonaws.com/telusdigital-ui/staging/lib/chat/latest/js/chat_5Fwidget_5Fcomponent.js|b5022e0m10386K1I11|https://cdn.telus.digital/thorium/core/fonts/aff68211-86bb-476d-882e-f7a3face144c.woff2|b5022e0m8211I11|https://cdn.telus.digital/thorium/core/fonts/etext/b8765d4b-d9a3-48b9-ac65-560e7517cf0e.woff2|b5022e0m7881I11|https://cdn.telus.digital/thorium/core/fonts/etext/dc50c02f-3f77-4e75-b89c-e3f9bb4752e6.woff2|b5022e0m7882I11|https://cdn.telus.digital/thorium/core/fonts/etext/3e8a8b56-3cb0-4347-b670-eaaf06b76e9b.woff2|b5022e0m7925I11|https://cdn.telus.digital/thorium/core/v0.4.0/core-icons.woff2|b5022e0m7603I11|https://assets.adobedtm.com/launch-ENdd4142b4bbfc4721982dd14bc0f2c424-staging.min.js|b5023e0f0g0h9094i10607j10268k10607l11086m12416u148452v148152w609145I12|https://images.ctfassets.net/fikanzmkdlqn/3yUnySNpS8IS4CeyUeWgeg/5bcfa9c592acfe591f26d85f6820fa5f/Logo_5FTELUS.svg|b5023e0m10966E1F3948O141P28I7|https://www.wcstage.telus.com/telus-login/static/ever-safe-logo.png|b5343e0m10594N3O20P31Q148R230I7|https://www.wcstage.telus.com/telus-login/static/phone_5Fgrey_5Fen.png|b5343e0m8873E1F44198O287P154Q1440R772I7|https://staging.cdn.telus.digital/global/elements/v2/dist/with-libs/elements.latest.js?latest|b5980e0m11713K1I12|https://www.wcstage.telus.com/telus-login/static/styles_5F76b5e65df0342e448993.js|b5980e0m8159K1I12|https://telusidentity-pp.telus.com/telus-login/static/telus_5Fcommon.js?seed=AEDyv1aIAQAAjXMdRlPWprB0OHUH97gIG8lwPvrdgA2wvjmr4q7vVhgqzQ6M&amp;rLeOBG0kof--z=q|b6513e0f0g0h8900i10000j9626k10000l10854m12402u188419v188119w303120I12|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-400-6jlHTUrn8BJeUCvS3nW9L.otf|b13796e0m1530I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-700-h1W093p_5F4knXMZ61N2t4m.otf|b13797e0m1540I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-500-IZbNBDI7GGgrOLj5NRYLi.otf|b13797e0m1541I9|https://cdn.polyfill.io/v3/polyfill.js?features=es6^ces5^cSet^cArray.prototype.includes^cObject.entries^cArray.prototype.entries|b13830e0f0g0h0i0j0k2163l2488m2489u300v225w306K1I22|https://dpm.demdex.net/id?d_5Fvisid_5Fver=4.3.0&amp;d_5Ffieldgroup=MC&amp;d_5Frtbd=json&amp;d_5Fver=2&amp;d_5Forgid=67A50FC0539F0BBD0A490D45_2540AdobeOrg&amp;d_5Fnsid=0&amp;ts=1685083323916|b17454e0m2019T-13z1I1|https://assets.adobedtm.com/extensions/EP143333dab9bb4582a773c81f3a840074/AppMeasurement.min.js|b17458e0f0g0h0i0j0k237l582m589u12869v12569w34152I12|https://connect.facebook.net/en_5FUS/fbevents.js|b17459e0m2204I12|https://www.googletagmanager.com/gtag/js?id=GA_5FTRACKING_5FID&amp;l=gTagLayer|b17510e0m2122K1I12|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-400-6jlHTUrn8BJeUCvS3nW9L.otf|b17716e0m934I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-700-h1W093p_5F4knXMZ61N2t4m.otf|b17717e0m912I9|https://cdn.telus.digital/uds/v1_5F1_5F0-HelveticaNow-500-IZbNBDI7GGgrOLj5NRYLi.otf|b17717e0m889I9|https://cdn.telus.digital/thorium/core/v0.4.0/core-icons.woff2|b17718e0m492I9|https://cdn.telus.digital/uds/v2_5F15_5F0-HelveticaNow-400-o_5F-06DlPLAcd5SuEYG-0w.woff|b17835e0m994I9|https://images.ctfassets.net/fikanzmkdlqn/3yUnySNpS8IS4CeyUeWgeg/5bcfa9c592acfe591f26d85f6820fa5f/Logo_5FTELUS.svg|b17869e0m328I7|https://www.wcstage.telus.com/personalization-api/v2/spaces/9i88w58l5txg/environments/master/entries?include=10&amp;content_5Ftype=callControlContainer&amp;fields.slug=home&amp;locale=en-CA-BC|b17973e0f0g0h0i0j0k1614l2206m2207u473v173w173T-14z1I1M-1436231690V0W1|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC277e7ff060f04cc7bf9d5783628ac609-source.min.js|b18999e0f0g0h0i0j0k475l849m850u767v467w1145I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC0d8e0ab774b04845b6902c7cf87d1cdf-source.min.js|b19002e0f0g0h0i0j0k473l847m848u1109v809w1866I12|https://znezyilxhyzpbamlp-telus.siteintercept.qualtrics.com/WRSiteInterceptEngine/?Q_5FZID=ZN_5FezYilXhyzPbAMLP|b19003e0f0g0h2882i3894j3545k3895l4238m4238u3701v3401w7866K1I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC9afbaae0a83542d5adda765c74689a70-source.min.js|b19004e0f0g0h0i0j0k2540l2907m2908u634v334w511I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC069dfdb78ae2455da35ad1748c212cf8-source.min.js|b19007e0f0g0h0i0j0k2538l2904m2907u505v205w332I12|https://telus.demdex.net/dest5.html?d_5Fnsid=0#https_253A_252F_252Ftelusidentity-pp.telus.com|b19478e0m2233Bi0I4|https://b.telus.com/id?d_5Fvisid_5Fver=4.3.0&amp;d_5Ffieldgroup=A&amp;mcorgid=67A50FC0539F0BBD0A490D45_2540AdobeOrg&amp;mid=13971229449983468943110105173891387779&amp;ts=1685083325946|b19483e0m1772T-12z1I1|https://cm.everesttech.net/cm/dd?d_5Fuuid=13993228043278912963107949295024423021|b19489e0m4809I7|https://adobedc.demdex.net/ee/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=17551ae1-0fb1-424f-8f05-fcffd5f76e0f|b19492e0m1954z1I2|https://telus.tt.omtrdc.net/m2/telus/mbox/json|b19516e0f0g0h516i1627j1216k1627l2022m2023u396v96w96z11I1|https://www.googletagmanager.com/gtag/js?id=DC-6587013&amp;l=gTagLayer&amp;cx=c|b19639e0m3684I12|https://www.googletagmanager.com/gtag/js?id=AW-1064506604&amp;l=gTagLayer&amp;cx=c|b19640e0m3684I12|https://www.googletagmanager.com/gtag/js?id=AW-685767713&amp;l=gTagLayer&amp;cx=c|b19641e0m3375I12|https://connect.facebook.net/signals/config/1415433098759990?v=2.9.104&amp;r=stable|b19669e0m6511I12|https://s3.amazonaws.com/telusdigital-ui/staging/lib/chat-router/bundle.js|b19860e0m1218K1I11|https://assets.adobedtm.com/extensions/EP143333dab9bb4582a773c81f3a840074/AppMeasurement_5FModule_5FAudienceManagement.min.js|b20505e0f0g0h0i0j0k1411l1824m1838u10093v9793w27895I12|https://www.wcstage.telus.com/chat/api/bootstrap|b21101e0f0g0h0i0j0k2l505m506u331v31w31T-15z1I1M1716593234V0W1|https://www.facebook.com/tr/?id=1415433098759990&amp;ev=AAMSegment&amp;cd[segID]=9504908&amp;noscript=1|b21452e0m2638I7|https://cdn.decibelinsight.net/i/13807/209494/di.js|b21916e0f0g0h1775i2791j2447k2791l3463m4193u78219v77919w200419I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RC2a8ff70b3e254e91958379d285b8af47-source.min.js|b21916e0f0g0h0i0j0k1410l1746m1746u571v271w442I12|https://assets.adobedtm.com/a2962fe01e14/412252e443d4/c11af2930a54/RCad1cb1aa06b648fbb76c75c9598dc3cd-source.min.js|b21916e0f0g0h0i0j0k1750l2171m2173u641v341w609I12|https://b.telus.com/b/ss/teluscomdev/10/JS-2.9.0-LDQM/s65731923294580|b22365e0m1364T-16z1I1|https://googleads.g.doubleclick.net/pagead/viewthroughconversion/685767713/|b23039e0f0g0h1053i2098j1744k2098l2460m2469u1869v1569w3536I12|https://siteintercept.qualtrics.com/dxjsmodule/10.ff5c35506eb6156df16c.chunk.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=web&amp;Q_5FBRANDID=telusidentity-pp.telus.com|b23244e0f0g0h850i2009j1608k2009l2402m2743u20415v20115w65613K1I12|https://googleads.g.doubleclick.net/pagead/viewthroughconversion/1064506604/|b23358e0f0g0h0i0j0k1780l2163m2163u1868v1568w3538I12|https://www.google.com/pagead/1p-user-list/685767713/|b25509e0f0g0h1i1077j736k1078l1420m1420u342v42w42I7|https://www.google.ca/pagead/1p-user-list/685767713/|b25509e0f0g0h15i1079j736k1080l1452m1453u342v42w42I7|https://www.google.com/pagead/1p-user-list/1064506604/|b25522e0f0g0h0i0j0k1065l1406m1406u342v42w42I7|https://www.google.ca/pagead/1p-user-list/1064506604/|b25522e0f0g0h0i0j0k1067l1439m1439u342v42w42I7|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php?Q_5FZoneID=ZN_5FezYilXhyzPbAMLP&amp;Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch|b25998e0f0g0h0i0j0k3l586m589u6021v5721w89852T-17z1I1|https://www.facebook.com/tr/|b26199e0m385I7|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/dc/sed-telus-a2b646e2?key=AIzaSyDsCAtzgd6ckzbiXwzmWMJoC0UPQEu9QhA|b26217e0f0g0h0i0j0k3l461m461u495v195w195z1I2|https://siteintercept.qualtrics.com/dxjsmodule/CoreModule.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch&amp;Q_5FBRANDID=telus|b26592e0f0g0h0i0j0k2l368m388u32627v32327w104194I12|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/dip/v1/dip|b26754e0f0g0h0i0j0k3l462m463u437v137w206T-18z1I1|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/imp/v1.0/report/?m&amp;fq=load|b26806e0f0g0h0i0j0k4l543m544u565v265w265z1I2|https://siteintercept.qualtrics.com/dxjsmodule/5.38c3d23ae44011b71597.chunk.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=web&amp;Q_5FBRANDID=telus|b27005e0f0g0h0i0j0k2l347m347u1102v802w1737K1I12|https://siteintercept.qualtrics.com/dxjsmodule/1.ecb6e5626e4e126a641d.chunk.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=web&amp;Q_5FBRANDID=telus|b27005e0f0g0h0i0j0k2l344m347u6810v6510w28587K1I12|https://siteintercept.qualtrics.com/dxjsmodule/PopUpModule.js?Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch&amp;Q_5FBRANDID=telus|b27005e0f0g0h0i0j0k1411l1761m1763u1811v1511w3975I12|siteintercept.qualtrics.com/../telusidentity-pp.telus.com&amp;Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch|b27008e0m1406T-19z1I1|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php|b27011e0m1403T-20z1I1|siteintercept.qualtrics.com/../telusidentity-pp.telus.com&amp;Q_5FCLIENTVERSION=1.91.0&amp;Q_5FCLIENTTYPE=webAdobeLaunch|b27014e0m1401T-21z1I1|https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php|b27017e0m1398T-22z1I1|https://www.facebook.com/tr/|b27758e0m1011I7|https://telusidentity-pp.telus.com/_5F_5Fimp_5Fapg_5F_5F/api/imp/v1.0/report/?x|b28713e0f0g0h0i0j0k4l467m467u300z1I2|https://www.wcstage.telus.com/favicon.ico|b28791e0m640I22$url=https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04$title=My TELUS - Log in to manage your TELUS account | TELUS$latC=1924$app=72172083ddd940ed$vi=TARRHLPWCKDCKHMVWJHHMAHFORKEUHDK-0$fId=283320228_89$v=10257221222094147$vID=1685083320232FGGVJU8C354DI4B6EH7MB7SIKVIOODJF$time=1685083342308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">dt_beacon/rb_bf68931hsq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://b.telus.com/ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=e852397b-9c2b-4b5d-a3af-d7d4d70ebd59" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;xdm&quot;:{&quot;web&quot;:{&quot;webPageDetails&quot;:{&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04&quot;,&quot;name&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;siteSection&quot;:&quot;my-telus&quot;,&quot;_telus&quot;:{&quot;customSiteSection&quot;:&quot;my-telus&quot;,&quot;primarySiteSection&quot;:&quot;my-telus_log-in&quot;,&quot;pageName&quot;:&quot;telus&gt;my-telus&gt;my-telus_log-in&quot;,&quot;province&quot;:&quot;bc&quot;,&quot;pageLanguage&quot;:&quot;en&quot;,&quot;webApp&quot;:&quot;web&quot;,&quot;dataLayerType&quot;:&quot;acdl&quot;,&quot;brand&quot;:&quot;telus&quot;,&quot;edgeServer&quot;:&quot;edge.adobedc.net&quot;,&quot;tagManager&quot;:&quot;adobe_launch&quot;,&quot;adobeDataLayerBuilder&quot;:&quot;alloyAnalytics&quot;,&quot;lob&quot;:&quot;my-telus&quot;,&quot;pageType&quot;:&quot;log-in&quot;,&quot;userLoginStatus&quot;:&quot;logged_out&quot;,&quot;ecid&quot;:&quot;13971229449983468943110105173891387779&quot;,&quot;site&quot;:&quot;telus.com&quot;,&quot;userAccountID&quot;:&quot;&quot;,&quot;customPageViews&quot;:0},&quot;server&quot;:&quot;https://telusidentity-pp.telus.com&quot;},&quot;webReferrer&quot;:{&quot;URL&quot;:&quot;&quot;},&quot;webInteraction&quot;:{&quot;_telus&quot;:{&quot;userLoginStart&quot;:1,&quot;toolName&quot;:&quot;login_tool&quot;,&quot;toolUsageComplete&quot;:1},&quot;name&quot;:&quot;login_tool&quot;,&quot;type&quot;:&quot;other&quot;,&quot;URL&quot;:&quot;https://telusidentity-pp.telus.com/as/authorization.oauth2?response_mode=query&amp;redirect_uri=https%3A%2F%2Fsmp-enterprise-np.telus.com&amp;nonce=e3I0j8j6IoQBQEaWRLBKisXz&amp;response_type=code&amp;client_id=430ef14a-78a0-4e26-90a7-1e01e744a039&amp;state=bn7RbkNMxQha3SR0XiQ5AB2c&amp;scope=openid%20profile%20email%201910%202937&amp;env=it04&quot;}},&quot;device&quot;:{&quot;screenHeight&quot;:864,&quot;screenWidth&quot;:1536,&quot;screenOrientation&quot;:&quot;landscape&quot;},&quot;environment&quot;:{&quot;type&quot;:&quot;browser&quot;,&quot;browserDetails&quot;:{&quot;viewportWidth&quot;:1519,&quot;viewportHeight&quot;:722,&quot;userAgentClientHints&quot;:{&quot;architecture&quot;:&quot;x86&quot;,&quot;bitness&quot;:&quot;64&quot;,&quot;model&quot;:&quot;&quot;,&quot;platformVersion&quot;:&quot;10.0.0&quot;,&quot;wow64&quot;:false}}},&quot;placeContext&quot;:{&quot;localTimezoneOffset&quot;:-330,&quot;localTime&quot;:&quot;2023-05-26T12:12:23.949+05:30&quot;},&quot;timestamp&quot;:&quot;2023-05-26T06:42:23.949Z&quot;,&quot;implementationDetails&quot;:{&quot;name&quot;:&quot;https://ns.adobe.com/experience/alloy/reactor&quot;,&quot;version&quot;:&quot;2.15.0+2.16.1&quot;,&quot;environment&quot;:&quot;browser&quot;},&quot;marketing&quot;:{&quot;_telus&quot;:{}},&quot;commerce&quot;:{&quot;_telus&quot;:{}},&quot;productListItems&quot;:[],&quot;search&quot;:{&quot;_telus&quot;:{}},&quot;identityMap&quot;:{}}}],&quot;query&quot;:{&quot;identity&quot;:{&quot;fetch&quot;:[&quot;ECID&quot;]}},&quot;meta&quot;:{&quot;state&quot;:{&quot;domain&quot;:&quot;telus.com&quot;,&quot;cookiesEnabled&quot;:true}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">ee/or2/v1/interact?configId=6a0d905f-79d1-4929-b74b-444923d49e2d:dev&amp;requestId=e852397b-9c2b-4b5d-a3af-d7d4d70ebd59</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKg8AAABeCidnrPooCd3Y507z/DQPAAAAXgonZ6zEZHvc2dlw87J6DwAAAF4KJ2esyml439rZcPOyeg8AAABeCidnrMBjeN3Y2XDzsnpOAAAAXkt Pu3gRH/d COIgAqhhdcmCOqd7Uvu2W0d9gqI9ZBCU X1OJvf5UZ6caobCSzNX2OrDv6J4P ADkHUA MTNKUK9qdP3CxWOgOhBLlBTgAAAF5Lfj7t8VZ83fgiicdNoYXXJgjqne1L7tltHfYKiPWQQlPl9Tib3 VGenGqGwkszV9jqw7 ieD/gA5B1APjEzSlCvanT9wsVjoDoQS5QU4AAABeS34 7dJ0fd/6IonHTaGF1yYI6p3tS 7ZbR32Coj1kEJT5fU4m9/lRnp8mwcLKNpuY6sO/ong/4AOQdQD4xM0pQr2p0/cLFY6A6EEuUFOAAAAXkt Pu2BJ33f iOIgAqhhdcmCOqd7Uvu2W0d9gqI9ZBCU X1OJvf5UZ6fJsHCyjabmOrDv6J4P ADkHUA MTNKUK9qdP3CxXOwOhBLlBDwAAAF4KJ2eskAdM3NnwWfOBSQ8AAABeCidnrJsNTd/a8FnzgEgPAAAAXgonZ6y KE3d2PBZ84BI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKg8AAABeCidnrPooCd3Y507z/DQPAAAAXgonZ6zEZHvc2dlw87J6DwAAAF4KJ2esyml439rZcPOyeg8AAABeCidnrMBjeN3Y2XDzsnpOAAAAXkt Pu3gRH/d COIgAqhhdcmCOqd7Uvu2W0d9gqI9ZBCU X1OJvf5UZ6caobCSzNX2OrDv6J4P ADkHUA MTNKUK9qdP3CxWOgOhBLlBTgAAAF5Lfj7t8VZ83fgiicdNoYXXJgjqne1L7tltHfYKiPWQQlPl9Tib3 VGenGqGwkszV9jqw7 ieD/gA5B1APjEzSlCvanT9wsVjoDoQS5QU4AAABeS34 7dJ0fd/6IonHTaGF1yYI6p3tS 7ZbR32Coj1kEJT5fU4m9/lRnp8mwcLKNpuY6sO/ong/4AOQdQD4xM0pQr2p0/cLFY6A6EEuUFOAAAAXkt Pu2BJ33f iOIgAqhhdcmCOqd7Uvu2W0d9gqI9ZBCU X1OJvf5UZ6fJsHCyjabmOrDv6J4P ADkHUA MTNKUK9qdP3CxXOwOhBLlBDwAAAF4KJ2eskAdM3NnwWfOBSQ8AAABeCidnrJsNTd/a8FnzgEgPAAAAXgonZ6y KE3d2PBZ84BI</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?x" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKj4AAABWMx5enfJVfurfLNy2L7m5lRoC5IPoEq IYVviSsWpoD5Qi8h/r/ftbgtFqFMfNPwod FfxqCc4JlSbd5m5A" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ngEAAEaEoHWlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJ7Ee1qoIaY36BB 5A7ruu/xi1Ntx37qL2qYHNDVNMEaaQ4 6U/xCJ345btA0ywyZXW08ggn7SXeuI2ox7x7gRtvRiltR8VMj66Z6SFKdCGWNzsLhp2 6nJYwN0Q8XUxDvRMnWyopYqlXhKwgpfIAjPGYLWijvvL946CqHIXS7A4 bLIfMY lHZPQSrO GBIL6yg8luUTNepEj64r8rGPzucVy3v/rD0tosmFGHyRxveYUur47 8uCGVOOUd6kEgtXrYginemwQDAagHkH98iWgWwkSB3Bt7pxm6YsdEZvCOu4AMBfASIdj/FLasOx/Pcns33BbhLJpwlmF3Phaki1eKEycjWrkAMgOaNLuch78BjCtjWz/6idnjbNCd3DdyRS/iArfLbfalqtHqMOlMalKrG8FeHOFL bZ3baCipYN9QurCf53uBxNDtY0J39rBrpOLTgOjsJTBxgN Ao7WGdIpjE9VMj7xre5aPq/SC8ClVjZibDDKKj4AAABWMx5enfJVfurfLNy2L7m5lRoC5IPoEq IYVviSsWpoD5Qi8h/r/ftbgtFqFMfNPwod FfxqCc4JlSbd5m5A</stringProp>
                  <stringProp name="Argument.value">=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m&amp;fq=signin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fq</stringProp>
                  <stringProp name="Argument.value">signin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="KAkAAFaqj2RezNQg1dpYv4o5ovCSeAfkiOwogOlee5Yw1M tABzfwFmX5OggR2SdLhUqyilx4QPus DwjkpHmEL8OlCeLuy/BvgVbAM66kvzBJXA27FNX5BQcnWx k4w4AU2CP6y3bV5wxRyADUwA8MI2L6b6joKNHnJdStDy9qz7TMS0cRBpHJwRuENwGWhv4XkRkKhldSWDTrRRt2tyO2FuJWTom9yLaUy9fGTfsECtS4AAn7f43NNbpH4kVe0etzdIyPz5PCpMl7oQlvB rvhvZ5iX2f5XAaZOg/qtqnnqCWKZuAGnDoxrymF8Am40EFtXMRQ3C0KjUwu8wzx/QhmthGFbtZNN62M9d0fD xHXvz3EajuTiXJKjF10EbucIUO7HYhbkC6xwWKEml7SecPeQLXMO3MzqgIiCx6TXT6j5ikfoiXgW0danPAFJfzDKD7k7W4Uf13Ow RYsJ7SJMv15tLS7zH/8ElE/HfKsehEQlNu8Bfyo2JoIaHCBGo8YvLkh5lCImUBNQ5x0xMbH3u6 Emfc ACcHoO2QQdVCbROUdYPA4iTVt/Z6vOHPYj6dkvlaBX837c gaVttr5sjNkgKZMqr311NEHIdFvoEfzEpvIBEDTHbTg 8SCktezCsYkLc8otffLztoIzGsvWXNovVJp5BB1ZAWlli3yjTkTgI2PYc9RNSP8BH5oDMRsIauGU9jxHAUJ78vSDPcSY4Q7CXaTR/lFdLZ1vXXEXsT9FBi8BfOJUkdOvuor3bTHql3TkuYkMrdPBSomMWrw 9Oc25u7yE2wuWAjF0tdE3V6dG20SjjFeo/DFzDLvyWT2/G6bh xzwti9kjpr3z1zyHa5tWGr3Tk2y/dfiJ0 AAqYg7Y1ZPmt9fVQ4hE0t/bC7UXkY1qj Tj71eEBztjc8Hd4uEkZVe2CP89II09CEEoQmZgPC7MRuw1KLWBJkHKTADQ2EMEgRCs3cacb8JNGeyYSfL8 bqgfXd2UWH5f0dr0x PvyGb6H5gyHy13Wuk/EjFbtL/ kztO1qd1NKbqUwfAHuNAnV2ZymzJYNHHY7BVR4kGhjOcsOmjwc3DhnEYmft7MpOnJX0h1Jl8pmtCVBZZclFyqdFVg9YgO8ZTrWAIRkCyb7EB1SX 8Tr9RAxmPDuMUv4Ikdt1Sn5vcxahJPsqusrp73jOeGaoo1mSvtpOL2xQgYzzp3NQUU1fI7EI0Hjpemt/0TFMqa sVmyHq9XxrqsoYFGaNM FD3l62OS3d7WkO98DG98e2ZFI8N0k1s JMHkd/fLRJgQI3kH/DRQR84UsjwWyVNQ6ZaVZBqR22UKYcEHwKvHTkvdZQSNPe/EMPF94PA1rUv AsZxS am5svPh 5qQ1hmXnumW0mZN mgCDgDT9GC2C4a7s3zeitF2seqmXbiVWns3QVrLxAwvk2wztZHh6aRvxp5vA4AfTTqA19xBf9aqznHm6MuWhs66bED1yaC I9IVALlStTkmtJ0500lz4fOv9NG GQInXKMvxhvPgo7W2K2 Dge H7sd5HHDsFUjuiZ awV4eyCIpNY49bg8Mbg7LDDh 6i32qOm2uSnoL1Te13p1ihQ8t59mXPx0CbNhgaGltoDuaIHuNWZZfe0NnXdZkr0V6Xkxxfp23dbndy 3fGoVkwDKOQp2j3fr6XzU9ss8vpl0caC0 CTuwCU/ZVfBT8h5ioZvSLw2bJt2iRnzBZ2ihskAZBp/bFEavwn0j7bH9AtqYGo0ZJuhM4eqeddK4XHhlPUes4HmzLX1Thi7npsJgFLHS1o9RTsDW7zeet 7q9vU9lYkuJS3Zx4W1LlT5G45DV/SuINqjVtZVoZstDBTAhEh 2EFQwNNVkZwVmG 5ve5q1wbrWo HNbUNuMMIotFdAcJyNj D4R0nj0J4A9q5AAk507dlQxbeRaanl9YndblyVdmO6zdyvNm5FTSHuwGEVI5LNSVQM9YpfnSnqk8F49b05LDlpqQn210Fisap7SObi0f0vIJSfpebGozXeisOAG46xBoHf1pO8g1JGfu8Lbah5D2jK0CY4Uh/LmwLwhs/wNrVGwGE2cbG3/7v KmbzGrNrZqBFj8leD7FGaHJTgdHHMONUYO6cfXJlHuFLCAeSPkgzDICN9EKuD6vAxW0A6ktS14qL3sp17fcxRobe9rxuPpR5OiTqwCK6Lzfi7M4VYw3JmPC4Gy/a572OT8cbuFcaTS6DpT7vaUEHKOhljjYvTws3nc6IJS2h5APUxWUtKQBJq 2RlkD5I4sgf5onzf2bc790mRsMzpQbBICaexPllQuXcIaik1mewGhnm Bcgl9RN5qcgYg882SWkwmYyFuRtbfvtxjArnhn6Jr0F9W/g3CwcgoFPatfVA9aWB1/sJUlaqXwnwCtQfLL4 2Wu8D9I NFy4el8JmQIsC PRFTvr22azlISik1xNe41pSKV/cb2OPGUcSWruQ ZFCTL92/6rRq7hbX85wIgCuqEX a76TZgeKPo4eH3levManwaoxMkIgbwv7zKnbUtntfZkwMdUv/tImUCxQT81LJR0vG4WI4SGkrM/OWL9D2MNFHNP4u4MTpzfLB0Nt9j6CRlftsvn7sFY3D0LF881niH5ylRuMOoWfDs5AeUKbazWAZaCbhPdNEgHe1s5gRsU5jG/ qK2p8J4z2CM MHH5 dBxDRBTTfwbv9jMnqIkA7 WZlzPVoM8T5RpEiRb1UsFYe/dznhUkQiBVCzRzH1W5kz7t4c8Aw17v8zNnAsoRtg6wXlGna29 ulL2tA1jma BWpQ0Q9nqKzFgeRN3uqHgbeXHOtM9pknq2Qhcp/YKnac8 xsacpPuhTNUj2AHmqKuRQDLfeJDrgPs1S2PzU2O375XrguWzORizIych3zV0pwqu7WjQuQ8PrrVpQ9NiCv/XMTkhRFquDGuGi2KOnVaFP9TaVYM48MHv3RiQ6xqJ/JReaUIWj lpBCF/R6FxXQ lqNWL5/dIqHMXPLOU4BBJgFvtl604X2R5hCX98rbapbqclDf hfSTj5FkUcahvnN4ZNKyaIbShhvgxEhhj6XMRugAPUkIIJWHlqt6y2rxR rsvD13u4/4rUVyQtiOQZqSXqS/SuyuZ344s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">KAkAAFaqj2RezNQg1dpYv4o5ovCSeAfkiOwogOlee5Yw1M tABzfwFmX5OggR2SdLhUqyilx4QPus DwjkpHmEL8OlCeLuy/BvgVbAM66kvzBJXA27FNX5BQcnWx k4w4AU2CP6y3bV5wxRyADUwA8MI2L6b6joKNHnJdStDy9qz7TMS0cRBpHJwRuENwGWhv4XkRkKhldSWDTrRRt2tyO2FuJWTom9yLaUy9fGTfsECtS4AAn7f43NNbpH4kVe0etzdIyPz5PCpMl7oQlvB rvhvZ5iX2f5XAaZOg/qtqnnqCWKZuAGnDoxrymF8Am40EFtXMRQ3C0KjUwu8wzx/QhmthGFbtZNN62M9d0fD xHXvz3EajuTiXJKjF10EbucIUO7HYhbkC6xwWKEml7SecPeQLXMO3MzqgIiCx6TXT6j5ikfoiXgW0danPAFJfzDKD7k7W4Uf13Ow RYsJ7SJMv15tLS7zH/8ElE/HfKsehEQlNu8Bfyo2JoIaHCBGo8YvLkh5lCImUBNQ5x0xMbH3u6 Emfc ACcHoO2QQdVCbROUdYPA4iTVt/Z6vOHPYj6dkvlaBX837c gaVttr5sjNkgKZMqr311NEHIdFvoEfzEpvIBEDTHbTg 8SCktezCsYkLc8otffLztoIzGsvWXNovVJp5BB1ZAWlli3yjTkTgI2PYc9RNSP8BH5oDMRsIauGU9jxHAUJ78vSDPcSY4Q7CXaTR/lFdLZ1vXXEXsT9FBi8BfOJUkdOvuor3bTHql3TkuYkMrdPBSomMWrw 9Oc25u7yE2wuWAjF0tdE3V6dG20SjjFeo/DFzDLvyWT2/G6bh xzwti9kjpr3z1zyHa5tWGr3Tk2y/dfiJ0 AAqYg7Y1ZPmt9fVQ4hE0t/bC7UXkY1qj Tj71eEBztjc8Hd4uEkZVe2CP89II09CEEoQmZgPC7MRuw1KLWBJkHKTADQ2EMEgRCs3cacb8JNGeyYSfL8 bqgfXd2UWH5f0dr0x PvyGb6H5gyHy13Wuk/EjFbtL/ kztO1qd1NKbqUwfAHuNAnV2ZymzJYNHHY7BVR4kGhjOcsOmjwc3DhnEYmft7MpOnJX0h1Jl8pmtCVBZZclFyqdFVg9YgO8ZTrWAIRkCyb7EB1SX 8Tr9RAxmPDuMUv4Ikdt1Sn5vcxahJPsqusrp73jOeGaoo1mSvtpOL2xQgYzzp3NQUU1fI7EI0Hjpemt/0TFMqa sVmyHq9XxrqsoYFGaNM FD3l62OS3d7WkO98DG98e2ZFI8N0k1s JMHkd/fLRJgQI3kH/DRQR84UsjwWyVNQ6ZaVZBqR22UKYcEHwKvHTkvdZQSNPe/EMPF94PA1rUv AsZxS am5svPh 5qQ1hmXnumW0mZN mgCDgDT9GC2C4a7s3zeitF2seqmXbiVWns3QVrLxAwvk2wztZHh6aRvxp5vA4AfTTqA19xBf9aqznHm6MuWhs66bED1yaC I9IVALlStTkmtJ0500lz4fOv9NG GQInXKMvxhvPgo7W2K2 Dge H7sd5HHDsFUjuiZ awV4eyCIpNY49bg8Mbg7LDDh 6i32qOm2uSnoL1Te13p1ihQ8t59mXPx0CbNhgaGltoDuaIHuNWZZfe0NnXdZkr0V6Xkxxfp23dbndy 3fGoVkwDKOQp2j3fr6XzU9ss8vpl0caC0 CTuwCU/ZVfBT8h5ioZvSLw2bJt2iRnzBZ2ihskAZBp/bFEavwn0j7bH9AtqYGo0ZJuhM4eqeddK4XHhlPUes4HmzLX1Thi7npsJgFLHS1o9RTsDW7zeet 7q9vU9lYkuJS3Zx4W1LlT5G45DV/SuINqjVtZVoZstDBTAhEh 2EFQwNNVkZwVmG 5ve5q1wbrWo HNbUNuMMIotFdAcJyNj D4R0nj0J4A9q5AAk507dlQxbeRaanl9YndblyVdmO6zdyvNm5FTSHuwGEVI5LNSVQM9YpfnSnqk8F49b05LDlpqQn210Fisap7SObi0f0vIJSfpebGozXeisOAG46xBoHf1pO8g1JGfu8Lbah5D2jK0CY4Uh/LmwLwhs/wNrVGwGE2cbG3/7v KmbzGrNrZqBFj8leD7FGaHJTgdHHMONUYO6cfXJlHuFLCAeSPkgzDICN9EKuD6vAxW0A6ktS14qL3sp17fcxRobe9rxuPpR5OiTqwCK6Lzfi7M4VYw3JmPC4Gy/a572OT8cbuFcaTS6DpT7vaUEHKOhljjYvTws3nc6IJS2h5APUxWUtKQBJq 2RlkD5I4sgf5onzf2bc790mRsMzpQbBICaexPllQuXcIaik1mewGhnm Bcgl9RN5qcgYg882SWkwmYyFuRtbfvtxjArnhn6Jr0F9W/g3CwcgoFPatfVA9aWB1/sJUlaqXwnwCtQfLL4 2Wu8D9I NFy4el8JmQIsC PRFTvr22azlISik1xNe41pSKV/cb2OPGUcSWruQ ZFCTL92/6rRq7hbX85wIgCuqEX a76TZgeKPo4eH3levManwaoxMkIgbwv7zKnbUtntfZkwMdUv/tImUCxQT81LJR0vG4WI4SGkrM/OWL9D2MNFHNP4u4MTpzfLB0Nt9j6CRlftsvn7sFY3D0LF881niH5ylRuMOoWfDs5AeUKbazWAZaCbhPdNEgHe1s5gRsU5jG/ qK2p8J4z2CM MHH5 dBxDRBTTfwbv9jMnqIkA7 WZlzPVoM8T5RpEiRb1UsFYe/dznhUkQiBVCzRzH1W5kz7t4c8Aw17v8zNnAsoRtg6wXlGna29 ulL2tA1jma BWpQ0Q9nqKzFgeRN3uqHgbeXHOtM9pknq2Qhcp/YKnac8 xsacpPuhTNUj2AHmqKuRQDLfeJDrgPs1S2PzU2O375XrguWzORizIych3zV0pwqu7WjQuQ8PrrVpQ9NiCv/XMTkhRFquDGuGi2KOnVaFP9TaVYM48MHv3RiQ6xqJ/JReaUIWj lpBCF/R6FxXQ lqNWL5/dIqHMXPLOU4BBJgFvtl604X2R5hCX98rbapbqclDf hfSTj5FkUcahvnN4ZNKyaIbShhvgxEhhj6XMRugAPUkIIJWHlqt6y2rxR rsvD13u4/4rUVyQtiOQZqSXqS/SuyuZ344s</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/as/qrz2a/resume/as/authorization.ping?service_type=telus" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="service_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">service_type</stringProp>
                  <stringProp name="Argument.value">telus</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">as/qrz2a/resume/as/authorization.ping</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">37895.0</stringProp>
              <stringProp name="ConstantTimer.delay">18947.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 37895 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://telusidentity-pp.telus.com/__imp_apg__/api/imp/v1.0/report/?m" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">m</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="3wEAAG7r53WlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJxxPTG8HxcszCx56wfvt/TX1Wtn/QfVPTOvH 65AP0aZwU74UR4sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n TkmdppbcAnacXpe3jqXHrIufpG5OCIwT87KLL80VunICAw227xAobs7niFG9Z8vHNjen8JnXM2LIS3Gu9a l88g1QnKwFhyCIUHx8KHHwHbBMuE0tgZp9Dygywr hh41P7Ug0iVivXEi4QXD8SZ1sQ3/KvFkarre7NsMBet6UtqjEbq1RSqVLid8xUy7KoI8iyx8fFOww1DHC2hiUrwEKx bMLnCyukGzG9xCX j16nGdK3B5UcufHSnAOCKZceTvtP4CZ0hHiq3fshJVuRM4a5uKL33rJl5DPjJf4jxWxRKtMhXyo3IqpOPEgOjs5fDwwcqC5SWR8t8y0pyCHvl8OwNbYrKEQN0eunYZY5qE1SYXd4jbPRDJ4o0TyDY9eo1oWjnoiu28m0X8H9AR0/zvze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1N" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">3wEAAG7r53WlVYZT2NsxtPlhlLDSQA/AvNE/2bBJUZQlnPb4bCKLqSbxuJxxPTG8HxcszCx56wfvt/TX1Wtn/QfVPTOvH 65AP0aZwU74UR4sPzr57JAG4BYImS56Eco4H/Eq4mz0OUnil8oSi0gHJhf2b3SvjVLdzmVaXIEwcCx/nNZ3IZC5HQtFK8BkXWqp4n TkmdppbcAnacXpe3jqXHrIufpG5OCIwT87KLL80VunICAw227xAobs7niFG9Z8vHNjen8JnXM2LIS3Gu9a l88g1QnKwFhyCIUHx8KHHwHbBMuE0tgZp9Dygywr hh41P7Ug0iVivXEi4QXD8SZ1sQ3/KvFkarre7NsMBet6UtqjEbq1RSqVLid8xUy7KoI8iyx8fFOww1DHC2hiUrwEKx bMLnCyukGzG9xCX j16nGdK3B5UcufHSnAOCKZceTvtP4CZ0hHiq3fshJVuRM4a5uKL33rJl5DPjJf4jxWxRKtMhXyo3IqpOPEgOjs5fDwwcqC5SWR8t8y0pyCHvl8OwNbYrKEQN0eunYZY5qE1SYXd4jbPRDJ4o0TyDY9eo1oWjnoiu28m0X8H9AR0/zvze8RNjoknRYGpRU884C20B8MFZZQ22QubE1YmtFyj1N</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">__imp_apg__/api/imp/v1.0/report/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;113&quot;, &quot;Chromium&quot;;v=&quot;113&quot;, &quot;Not-A.Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain,*/*;q=0.9</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>

<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Pacing" elementType="Argument">
            <stringProp name="Argument.name">Pacing</stringProp>
            <stringProp name="Argument.value">${__P(propPIpacing,325)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="max" elementType="Argument">
            <stringProp name="Argument.name">max</stringProp>
            <stringProp name="Argument.value">000014440</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">max value of loyalty_provider_txn field</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">New max value start 135900000034</stringProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="LF_POST_WLN_Redemption_Kong" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <stringProp name="ThreadGroup.start_time"></stringProp>
        <stringProp name="ThreadGroup.end_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x-dynatrace-test</stringProp>
              <stringProp name="Header.value">LSN=WLNLoyaltyAPI;TSN=${__samplerName()};SI=BZM;LTN=WLNLoyaltyAPI;VU=${__threadNum()};</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="GWP_Date_Time.txt" enabled="true">
          <stringProp name="filename">GWP_Date_Time.txt</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">Date_Time </stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="APPLE" enabled="true">
          <stringProp name="CounterConfig.start">${__longSum(${max},701,${__jm__LF_POST_WLN_Redemption_Kong__idx})}</stringProp>
          <stringProp name="CounterConfig.end">${__longSum(${max},720,C2)}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">PTXNID</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
          <stringProp name="TestPlan.comments">take the latest counter value from RWRDST select max(loyalty_prvidr_txn_id) from loyalty_event;</stringProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Compass" enabled="false">
          <stringProp name="CounterConfig.start">${__longSum(${max},701,${__jm__LF_POST_WLN_Redemption_Kong__idx})}</stringProp>
          <stringProp name="CounterConfig.end">${__longSum(${max},850,C2)}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">PTXNID2</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
          <stringProp name="TestPlan.comments">take the latest counter value from RWRDST select max(loyalty_prvidr_txn_id) from loyalty_event;</stringProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="BoosterPack" enabled="true">
          <stringProp name="CounterConfig.start">${__longSum(${max},721,${__jm__LF_POST_WLN_Redemption_Kong__idx})}</stringProp>
          <stringProp name="CounterConfig.end">${__longSum(${max},740,C3)}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">PTXNID3</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
          <stringProp name="TestPlan.comments">take the latest counter value from RWRDST select max(loyalty_prvidr_txn_id) from loyalty_event;</stringProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="ExpansionPack" enabled="true">
          <stringProp name="CounterConfig.start">${__longSum(${max},741,${__jm__LF_POST_WLN_Redemption_Kong__idx})}</stringProp>
          <stringProp name="CounterConfig.end">${__longSum(${max},760,C4)}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">PTXNID4</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
          <stringProp name="TestPlan.comments">take the latest counter value from RWRDST select max(loyalty_prvidr_txn_id) from loyalty_event;</stringProp>
        </CounterConfig>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Samsung" enabled="true">
          <stringProp name="CounterConfig.start">${__longSum(${max},761,${__jm__LF_POST_WLN_Redemption_Kong__idx})}</stringProp>
          <stringProp name="CounterConfig.end">${__longSum(${max},780,C5)}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">PTXNID5</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
          <stringProp name="TestPlan.comments">take the latest counter value from RWRDST select max(loyalty_prvidr_txn_id) from loyalty_event;</stringProp>
        </CounterConfig>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="endTime" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def endTime = dateobj.getTime();
vars.put(&quot;endTime&quot;,endTime.toString())
log.info(&quot;Current date in the specified format: &quot; + endTime);
SampleResult.setIgnore();
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">&quot;${__jm__LF_POST_WLN_Redemption_Kong__idx}&quot; != &quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Pacing Timer" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">${myDelay}</stringProp>
          </TestAction>
          <hashTree>
            <JSR223Timer guiclass="TestBeanGUI" testclass="JSR223Timer" testname="JSR223 Timer" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">Long pacingInput = Long.valueOf(vars.get(&apos;Pacing&apos;))*1000;
Long elapsed = Long.valueOf(vars.get(&apos;endTime&apos;)) - Long.valueOf(vars.get(&apos;startTime&apos;))
Long pacing = pacingInput-elapsed;
if ( pacing &gt; 0 ) 
{
	vars.put(&quot;myDelay&quot;, String.valueOf(pacing));
	return 0;
}
else 
{
	vars.put(&quot;myDelay&quot;, &quot;0&quot;);
	return 0; 
}
</stringProp>
            </JSR223Timer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="startTime" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">def dateobj= new Date();
def startTime = dateobj.getTime();
log.info(&quot;Current date in the specified format: &quot; + startTime);
vars.put(&quot;startTime&quot;,startTime.toString())
SampleResult.setIgnore();</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WLN_T01_FIFA_GWP_SAP_AppleTV_copper" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">Needs to check BAN is in Pgm_enroll table</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WLN_T01_FIFA_GWP_SAP_AppleTV_copper" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerInfo&quot;: {&#xd;
        &quot;customerId&quot;: ${CustomerID},&#xd;
        &quot;firstName&quot;: &quot;${FirstName}&quot;,&#xd;
        &quot;lastName&quot;: &quot;${LastName}&quot;&#xd;
    },&#xd;
    &quot;billingAccountNumber&quot;: ${BAN},&#xd;
    &quot;providerTxnId&quot;: &quot;1400${PTXNID}&quot;,&#xd;
    &quot;redemptionType&quot;: &quot;GWP-10&quot;,&#xd;
    &quot;quantity&quot;: 25,&#xd;
    &quot;dateTime&quot;: &quot;${Date_Time}&quot;,&#xd;
    &quot;barCode&quot;: &quot;9164618333132317527&quot;,&#xd;
    &quot;description&quot;: &quot;Apple TV 4K 32 GB&quot;,&#xd;
    &quot;shippingAddress&quot;: {&#xd;
        &quot;streetNr&quot;: &quot;85&quot;,&#xd;
        &quot;streetName&quot;: &quot;JOHN ST&quot;,&#xd;
        &quot;city&quot;: &quot;MERRITT&quot;,&#xd;
        &quot;country&quot;: &quot;CAN&quot;,&#xd;
        &quot;postcode&quot;: &quot;V0K2B0&quot;,&#xd;
        &quot;stateOrProvince&quot;: &quot;BC&quot;&#xd;
    },&#xd;
    &quot;originatorId&quot;: &quot;123456&quot;,&#xd;
    &quot;status&quot;: &quot;create&quot;,&#xd;
    &quot;shippingContact&quot;: {&#xd;
        &quot;phoneNumber&quot;: &quot;6047105322&quot;,&#xd;
        &quot;email&quot;: &quot;sap@test.com&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rest/it04/customer/LoyaltyFulfillmentAPI_v1_0_RP/redemption/fulfill</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic Q0FNUE1HTVQ6c29hb3JnaWQ=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get EventID_Create" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">EventID_Create</stringProp>
              <stringProp name="RegexExtractor.regex">(.*?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="FIFA_GWP_SAP_AppleTV_copper.txt" enabled="true">
              <stringProp name="filename">FIFA_GWP_SAP_AppleTV_copper.txt</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">BAN,CustomerID,FirstName,LastName</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WLN_T01_FIFA_GWP_SAP_BoosterPack_copper" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">Needs to check BAN is in Pgm_enroll table</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WLN_T01_FIFA_GWP_SAP_BoosterPack_copper" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerInfo&quot;: {&#xd;
        &quot;customerId&quot;: ${CustomerID},&#xd;
        &quot;firstName&quot;: &quot;${FirstName}&quot;,&#xd;
        &quot;lastName&quot;: &quot;${LastName}&quot;&#xd;
    },&#xd;
    &quot;billingAccountNumber&quot;: ${BAN},&#xd;
    &quot;providerTxnId&quot;: &quot;1400${PTXNID3}&quot;,&#xd;
    &quot;redemptionType&quot;: &quot;GWP-9&quot;,&#xd;
    &quot;quantity&quot;: 25,&#xd;
    &quot;dateTime&quot;: &quot;${Date_Time}&quot;,&#xd;
    &quot;barCode&quot;: &quot;9164618105466675401&quot;,&#xd;
    &quot;description&quot;: &quot;TELUS Boost Wi-Fi Starter Pack&quot;,&#xd;
    &quot;shippingAddress&quot;: {&#xd;
        &quot;streetNr&quot;: &quot;85&quot;,&#xd;
        &quot;streetName&quot;: &quot;JOHN ST&quot;,&#xd;
        &quot;city&quot;: &quot;MERRITT&quot;,&#xd;
        &quot;country&quot;: &quot;CAN&quot;,&#xd;
        &quot;postcode&quot;: &quot;V0K2B0&quot;,&#xd;
        &quot;stateOrProvince&quot;: &quot;BC&quot;&#xd;
    },&#xd;
    &quot;originatorId&quot;: &quot;123456&quot;,&#xd;
    &quot;status&quot;: &quot;create&quot;,&#xd;
    &quot;shippingContact&quot;: {&#xd;
        &quot;phoneNumber&quot;: &quot;6047105322&quot;,&#xd;
        &quot;email&quot;: &quot;sap@test.com&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rest/it04/customer/LoyaltyFulfillmentAPI_v1_0_RP/redemption/fulfill</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic Q0FNUE1HTVQ6c29hb3JnaWQ=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get EventID_Create" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">EventID_Create</stringProp>
              <stringProp name="RegexExtractor.regex">(.*?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="FIFA_GWP_SAP_BoosterPack_copper.txt" enabled="true">
            <stringProp name="filename">FIFA_GWP_SAP_BoosterPack_copper.txt</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">BAN,CustomerID,FirstName,LastName</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WLN_T01_FIFA_GWP_SAP_ExpansionPack_copper" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">Needs to check BAN is in Pgm_enroll table</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WLN_T01_FIFA_GWP_SAP_ExpansionPack_copper" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerInfo&quot;: {&#xd;
        &quot;customerId&quot;: ${CustomerID},&#xd;
        &quot;firstName&quot;: &quot;${FirstName}&quot;,&#xd;
        &quot;lastName&quot;: &quot;${LastName}&quot;&#xd;
    },&#xd;
    &quot;billingAccountNumber&quot;: ${BAN},&#xd;
    &quot;providerTxnId&quot;: &quot;1400${PTXNID4}&quot;,&#xd;
    &quot;redemptionType&quot;: &quot;GWP-8&quot;,&#xd;
    &quot;quantity&quot;: 25,&#xd;
    &quot;dateTime&quot;: &quot;${Date_Time}&quot;,&#xd;
    &quot;barCode&quot;: &quot;9164617963924317516&quot;,&#xd;
    &quot;description&quot;: &quot;TELUS Boost Wi-Fi Expansion Pack&quot;,&#xd;
    &quot;shippingAddress&quot;: {&#xd;
        &quot;streetNr&quot;: &quot;85&quot;,&#xd;
        &quot;streetName&quot;: &quot;JOHN ST&quot;,&#xd;
        &quot;city&quot;: &quot;MERRITT&quot;,&#xd;
        &quot;country&quot;: &quot;CAN&quot;,&#xd;
        &quot;postcode&quot;: &quot;V0K2B0&quot;,&#xd;
        &quot;stateOrProvince&quot;: &quot;BC&quot;&#xd;
    },&#xd;
    &quot;originatorId&quot;: &quot;123456&quot;,&#xd;
    &quot;status&quot;: &quot;create&quot;,&#xd;
    &quot;shippingContact&quot;: {&#xd;
        &quot;phoneNumber&quot;: &quot;6047105322&quot;,&#xd;
        &quot;email&quot;: &quot;sap@test.com&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rest/it04/customer/LoyaltyFulfillmentAPI_v1_0_RP/redemption/fulfill</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic Q0FNUE1HTVQ6c29hb3JnaWQ=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get EventID_Create" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">EventID_Create</stringProp>
              <stringProp name="RegexExtractor.regex">(.*?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="FIFA_GWP_SAP_ExpansionPack_copper.txt" enabled="true">
            <stringProp name="filename">FIFA_GWP_SAP_ExpansionPack_copper.txt</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">BAN,CustomerID,FirstName,LastName</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WLN_T01_FIFA_GWP_Samsung_copper" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">Needs to check BAN is in Pgm_enroll table</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WLN_T01_FIFA_GWP_Samsung_copper" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;customerInfo&quot;: {&#xd;
        &quot;customerId&quot;: ${CustomerID},&#xd;
        &quot;firstName&quot;: &quot;Test&quot;,&#xd;
        &quot;lastName&quot;: &quot;TestPerfSamsung&quot;&#xd;
    },&#xd;
    &quot;billingAccountNumber&quot;: ${BAN},&#xd;
    &quot;providerTxnId&quot;: &quot;1400${PTXNID5}&quot;,&#xd;
    &quot;redemptionType&quot;: &quot;GWP-15&quot;,&#xd;
    &quot;quantity&quot;: 25,&#xd;
    &quot;dateTime&quot;: &quot;${Date_Time}&quot;,&#xd;
    &quot;barCode&quot;: &quot;9165902385891160872&quot;,&#xd;
    &quot;description&quot;: &quot;55 Samsung 4K HDR Smart TV&quot;,&#xd;
    &quot;shippingAddress&quot;: {&#xd;
        &quot;streetNr&quot;: &quot;85&quot;,&#xd;
        &quot;streetName&quot;: &quot;JOHN ST&quot;,&#xd;
        &quot;city&quot;: &quot;MERRITT&quot;,&#xd;
        &quot;country&quot;: &quot;CAN&quot;,&#xd;
        &quot;postcode&quot;: &quot;V0K2B0&quot;,&#xd;
        &quot;stateOrProvince&quot;: &quot;BC&quot;&#xd;
    },&#xd;
    &quot;originatorId&quot;: &quot;123456&quot;,&#xd;
    &quot;status&quot;: &quot;create&quot;,&#xd;
    &quot;shippingContact&quot;: {&#xd;
        &quot;phoneNumber&quot;: &quot;6047105322&quot;,&#xd;
        &quot;email&quot;: &quot;sap@test.com&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/rest/it04/customer/LoyaltyFulfillmentAPI_v1_0_RP/redemption/fulfill</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic Q0FNUE1HTVQ6c29hb3JnaWQ=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get EventID_Create" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">EventID_Create</stringProp>
              <stringProp name="RegexExtractor.regex">(.*?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="FIFA_GWP_Samsung_copper.txt" enabled="true">
            <stringProp name="filename">FIFA_GWP_Samsung_copper.txt</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">BAN,CustomerID,FirstName,LastName</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Samsung_TPH_Controller_copper" enabled="false">
          <stringProp name="IfController.condition">${__groovy(((vars.getIteration()) % 12) == 0) }</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="GET__TPH_Controller" enabled="false">
          <stringProp name="IfController.condition">${__groovy(((vars.getIteration()) % 2) == 0) }</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WLN_T02_GET_GWP_FIFA" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">Bosster_PAck_TXN ID</stringProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WLN_T02_GET_GWP_FIFA" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/rest/it04/customer/LoyaltyFulfillmentAPI_v1_0_RP/redemption/fulfill?providerTxnId=${PTXNID3}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic Q0FNUE1HTVQ6c29hb3JnaWQ=</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TransactionID" enabled="false">
              <stringProp name="filename">GWP_TxnID.csv</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">pProviderTxnID</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="GET__TPH_Controller" enabled="false">
          <stringProp name="IfController.condition">${__groovy(((vars.getIteration()) % 3) == 0) }</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="WLN_T02_GET_GWP_FIFA" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">APPLW_TXN_ID</stringProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WLN_T02_GET_GWP_FIFA" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">apigw-st.tsl.telus.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/rest/it04/customer/LoyaltyFulfillmentAPI_v1_0_RP/redemption/fulfill?providerTxnId=${PTXNID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic Q0FNUE1HTVQ6c29hb3JnaWQ=</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TransactionID" enabled="false">
              <stringProp name="filename">GWP_TxnID.csv</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">pProviderTxnID</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\sumit.kumar10\Downloads\artifacts (68)\Success.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
